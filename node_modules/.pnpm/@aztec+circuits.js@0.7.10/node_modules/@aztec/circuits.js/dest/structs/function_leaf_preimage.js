import { FunctionSelector } from '@aztec/foundation/abi';
import { BufferReader } from '@aztec/foundation/serialize';
import { serializeToBuffer } from '../utils/serialize.js';
/**
 * A class representing the "preimage" of a function tree leaf.
 * @see abis/function_leaf_preimage.hpp
 */
export class FunctionLeafPreimage {
    constructor(
    /**
     * Function selector.
     */
    functionSelector, 
    /**
     * Indicates whether the function is only callable by self or not.
     */
    isInternal, 
    /**
     * Indicates whether the function is private or public.
     */
    isPrivate, 
    /**
     * Verification key hash of the function.
     */
    vkHash, 
    /**
     * Hash of the ACIR of the function.
     */
    acirHash) {
        this.functionSelector = functionSelector;
        this.isInternal = isInternal;
        this.isPrivate = isPrivate;
        this.vkHash = vkHash;
        this.acirHash = acirHash;
    }
    /**
     * Serialize this as a buffer.
     * @returns The buffer.
     */
    toBuffer() {
        return serializeToBuffer(this.functionSelector, this.isInternal, this.isPrivate, this.vkHash, this.acirHash);
    }
    /**
     * Deserializes from a buffer or reader, corresponding to a write in cpp.
     * @param buffer - Buffer or reader to read from.
     * @returns A new instance of FunctionLeafPreimage.
     */
    static fromBuffer(buffer) {
        const reader = BufferReader.asReader(buffer);
        return new FunctionLeafPreimage(reader.readObject(FunctionSelector), reader.readBoolean(), reader.readBoolean(), reader.readFr(), reader.readFr());
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Rpb25fbGVhZl9wcmVpbWFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHJ1Y3RzL2Z1bmN0aW9uX2xlYWZfcHJlaW1hZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRTNELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTFEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxvQkFBb0I7SUFDL0I7SUFDRTs7T0FFRztJQUNJLGdCQUFrQztJQUN6Qzs7T0FFRztJQUNJLFVBQW1CO0lBQzFCOztPQUVHO0lBQ0ksU0FBa0I7SUFDekI7O09BRUc7SUFDSSxNQUFVO0lBQ2pCOztPQUVHO0lBQ0ksUUFBWTtRQWhCWixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBSWxDLGVBQVUsR0FBVixVQUFVLENBQVM7UUFJbkIsY0FBUyxHQUFULFNBQVMsQ0FBUztRQUlsQixXQUFNLEdBQU4sTUFBTSxDQUFJO1FBSVYsYUFBUSxHQUFSLFFBQVEsQ0FBSTtJQUNsQixDQUFDO0lBRUo7OztPQUdHO0lBQ0gsUUFBUTtRQUNOLE9BQU8saUJBQWlCLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvRyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBNkI7UUFDN0MsTUFBTSxNQUFNLEdBQUcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3QyxPQUFPLElBQUksb0JBQW9CLENBQzdCLE1BQU0sQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsRUFDbkMsTUFBTSxDQUFDLFdBQVcsRUFBRSxFQUNwQixNQUFNLENBQUMsV0FBVyxFQUFFLEVBQ3BCLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFDZixNQUFNLENBQUMsTUFBTSxFQUFFLENBQ2hCLENBQUM7SUFDSixDQUFDO0NBQ0YifQ==