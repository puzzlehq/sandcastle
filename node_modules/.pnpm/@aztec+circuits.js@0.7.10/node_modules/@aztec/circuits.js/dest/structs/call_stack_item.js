import { AztecAddress } from '@aztec/foundation/aztec-address';
import { computePublicCallStackItemHash } from '../abis/abis.js';
import { CircuitsWasm } from '../index.js';
import { serializeToBuffer } from '../utils/serialize.js';
import { FunctionData } from './function_data.js';
import { PrivateCircuitPublicInputs } from './private_circuit_public_inputs.js';
import { PublicCircuitPublicInputs } from './public_circuit_public_inputs.js';
/**
 * Call stack item on a private call.
 * @see cpp/src/aztec3/circuits/abis/call_stack_item.hpp.
 */
export class PrivateCallStackItem {
    constructor(
    /**
     * Address of the contract on which the function is invoked.
     */
    contractAddress, 
    /**
     * Data identifying the function being called.
     */
    functionData, 
    /**
     * Public inputs to the private kernel circuit.
     */
    publicInputs, 
    /**
     * Whether the current callstack item should be considered a public fn execution request.
     */
    isExecutionRequest) {
        this.contractAddress = contractAddress;
        this.functionData = functionData;
        this.publicInputs = publicInputs;
        this.isExecutionRequest = isExecutionRequest;
        if (isExecutionRequest) {
            throw new Error('boolean isExecutionRequest must be set to true for a PrivateCallStackItem object');
        }
    }
    toBuffer() {
        return serializeToBuffer(this.contractAddress, this.functionData, this.publicInputs, this.isExecutionRequest);
    }
    /**
     * Returns a new instance of PrivateCallStackItem with zero contract address, function data and public inputs.
     * @returns A new instance of PrivateCallStackItem with zero contract address, function data and public inputs.
     */
    static empty() {
        return new PrivateCallStackItem(AztecAddress.ZERO, FunctionData.empty({ isPrivate: true }), PrivateCircuitPublicInputs.empty(), false);
    }
}
/**
 * Call stack item on a public call.
 * @see cpp/src/aztec3/circuits/abis/call_stack_item.hpp.
 */
export class PublicCallStackItem {
    constructor(
    /**
     * Address of the contract on which the function is invoked.
     */
    contractAddress, 
    /**
     * Data identifying the function being called.
     */
    functionData, 
    /**
     * Public inputs to the public kernel circuit.
     */
    publicInputs, 
    /**
     * Whether the current callstack item should be considered a public fn execution request.
     */
    isExecutionRequest) {
        this.contractAddress = contractAddress;
        this.functionData = functionData;
        this.publicInputs = publicInputs;
        this.isExecutionRequest = isExecutionRequest;
    }
    toBuffer() {
        return serializeToBuffer(this.contractAddress, this.functionData, this.publicInputs, this.isExecutionRequest);
    }
    /**
     * Returns a new instance of PublicCallStackItem with zero contract address, function data and public inputs.
     * @returns A new instance of PublicCallStackItem with zero contract address, function data and public inputs.
     */
    static empty() {
        return new PublicCallStackItem(AztecAddress.ZERO, FunctionData.empty({ isPrivate: false }), PublicCircuitPublicInputs.empty(), false);
    }
    isEmpty() {
        return this.contractAddress.isZero() && this.functionData.isEmpty() && this.publicInputs.isEmpty();
    }
    /**
     * Computes this call stack item hash.
     * @returns Hash.
     */
    async hash() {
        return computePublicCallStackItemHash(await CircuitsWasm.get(), this);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsbF9zdGFja19pdGVtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3N0cnVjdHMvY2FsbF9zdGFja19pdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUUvRCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNoRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUU5RTs7O0dBR0c7QUFDSCxNQUFNLE9BQU8sb0JBQW9CO0lBQy9CO0lBQ0U7O09BRUc7SUFDSSxlQUE2QjtJQUNwQzs7T0FFRztJQUNJLFlBQTBCO0lBQ2pDOztPQUVHO0lBQ0ksWUFBd0M7SUFDL0M7O09BRUc7SUFDYSxrQkFBMkI7UUFacEMsb0JBQWUsR0FBZixlQUFlLENBQWM7UUFJN0IsaUJBQVksR0FBWixZQUFZLENBQWM7UUFJMUIsaUJBQVksR0FBWixZQUFZLENBQTRCO1FBSS9CLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBUztRQUUzQyxJQUFJLGtCQUFrQixFQUFFO1lBQ3RCLE1BQU0sSUFBSSxLQUFLLENBQUMsa0ZBQWtGLENBQUMsQ0FBQztTQUNyRztJQUNILENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUNoSCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLEtBQUs7UUFDakIsT0FBTyxJQUFJLG9CQUFvQixDQUM3QixZQUFZLENBQUMsSUFBSSxFQUNqQixZQUFZLENBQUMsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQ3ZDLDBCQUEwQixDQUFDLEtBQUssRUFBRSxFQUNsQyxLQUFLLENBQ04sQ0FBQztJQUNKLENBQUM7Q0FDRjtBQUVEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxtQkFBbUI7SUFDOUI7SUFDRTs7T0FFRztJQUNJLGVBQTZCO0lBQ3BDOztPQUVHO0lBQ0ksWUFBMEI7SUFDakM7O09BRUc7SUFDSSxZQUF1QztJQUM5Qzs7T0FFRztJQUNJLGtCQUEyQjtRQVozQixvQkFBZSxHQUFmLGVBQWUsQ0FBYztRQUk3QixpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUkxQixpQkFBWSxHQUFaLFlBQVksQ0FBMkI7UUFJdkMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFTO0lBQ2pDLENBQUM7SUFFSixRQUFRO1FBQ04sT0FBTyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUNoSCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLEtBQUs7UUFDakIsT0FBTyxJQUFJLG1CQUFtQixDQUM1QixZQUFZLENBQUMsSUFBSSxFQUNqQixZQUFZLENBQUMsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQ3hDLHlCQUF5QixDQUFDLEtBQUssRUFBRSxFQUNqQyxLQUFLLENBQ04sQ0FBQztJQUNKLENBQUM7SUFFRCxPQUFPO1FBQ0wsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNyRyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksS0FBSyxDQUFDLElBQUk7UUFDZixPQUFPLDhCQUE4QixDQUFDLE1BQU0sWUFBWSxDQUFDLEdBQUcsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3hFLENBQUM7Q0FDRiJ9