/// <reference types="node" resolution-mode="require"/>
import { IWasmModule } from '@aztec/foundation/wasm';
import { Fr, GrumpkinScalar, Point } from '../../../index.js';
/**
 * Grumpkin elliptic curve operations.
 */
export declare class Grumpkin {
    private wasm;
    /**
     * Creates a new Grumpkin instance.
     * @returns New Grumpkin instance.
     */
    static new(): Promise<Grumpkin>;
    constructor(wasm: IWasmModule);
    static generator: Point;
    /**
     * Point generator
     * @returns The generator for the curve.
     */
    generator(): Point;
    /**
     * Multiplies a point by a scalar (adds the point `scalar` amount of times).
     * @param point - Point to multiply.
     * @param scalar - Scalar to multiply by.
     * @returns Result of the multiplication.
     */
    mul(point: Point, scalar: GrumpkinScalar): Point;
    /**
     * Multiplies a set of points by a scalar.
     * @param points - Points to multiply.
     * @param scalar - Scalar to multiply by.
     * @returns Points multiplied by the scalar.
     */
    batchMul(points: Point[], scalar: GrumpkinScalar): Point[];
    /**
     * Gets a random field element.
     * @returns Random field element.
     */
    getRandomFr(): Fr;
    /**
     * Converts a 512 bits long buffer to a field.
     * @param uint512Buf - The buffer to convert.
     * @returns Buffer representation of the field element.
     */
    reduce512BufferToFr(uint512Buf: Buffer): Fr;
}
//# sourceMappingURL=index.d.ts.map