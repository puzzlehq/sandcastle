import { CompleteAddress, EthAddress, MAX_NEW_CONTRACTS_PER_TX, MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX, Proof, } from '@aztec/circuits.js';
import { makePrivateKernelPublicInputsFinal, makePublicCallRequest } from '@aztec/circuits.js/factories';
import { randomBytes } from '@aztec/foundation/crypto';
import times from 'lodash.times';
import { ExtendedContractData, FunctionL2Logs, TxL2Logs } from './index.js';
import { Tx } from './tx/index.js';
/**
 * Testing utility to create empty logs composed from a single empty log.
 */
export function makeEmptyLogs() {
    const functionLogs = [new FunctionL2Logs([Buffer.alloc(0)])];
    return new TxL2Logs(functionLogs);
}
export const mockTx = (seed = 1) => {
    return new Tx(makePrivateKernelPublicInputsFinal(seed), new Proof(Buffer.alloc(0)), TxL2Logs.random(8, 3), // 8 priv function invocations creating 3 encrypted logs each
    TxL2Logs.random(11, 2), // 8 priv + 3 pub function invocations creating 2 unencrypted logs each
    times(MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX, makePublicCallRequest), times(MAX_NEW_CONTRACTS_PER_TX, ExtendedContractData.random));
};
export const randomContractAbi = () => ({
    name: randomBytes(4).toString('hex'),
    functions: [],
});
export const randomDeployedContract = async () => ({
    abi: randomContractAbi(),
    completeAddress: await CompleteAddress.random(),
    portalContract: EthAddress.random(),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9ja3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbW9ja3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLGVBQWUsRUFDZixVQUFVLEVBQ1Ysd0JBQXdCLEVBQ3hCLG1DQUFtQyxFQUNuQyxLQUFLLEdBQ04sTUFBTSxvQkFBb0IsQ0FBQztBQUM1QixPQUFPLEVBQUUsa0NBQWtDLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUV6RyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFHdkQsT0FBTyxLQUFLLE1BQU0sY0FBYyxDQUFDO0FBRWpDLE9BQU8sRUFBb0Isb0JBQW9CLEVBQUUsY0FBYyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM5RixPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRW5DOztHQUVHO0FBQ0gsTUFBTSxVQUFVLGFBQWE7SUFDM0IsTUFBTSxZQUFZLEdBQUcsQ0FBQyxJQUFJLGNBQWMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDN0QsT0FBTyxJQUFJLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUNwQyxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sTUFBTSxHQUFHLENBQUMsSUFBSSxHQUFHLENBQUMsRUFBRSxFQUFFO0lBQ2pDLE9BQU8sSUFBSSxFQUFFLENBQ1gsa0NBQWtDLENBQUMsSUFBSSxDQUFDLEVBQ3hDLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFDMUIsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsNkRBQTZEO0lBQ3BGLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLHVFQUF1RTtJQUMvRixLQUFLLENBQUMsbUNBQW1DLEVBQUUscUJBQXFCLENBQUMsRUFDakUsS0FBSyxDQUFDLHdCQUF3QixFQUFFLG9CQUFvQixDQUFDLE1BQU0sQ0FHMUQsQ0FDRixDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsR0FBZ0IsRUFBRSxDQUFDLENBQUM7SUFDbkQsSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO0lBQ3BDLFNBQVMsRUFBRSxFQUFFO0NBQ2QsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsS0FBSyxJQUErQixFQUFFLENBQUMsQ0FBQztJQUM1RSxHQUFHLEVBQUUsaUJBQWlCLEVBQUU7SUFDeEIsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDLE1BQU0sRUFBRTtJQUMvQyxjQUFjLEVBQUUsVUFBVSxDQUFDLE1BQU0sRUFBRTtDQUNwQyxDQUFDLENBQUMifQ==