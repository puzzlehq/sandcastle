/*! For license information please see main.js.LICENSE.txt */
var e={4782:(e,t)=>{t.byteLength=function(e){var t=c(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,i=c(e),s=i[0],o=i[1],f=new a(function(e,t,r){return 3*(t+r)/4-r}(0,s,o)),l=0,d=o>0?s-4:s;for(r=0;r<d;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],f[l++]=t>>16&255,f[l++]=t>>8&255,f[l++]=255&t;return 2===o&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,f[l++]=255&t),1===o&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,f[l++]=t>>8&255,f[l++]=255&t),f},t.fromByteArray=function(e){for(var t,n=e.length,a=n%3,i=[],s=16383,c=0,f=n-a;c<f;c+=s)i.push(o(e,c,c+s>f?f:c+s));return 1===a?(t=e[n-1],i.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],i.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"=")),i.join("")};for(var r=[],n=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0;s<64;++s)r[s]=i[s],n[i.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function o(e,t,n){for(var a,i,s=[],c=t;c<n;c+=3)a=(e[c]<<16&16711680)+(e[c+1]<<8&65280)+(255&e[c+2]),s.push(r[(i=a)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return s.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},238:(e,t,r)=>{var n=r(7172).Buffer;function a(e){n.isBuffer(e)||(e=n.from(e));for(var t=e.length/4|0,r=new Array(t),a=0;a<t;a++)r[a]=e.readUInt32BE(4*a);return r}function i(e){for(;0<e.length;e++)e[0]=0}function s(e,t,r,n,a){for(var i,s,c,o,f=r[0],l=r[1],d=r[2],u=r[3],h=e[0]^t[0],b=e[1]^t[1],p=e[2]^t[2],y=e[3]^t[3],m=4,g=1;g<a;g++)i=f[h>>>24]^l[b>>>16&255]^d[p>>>8&255]^u[255&y]^t[m++],s=f[b>>>24]^l[p>>>16&255]^d[y>>>8&255]^u[255&h]^t[m++],c=f[p>>>24]^l[y>>>16&255]^d[h>>>8&255]^u[255&b]^t[m++],o=f[y>>>24]^l[h>>>16&255]^d[b>>>8&255]^u[255&p]^t[m++],h=i,b=s,p=c,y=o;return i=(n[h>>>24]<<24|n[b>>>16&255]<<16|n[p>>>8&255]<<8|n[255&y])^t[m++],s=(n[b>>>24]<<24|n[p>>>16&255]<<16|n[y>>>8&255]<<8|n[255&h])^t[m++],c=(n[p>>>24]<<24|n[y>>>16&255]<<16|n[h>>>8&255]<<8|n[255&b])^t[m++],o=(n[y>>>24]<<24|n[h>>>16&255]<<16|n[b>>>8&255]<<8|n[255&p])^t[m++],[i>>>=0,s>>>=0,c>>>=0,o>>>=0]}var c=[0,1,2,4,8,16,32,64,128,27,54],o=function(){for(var e=new Array(256),t=0;t<256;t++)e[t]=t<128?t<<1:t<<1^283;for(var r=[],n=[],a=[[],[],[],[]],i=[[],[],[],[]],s=0,c=0,o=0;o<256;++o){var f=c^c<<1^c<<2^c<<3^c<<4;f=f>>>8^255&f^99,r[s]=f,n[f]=s;var l=e[s],d=e[l],u=e[d],h=257*e[f]^16843008*f;a[0][s]=h<<24|h>>>8,a[1][s]=h<<16|h>>>16,a[2][s]=h<<8|h>>>24,a[3][s]=h,h=16843009*u^65537*d^257*l^16843008*s,i[0][f]=h<<24|h>>>8,i[1][f]=h<<16|h>>>16,i[2][f]=h<<8|h>>>24,i[3][f]=h,0===s?s=c=1:(s=l^e[e[e[u^l]]],c^=e[e[c]])}return{SBOX:r,INV_SBOX:n,SUB_MIX:a,INV_SUB_MIX:i}}();function f(e){this._key=a(e),this._reset()}f.blockSize=16,f.keySize=32,f.prototype.blockSize=f.blockSize,f.prototype.keySize=f.keySize,f.prototype._reset=function(){for(var e=this._key,t=e.length,r=t+6,n=4*(r+1),a=[],i=0;i<t;i++)a[i]=e[i];for(i=t;i<n;i++){var s=a[i-1];i%t==0?(s=s<<8|s>>>24,s=o.SBOX[s>>>24]<<24|o.SBOX[s>>>16&255]<<16|o.SBOX[s>>>8&255]<<8|o.SBOX[255&s],s^=c[i/t|0]<<24):t>6&&i%t==4&&(s=o.SBOX[s>>>24]<<24|o.SBOX[s>>>16&255]<<16|o.SBOX[s>>>8&255]<<8|o.SBOX[255&s]),a[i]=a[i-t]^s}for(var f=[],l=0;l<n;l++){var d=n-l,u=a[d-(l%4?0:4)];f[l]=l<4||d<=4?u:o.INV_SUB_MIX[0][o.SBOX[u>>>24]]^o.INV_SUB_MIX[1][o.SBOX[u>>>16&255]]^o.INV_SUB_MIX[2][o.SBOX[u>>>8&255]]^o.INV_SUB_MIX[3][o.SBOX[255&u]]}this._nRounds=r,this._keySchedule=a,this._invKeySchedule=f},f.prototype.encryptBlockRaw=function(e){return s(e=a(e),this._keySchedule,o.SUB_MIX,o.SBOX,this._nRounds)},f.prototype.encryptBlock=function(e){var t=this.encryptBlockRaw(e),r=n.allocUnsafe(16);return r.writeUInt32BE(t[0],0),r.writeUInt32BE(t[1],4),r.writeUInt32BE(t[2],8),r.writeUInt32BE(t[3],12),r},f.prototype.decryptBlock=function(e){var t=(e=a(e))[1];e[1]=e[3],e[3]=t;var r=s(e,this._invKeySchedule,o.INV_SUB_MIX,o.INV_SBOX,this._nRounds),i=n.allocUnsafe(16);return i.writeUInt32BE(r[0],0),i.writeUInt32BE(r[3],4),i.writeUInt32BE(r[2],8),i.writeUInt32BE(r[1],12),i},f.prototype.scrub=function(){i(this._keySchedule),i(this._invKeySchedule),i(this._key)},e.exports.AES=f},8587:(e,t,r)=>{var n=r(238),a=r(7172).Buffer,i=r(3081),s=r(87),c=r(1219),o=r(7752),f=r(3480);function l(e,t,r,s){i.call(this);var o=a.alloc(4,0);this._cipher=new n.AES(t);var l=this._cipher.encryptBlock(o);this._ghash=new c(l),r=function(e,t,r){if(12===t.length)return e._finID=a.concat([t,a.from([0,0,0,1])]),a.concat([t,a.from([0,0,0,2])]);var n=new c(r),i=t.length,s=i%16;n.update(t),s&&(s=16-s,n.update(a.alloc(s,0))),n.update(a.alloc(8,0));var o=8*i,l=a.alloc(8);l.writeUIntBE(o,0,8),n.update(l),e._finID=n.state;var d=a.from(e._finID);return f(d),d}(this,r,l),this._prev=a.from(r),this._cache=a.allocUnsafe(0),this._secCache=a.allocUnsafe(0),this._decrypt=s,this._alen=0,this._len=0,this._mode=e,this._authTag=null,this._called=!1}s(l,i),l.prototype._update=function(e){if(!this._called&&this._alen){var t=16-this._alen%16;t<16&&(t=a.alloc(t,0),this._ghash.update(t))}this._called=!0;var r=this._mode.encrypt(this,e);return this._decrypt?this._ghash.update(e):this._ghash.update(r),this._len+=e.length,r},l.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error("Unsupported state or unable to authenticate data");var e=o(this._ghash.final(8*this._alen,8*this._len),this._cipher.encryptBlock(this._finID));if(this._decrypt&&function(e,t){var r=0;e.length!==t.length&&r++;for(var n=Math.min(e.length,t.length),a=0;a<n;++a)r+=e[a]^t[a];return r}(e,this._authTag))throw new Error("Unsupported state or unable to authenticate data");this._authTag=e,this._cipher.scrub()},l.prototype.getAuthTag=function(){if(this._decrypt||!a.isBuffer(this._authTag))throw new Error("Attempting to get auth tag in unsupported state");return this._authTag},l.prototype.setAuthTag=function(e){if(!this._decrypt)throw new Error("Attempting to set auth tag in unsupported state");this._authTag=e},l.prototype.setAAD=function(e){if(this._called)throw new Error("Attempting to set AAD in unsupported state");this._ghash.update(e),this._alen+=e.length},e.exports=l},8901:(e,t,r)=>{var n=r(3615),a=r(2576),i=r(4636);t.createCipher=t.Cipher=n.createCipher,t.createCipheriv=t.Cipheriv=n.createCipheriv,t.createDecipher=t.Decipher=a.createDecipher,t.createDecipheriv=t.Decipheriv=a.createDecipheriv,t.listCiphers=t.getCiphers=function(){return Object.keys(i)}},2576:(e,t,r)=>{var n=r(8587),a=r(7172).Buffer,i=r(3834),s=r(2385),c=r(3081),o=r(238),f=r(5883);function l(e,t,r){c.call(this),this._cache=new d,this._last=void 0,this._cipher=new o.AES(t),this._prev=a.from(r),this._mode=e,this._autopadding=!0}function d(){this.cache=a.allocUnsafe(0)}function u(e,t,r){var c=i[e.toLowerCase()];if(!c)throw new TypeError("invalid suite type");if("string"==typeof r&&(r=a.from(r)),"GCM"!==c.mode&&r.length!==c.iv)throw new TypeError("invalid iv length "+r.length);if("string"==typeof t&&(t=a.from(t)),t.length!==c.key/8)throw new TypeError("invalid key length "+t.length);return"stream"===c.type?new s(c.module,t,r,!0):"auth"===c.type?new n(c.module,t,r,!0):new l(c.module,t,r)}r(87)(l,c),l.prototype._update=function(e){var t,r;this._cache.add(e);for(var n=[];t=this._cache.get(this._autopadding);)r=this._mode.decrypt(this,t),n.push(r);return a.concat(n)},l.prototype._final=function(){var e=this._cache.flush();if(this._autopadding)return function(e){var t=e[15];if(t<1||t>16)throw new Error("unable to decrypt data");for(var r=-1;++r<t;)if(e[r+(16-t)]!==t)throw new Error("unable to decrypt data");if(16!==t)return e.slice(0,16-t)}(this._mode.decrypt(this,e));if(e)throw new Error("data not multiple of block length")},l.prototype.setAutoPadding=function(e){return this._autopadding=!!e,this},d.prototype.add=function(e){this.cache=a.concat([this.cache,e])},d.prototype.get=function(e){var t;if(e){if(this.cache.length>16)return t=this.cache.slice(0,16),this.cache=this.cache.slice(16),t}else if(this.cache.length>=16)return t=this.cache.slice(0,16),this.cache=this.cache.slice(16),t;return null},d.prototype.flush=function(){if(this.cache.length)return this.cache},t.createDecipher=function(e,t){var r=i[e.toLowerCase()];if(!r)throw new TypeError("invalid suite type");var n=f(t,!1,r.key,r.iv);return u(e,n.key,n.iv)},t.createDecipheriv=u},3615:(e,t,r)=>{var n=r(3834),a=r(8587),i=r(7172).Buffer,s=r(2385),c=r(3081),o=r(238),f=r(5883);function l(e,t,r){c.call(this),this._cache=new u,this._cipher=new o.AES(t),this._prev=i.from(r),this._mode=e,this._autopadding=!0}r(87)(l,c),l.prototype._update=function(e){var t,r;this._cache.add(e);for(var n=[];t=this._cache.get();)r=this._mode.encrypt(this,t),n.push(r);return i.concat(n)};var d=i.alloc(16,16);function u(){this.cache=i.allocUnsafe(0)}function h(e,t,r){var c=n[e.toLowerCase()];if(!c)throw new TypeError("invalid suite type");if("string"==typeof t&&(t=i.from(t)),t.length!==c.key/8)throw new TypeError("invalid key length "+t.length);if("string"==typeof r&&(r=i.from(r)),"GCM"!==c.mode&&r.length!==c.iv)throw new TypeError("invalid iv length "+r.length);return"stream"===c.type?new s(c.module,t,r):"auth"===c.type?new a(c.module,t,r):new l(c.module,t,r)}l.prototype._final=function(){var e=this._cache.flush();if(this._autopadding)return e=this._mode.encrypt(this,e),this._cipher.scrub(),e;if(!e.equals(d))throw this._cipher.scrub(),new Error("data not multiple of block length")},l.prototype.setAutoPadding=function(e){return this._autopadding=!!e,this},u.prototype.add=function(e){this.cache=i.concat([this.cache,e])},u.prototype.get=function(){if(this.cache.length>15){var e=this.cache.slice(0,16);return this.cache=this.cache.slice(16),e}return null},u.prototype.flush=function(){for(var e=16-this.cache.length,t=i.allocUnsafe(e),r=-1;++r<e;)t.writeUInt8(e,r);return i.concat([this.cache,t])},t.createCipheriv=h,t.createCipher=function(e,t){var r=n[e.toLowerCase()];if(!r)throw new TypeError("invalid suite type");var a=f(t,!1,r.key,r.iv);return h(e,a.key,a.iv)}},1219:(e,t,r)=>{var n=r(7172).Buffer,a=n.alloc(16,0);function i(e){var t=n.allocUnsafe(16);return t.writeUInt32BE(e[0]>>>0,0),t.writeUInt32BE(e[1]>>>0,4),t.writeUInt32BE(e[2]>>>0,8),t.writeUInt32BE(e[3]>>>0,12),t}function s(e){this.h=e,this.state=n.alloc(16,0),this.cache=n.allocUnsafe(0)}s.prototype.ghash=function(e){for(var t=-1;++t<e.length;)this.state[t]^=e[t];this._multiply()},s.prototype._multiply=function(){for(var e,t,r,n=[(e=this.h).readUInt32BE(0),e.readUInt32BE(4),e.readUInt32BE(8),e.readUInt32BE(12)],a=[0,0,0,0],s=-1;++s<128;){for(0!=(this.state[~~(s/8)]&1<<7-s%8)&&(a[0]^=n[0],a[1]^=n[1],a[2]^=n[2],a[3]^=n[3]),r=0!=(1&n[3]),t=3;t>0;t--)n[t]=n[t]>>>1|(1&n[t-1])<<31;n[0]=n[0]>>>1,r&&(n[0]=n[0]^225<<24)}this.state=i(a)},s.prototype.update=function(e){var t;for(this.cache=n.concat([this.cache,e]);this.cache.length>=16;)t=this.cache.slice(0,16),this.cache=this.cache.slice(16),this.ghash(t)},s.prototype.final=function(e,t){return this.cache.length&&this.ghash(n.concat([this.cache,a],16)),this.ghash(i([0,e,0,t])),this.state},e.exports=s},3480:e=>{e.exports=function(e){for(var t,r=e.length;r--;){if(255!==(t=e.readUInt8(r))){t++,e.writeUInt8(t,r);break}e.writeUInt8(0,r)}}},6280:(e,t,r)=>{var n=r(7752);t.encrypt=function(e,t){var r=n(t,e._prev);return e._prev=e._cipher.encryptBlock(r),e._prev},t.decrypt=function(e,t){var r=e._prev;e._prev=t;var a=e._cipher.decryptBlock(t);return n(a,r)}},392:(e,t,r)=>{var n=r(7172).Buffer,a=r(7752);function i(e,t,r){var i=t.length,s=a(t,e._cache);return e._cache=e._cache.slice(i),e._prev=n.concat([e._prev,r?t:s]),s}t.encrypt=function(e,t,r){for(var a,s=n.allocUnsafe(0);t.length;){if(0===e._cache.length&&(e._cache=e._cipher.encryptBlock(e._prev),e._prev=n.allocUnsafe(0)),!(e._cache.length<=t.length)){s=n.concat([s,i(e,t,r)]);break}a=e._cache.length,s=n.concat([s,i(e,t.slice(0,a),r)]),t=t.slice(a)}return s}},5739:(e,t,r)=>{var n=r(7172).Buffer;function a(e,t,r){for(var n,a,s=-1,c=0;++s<8;)n=t&1<<7-s?128:0,c+=(128&(a=e._cipher.encryptBlock(e._prev)[0]^n))>>s%8,e._prev=i(e._prev,r?n:a);return c}function i(e,t){var r=e.length,a=-1,i=n.allocUnsafe(e.length);for(e=n.concat([e,n.from([t])]);++a<r;)i[a]=e[a]<<1|e[a+1]>>7;return i}t.encrypt=function(e,t,r){for(var i=t.length,s=n.allocUnsafe(i),c=-1;++c<i;)s[c]=a(e,t[c],r);return s}},2228:(e,t,r)=>{var n=r(7172).Buffer;function a(e,t,r){var a=e._cipher.encryptBlock(e._prev)[0]^t;return e._prev=n.concat([e._prev.slice(1),n.from([r?t:a])]),a}t.encrypt=function(e,t,r){for(var i=t.length,s=n.allocUnsafe(i),c=-1;++c<i;)s[c]=a(e,t[c],r);return s}},2751:(e,t,r)=>{var n=r(7752),a=r(7172).Buffer,i=r(3480);function s(e){var t=e._cipher.encryptBlockRaw(e._prev);return i(e._prev),t}t.encrypt=function(e,t){var r=Math.ceil(t.length/16),i=e._cache.length;e._cache=a.concat([e._cache,a.allocUnsafe(16*r)]);for(var c=0;c<r;c++){var o=s(e),f=i+16*c;e._cache.writeUInt32BE(o[0],f+0),e._cache.writeUInt32BE(o[1],f+4),e._cache.writeUInt32BE(o[2],f+8),e._cache.writeUInt32BE(o[3],f+12)}var l=e._cache.slice(0,t.length);return e._cache=e._cache.slice(t.length),n(t,l)}},2437:(e,t)=>{t.encrypt=function(e,t){return e._cipher.encryptBlock(t)},t.decrypt=function(e,t){return e._cipher.decryptBlock(t)}},3834:(e,t,r)=>{var n={ECB:r(2437),CBC:r(6280),CFB:r(392),CFB8:r(2228),CFB1:r(5739),OFB:r(8428),CTR:r(2751),GCM:r(2751)},a=r(4636);for(var i in a)a[i].module=n[a[i].mode];e.exports=a},8428:(e,t,r)=>{var n=r(816).Buffer,a=r(7752);function i(e){return e._prev=e._cipher.encryptBlock(e._prev),e._prev}t.encrypt=function(e,t){for(;e._cache.length<t.length;)e._cache=n.concat([e._cache,i(e)]);var r=e._cache.slice(0,t.length);return e._cache=e._cache.slice(t.length),a(t,r)}},2385:(e,t,r)=>{var n=r(238),a=r(7172).Buffer,i=r(3081);function s(e,t,r,s){i.call(this),this._cipher=new n.AES(t),this._prev=a.from(r),this._cache=a.allocUnsafe(0),this._secCache=a.allocUnsafe(0),this._decrypt=s,this._mode=e}r(87)(s,i),s.prototype._update=function(e){return this._mode.encrypt(this,e,this._decrypt)},s.prototype._final=function(){this._cipher.scrub()},e.exports=s},1240:(e,t,r)=>{r(5681),r(8901),r(3834),r(1035),r(5883)},5681:(e,t,r)=>{var n=r(3081),a=r(7191),i=r(87),s=r(7172).Buffer,c={"des-ede3-cbc":a.CBC.instantiate(a.EDE),"des-ede3":a.EDE,"des-ede-cbc":a.CBC.instantiate(a.EDE),"des-ede":a.EDE,"des-cbc":a.CBC.instantiate(a.DES),"des-ecb":a.DES};function o(e){n.call(this);var t,r=e.mode.toLowerCase(),a=c[r];t=e.decrypt?"decrypt":"encrypt";var i=e.key;s.isBuffer(i)||(i=s.from(i)),"des-ede"!==r&&"des-ede-cbc"!==r||(i=s.concat([i,i.slice(0,8)]));var o=e.iv;s.isBuffer(o)||(o=s.from(o)),this._des=a.create({key:i,iv:o,type:t})}c.des=c["des-cbc"],c.des3=c["des-ede3-cbc"],e.exports=o,i(o,n),o.prototype._update=function(e){return s.from(this._des.update(e))},o.prototype._final=function(){return s.from(this._des.final())}},1035:(e,t)=>{t["des-ecb"]={key:8,iv:0},t["des-cbc"]=t.des={key:8,iv:8},t["des-ede3-cbc"]=t.des3={key:24,iv:8},t["des-ede3"]={key:24,iv:0},t["des-ede-cbc"]={key:16,iv:8},t["des-ede"]={key:16,iv:0}},7752:(e,t,r)=>{var n=r(816).Buffer;e.exports=function(e,t){for(var r=Math.min(e.length,t.length),a=new n(r),i=0;i<r;++i)a[i]=e[i]^t[i];return a}},816:(e,t,r)=>{const n=r(4782),a=r(8898),i="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=o,t.SlowBuffer=function(e){return+e!=e&&(e=0),o.alloc(+e)},t.INSPECT_MAX_BYTES=50;const s=2147483647;function c(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,o.prototype),t}function o(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return d(e)}return f(e,t,r)}function f(e,t,r){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!o.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|p(e,t);let n=c(r);const a=n.write(e,t);return a!==r&&(n=n.slice(0,a)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(G(e,Uint8Array)){const t=new Uint8Array(e);return h(t.buffer,t.byteOffset,t.byteLength)}return u(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(G(e,ArrayBuffer)||e&&G(e.buffer,ArrayBuffer))return h(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(G(e,SharedArrayBuffer)||e&&G(e.buffer,SharedArrayBuffer)))return h(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return o.from(n,t,r);const a=function(e){if(o.isBuffer(e)){const t=0|b(e.length),r=c(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||V(e.length)?c(0):u(e):"Buffer"===e.type&&Array.isArray(e.data)?u(e.data):void 0}(e);if(a)return a;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return o.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function d(e){return l(e),c(e<0?0:0|b(e))}function u(e){const t=e.length<0?0:0|b(e.length),r=c(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function h(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,o.prototype),n}function b(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function p(e,t){if(o.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||G(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let a=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return Q(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return K(e).length;default:if(a)return n?-1:Q(e).length;t=(""+t).toLowerCase(),a=!0}}function y(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return W(this,t,r);case"utf8":case"utf-8":return J(this,t,r);case"ascii":return C(this,t,r);case"latin1":case"binary":return T(this,t,r);case"base64":return k(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return B(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function m(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function g(e,t,r,n,a){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),V(r=+r)&&(r=a?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(a)return-1;r=e.length-1}else if(r<0){if(!a)return-1;r=0}if("string"==typeof t&&(t=o.from(t,n)),o.isBuffer(t))return 0===t.length?-1:S(e,t,r,n,a);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):S(e,[t],r,n,a);throw new TypeError("val must be string, number or Buffer")}function S(e,t,r,n,a){let i,s=1,c=e.length,o=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s=2,c/=2,o/=2,r/=2}function f(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(a){let n=-1;for(i=r;i<c;i++)if(f(e,i)===f(t,-1===n?0:i-n)){if(-1===n&&(n=i),i-n+1===o)return n*s}else-1!==n&&(i-=i-n),n=-1}else for(r+o>c&&(r=c-o),i=r;i>=0;i--){let r=!0;for(let n=0;n<o;n++)if(f(e,i+n)!==f(t,n)){r=!1;break}if(r)return i}return-1}function L(e,t,r,n){r=Number(r)||0;const a=e.length-r;n?(n=Number(n))>a&&(n=a):n=a;const i=t.length;let s;for(n>i/2&&(n=i/2),s=0;s<n;++s){const n=parseInt(t.substr(2*s,2),16);if(V(n))return s;e[r+s]=n}return s}function w(e,t,r,n){return N(Q(t,e.length-r),e,r,n)}function v(e,t,r,n){return N(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function E(e,t,r,n){return N(K(t),e,r,n)}function x(e,t,r,n){return N(function(e,t){let r,n,a;const i=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)r=e.charCodeAt(s),n=r>>8,a=r%256,i.push(a),i.push(n);return i}(t,e.length-r),e,r,n)}function k(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function J(e,t,r){r=Math.min(e.length,r);const n=[];let a=t;for(;a<r;){const t=e[a];let i=null,s=t>239?4:t>223?3:t>191?2:1;if(a+s<=r){let r,n,c,o;switch(s){case 1:t<128&&(i=t);break;case 2:r=e[a+1],128==(192&r)&&(o=(31&t)<<6|63&r,o>127&&(i=o));break;case 3:r=e[a+1],n=e[a+2],128==(192&r)&&128==(192&n)&&(o=(15&t)<<12|(63&r)<<6|63&n,o>2047&&(o<55296||o>57343)&&(i=o));break;case 4:r=e[a+1],n=e[a+2],c=e[a+3],128==(192&r)&&128==(192&n)&&128==(192&c)&&(o=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&c,o>65535&&o<1114112&&(i=o))}}null===i?(i=65533,s=1):i>65535&&(i-=65536,n.push(i>>>10&1023|55296),i=56320|1023&i),n.push(i),a+=s}return function(e){const t=e.length;if(t<=O)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=O));return r}(n)}t.kMaxLength=s,o.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),o.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(o.prototype,"parent",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.buffer}}),Object.defineProperty(o.prototype,"offset",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.byteOffset}}),o.poolSize=8192,o.from=function(e,t,r){return f(e,t,r)},Object.setPrototypeOf(o.prototype,Uint8Array.prototype),Object.setPrototypeOf(o,Uint8Array),o.alloc=function(e,t,r){return function(e,t,r){return l(e),e<=0?c(e):void 0!==t?"string"==typeof r?c(e).fill(t,r):c(e).fill(t):c(e)}(e,t,r)},o.allocUnsafe=function(e){return d(e)},o.allocUnsafeSlow=function(e){return d(e)},o.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==o.prototype},o.compare=function(e,t){if(G(e,Uint8Array)&&(e=o.from(e,e.offset,e.byteLength)),G(t,Uint8Array)&&(t=o.from(t,t.offset,t.byteLength)),!o.isBuffer(e)||!o.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let a=0,i=Math.min(r,n);a<i;++a)if(e[a]!==t[a]){r=e[a],n=t[a];break}return r<n?-1:n<r?1:0},o.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},o.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return o.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=o.allocUnsafe(t);let a=0;for(r=0;r<e.length;++r){let t=e[r];if(G(t,Uint8Array))a+t.length>n.length?(o.isBuffer(t)||(t=o.from(t)),t.copy(n,a)):Uint8Array.prototype.set.call(n,t,a);else{if(!o.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,a)}a+=t.length}return n},o.byteLength=p,o.prototype._isBuffer=!0,o.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)m(this,t,t+1);return this},o.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},o.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},o.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?J(this,0,e):y.apply(this,arguments)},o.prototype.toLocaleString=o.prototype.toString,o.prototype.equals=function(e){if(!o.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===o.compare(this,e)},o.prototype.inspect=function(){let e="";const r=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},i&&(o.prototype[i]=o.prototype.inspect),o.prototype.compare=function(e,t,r,n,a){if(G(e,Uint8Array)&&(e=o.from(e,e.offset,e.byteLength)),!o.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===a&&(a=this.length),t<0||r>e.length||n<0||a>this.length)throw new RangeError("out of range index");if(n>=a&&t>=r)return 0;if(n>=a)return-1;if(t>=r)return 1;if(this===e)return 0;let i=(a>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0);const c=Math.min(i,s),f=this.slice(n,a),l=e.slice(t,r);for(let e=0;e<c;++e)if(f[e]!==l[e]){i=f[e],s=l[e];break}return i<s?-1:s<i?1:0},o.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},o.prototype.indexOf=function(e,t,r){return g(this,e,t,r,!0)},o.prototype.lastIndexOf=function(e,t,r){return g(this,e,t,r,!1)},o.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}const a=this.length-t;if((void 0===r||r>a)&&(r=a),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let i=!1;for(;;)switch(n){case"hex":return L(this,e,t,r);case"utf8":case"utf-8":return w(this,e,t,r);case"ascii":case"latin1":case"binary":return v(this,e,t,r);case"base64":return E(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return x(this,e,t,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},o.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const O=4096;function C(e,t,r){let n="";r=Math.min(e.length,r);for(let a=t;a<r;++a)n+=String.fromCharCode(127&e[a]);return n}function T(e,t,r){let n="";r=Math.min(e.length,r);for(let a=t;a<r;++a)n+=String.fromCharCode(e[a]);return n}function W(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let a="";for(let n=t;n<r;++n)a+=q[e[n]];return a}function B(e,t,r){const n=e.slice(t,r);let a="";for(let e=0;e<n.length-1;e+=2)a+=String.fromCharCode(n[e]+256*n[e+1]);return a}function z(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function P(e,t,r,n,a,i){if(!o.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<i)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function I(e,t,r,n,a){X(t,n,a,e,r,7);let i=Number(t&BigInt(4294967295));e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,r}function R(e,t,r,n,a){X(t,n,a,e,r,7);let i=Number(t&BigInt(4294967295));e[r+7]=i,i>>=8,e[r+6]=i,i>>=8,e[r+5]=i,i>>=8,e[r+4]=i;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=s,s>>=8,e[r+2]=s,s>>=8,e[r+1]=s,s>>=8,e[r]=s,r+8}function A(e,t,r,n,a,i){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function H(e,t,r,n,i){return t=+t,r>>>=0,i||A(e,0,r,4),a.write(e,t,r,n,23,4),r+4}function Y(e,t,r,n,i){return t=+t,r>>>=0,i||A(e,0,r,8),a.write(e,t,r,n,52,8),r+8}o.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,o.prototype),n},o.prototype.readUintLE=o.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||z(e,t,this.length);let n=this[e],a=1,i=0;for(;++i<t&&(a*=256);)n+=this[e+i]*a;return n},o.prototype.readUintBE=o.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||z(e,t,this.length);let n=this[e+--t],a=1;for(;t>0&&(a*=256);)n+=this[e+--t]*a;return n},o.prototype.readUint8=o.prototype.readUInt8=function(e,t){return e>>>=0,t||z(e,1,this.length),this[e]},o.prototype.readUint16LE=o.prototype.readUInt16LE=function(e,t){return e>>>=0,t||z(e,2,this.length),this[e]|this[e+1]<<8},o.prototype.readUint16BE=o.prototype.readUInt16BE=function(e,t){return e>>>=0,t||z(e,2,this.length),this[e]<<8|this[e+1]},o.prototype.readUint32LE=o.prototype.readUInt32LE=function(e,t){return e>>>=0,t||z(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},o.prototype.readUint32BE=o.prototype.readUInt32BE=function(e,t){return e>>>=0,t||z(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},o.prototype.readBigUInt64LE=_((function(e){D(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,a=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(a)<<BigInt(32))})),o.prototype.readBigUInt64BE=_((function(e){D(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],a=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(a)})),o.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||z(e,t,this.length);let n=this[e],a=1,i=0;for(;++i<t&&(a*=256);)n+=this[e+i]*a;return a*=128,n>=a&&(n-=Math.pow(2,8*t)),n},o.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||z(e,t,this.length);let n=t,a=1,i=this[e+--n];for(;n>0&&(a*=256);)i+=this[e+--n]*a;return a*=128,i>=a&&(i-=Math.pow(2,8*t)),i},o.prototype.readInt8=function(e,t){return e>>>=0,t||z(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},o.prototype.readInt16LE=function(e,t){e>>>=0,t||z(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},o.prototype.readInt16BE=function(e,t){e>>>=0,t||z(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},o.prototype.readInt32LE=function(e,t){return e>>>=0,t||z(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},o.prototype.readInt32BE=function(e,t){return e>>>=0,t||z(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},o.prototype.readBigInt64LE=_((function(e){D(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),o.prototype.readBigInt64BE=_((function(e){D(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),o.prototype.readFloatLE=function(e,t){return e>>>=0,t||z(e,4,this.length),a.read(this,e,!0,23,4)},o.prototype.readFloatBE=function(e,t){return e>>>=0,t||z(e,4,this.length),a.read(this,e,!1,23,4)},o.prototype.readDoubleLE=function(e,t){return e>>>=0,t||z(e,8,this.length),a.read(this,e,!0,52,8)},o.prototype.readDoubleBE=function(e,t){return e>>>=0,t||z(e,8,this.length),a.read(this,e,!1,52,8)},o.prototype.writeUintLE=o.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||P(this,e,t,r,Math.pow(2,8*r)-1,0);let a=1,i=0;for(this[t]=255&e;++i<r&&(a*=256);)this[t+i]=e/a&255;return t+r},o.prototype.writeUintBE=o.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||P(this,e,t,r,Math.pow(2,8*r)-1,0);let a=r-1,i=1;for(this[t+a]=255&e;--a>=0&&(i*=256);)this[t+a]=e/i&255;return t+r},o.prototype.writeUint8=o.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,1,255,0),this[t]=255&e,t+1},o.prototype.writeUint16LE=o.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},o.prototype.writeUint16BE=o.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},o.prototype.writeUint32LE=o.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},o.prototype.writeUint32BE=o.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},o.prototype.writeBigUInt64LE=_((function(e,t=0){return I(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),o.prototype.writeBigUInt64BE=_((function(e,t=0){return R(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),o.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);P(this,e,t,r,n-1,-n)}let a=0,i=1,s=0;for(this[t]=255&e;++a<r&&(i*=256);)e<0&&0===s&&0!==this[t+a-1]&&(s=1),this[t+a]=(e/i>>0)-s&255;return t+r},o.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);P(this,e,t,r,n-1,-n)}let a=r-1,i=1,s=0;for(this[t+a]=255&e;--a>=0&&(i*=256);)e<0&&0===s&&0!==this[t+a+1]&&(s=1),this[t+a]=(e/i>>0)-s&255;return t+r},o.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},o.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},o.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},o.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},o.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},o.prototype.writeBigInt64LE=_((function(e,t=0){return I(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),o.prototype.writeBigInt64BE=_((function(e,t=0){return R(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),o.prototype.writeFloatLE=function(e,t,r){return H(this,e,t,!0,r)},o.prototype.writeFloatBE=function(e,t,r){return H(this,e,t,!1,r)},o.prototype.writeDoubleLE=function(e,t,r){return Y(this,e,t,!0,r)},o.prototype.writeDoubleBE=function(e,t,r){return Y(this,e,t,!1,r)},o.prototype.copy=function(e,t,r,n){if(!o.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const a=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),a},o.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!o.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let a;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(a=t;a<r;++a)this[a]=e;else{const i=o.isBuffer(e)?e:o.from(e,n),s=i.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<r-t;++a)this[a+t]=i[a%s]}return this};const Z={};function M(e,t,r){Z[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function j(e){let t="",r=e.length;const n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function X(e,t,r,n,a,i){if(e>r||e<t){const n="bigint"==typeof t?"n":"";let a;throw a=i>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(i+1)}${n}`:`>= -(2${n} ** ${8*(i+1)-1}${n}) and < 2 ** ${8*(i+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new Z.ERR_OUT_OF_RANGE("value",a,e)}!function(e,t,r){D(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||F(t,e.length-(r+1))}(n,a,i)}function D(e,t){if("number"!=typeof e)throw new Z.ERR_INVALID_ARG_TYPE(t,"number",e)}function F(e,t,r){if(Math.floor(e)!==e)throw D(e,r),new Z.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new Z.ERR_BUFFER_OUT_OF_BOUNDS;throw new Z.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}M("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),M("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),M("ERR_OUT_OF_RANGE",(function(e,t,r){let n=`The value of "${e}" is out of range.`,a=r;return Number.isInteger(r)&&Math.abs(r)>2**32?a=j(String(r)):"bigint"==typeof r&&(a=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(a=j(a)),a+="n"),n+=` It must be ${t}. Received ${a}`,n}),RangeError);const U=/[^+/0-9A-Za-z-_]/g;function Q(e,t){let r;t=t||1/0;const n=e.length;let a=null;const i=[];for(let s=0;s<n;++s){if(r=e.charCodeAt(s),r>55295&&r<57344){if(!a){if(r>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&i.push(239,191,189);continue}a=r;continue}if(r<56320){(t-=3)>-1&&i.push(239,191,189),a=r;continue}r=65536+(a-55296<<10|r-56320)}else a&&(t-=3)>-1&&i.push(239,191,189);if(a=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function K(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(U,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function N(e,t,r,n){let a;for(a=0;a<n&&!(a+r>=t.length||a>=e.length);++a)t[a+r]=e[a];return a}function G(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function V(e){return e!=e}const q=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let a=0;a<16;++a)t[n+a]=e[r]+e[a]}return t}();function _(e){return"undefined"==typeof BigInt?$:e}function $(){throw new Error("BigInt not supported")}},3081:(e,t,r)=>{var n=r(7172).Buffer,a=r(3424).Transform,i=r(4361).s;function s(e){a.call(this),this.hashMode="string"==typeof e,this.hashMode?this[e]=this._finalOrDigest:this.final=this._finalOrDigest,this._final&&(this.__final=this._final,this._final=null),this._decoder=null,this._encoding=null}r(87)(s,a),s.prototype.update=function(e,t,r){"string"==typeof e&&(e=n.from(e,t));var a=this._update(e);return this.hashMode?this:(r&&(a=this._toString(a,r)),a)},s.prototype.setAutoPadding=function(){},s.prototype.getAuthTag=function(){throw new Error("trying to get auth tag in unsupported state")},s.prototype.setAuthTag=function(){throw new Error("trying to set auth tag in unsupported state")},s.prototype.setAAD=function(){throw new Error("trying to set aad in unsupported state")},s.prototype._transform=function(e,t,r){var n;try{this.hashMode?this._update(e):this.push(this._update(e))}catch(e){n=e}finally{r(n)}},s.prototype._flush=function(e){var t;try{this.push(this.__final())}catch(e){t=e}e(t)},s.prototype._finalOrDigest=function(e){var t=this.__final()||n.alloc(0);return e&&(t=this._toString(t,e,!0)),t},s.prototype._toString=function(e,t,r){if(this._decoder||(this._decoder=new i(t),this._encoding=t),this._encoding!==t)throw new Error("can't switch encodings");var n=this._decoder.write(e);return r&&(n+=this._decoder.end()),n},e.exports=s},5862:e=>{var t=1e3,r=60*t,n=60*r,a=24*n;function i(e,t,r,n){var a=t>=1.5*r;return Math.round(e/r)+" "+n+(a?"s":"")}e.exports=function(e,s){s=s||{};var c,o,f=typeof e;if("string"===f&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var i=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(i){var s=parseFloat(i[1]);switch((i[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*s;case"weeks":case"week":case"w":return 6048e5*s;case"days":case"day":case"d":return s*a;case"hours":case"hour":case"hrs":case"hr":case"h":return s*n;case"minutes":case"minute":case"mins":case"min":case"m":return s*r;case"seconds":case"second":case"secs":case"sec":case"s":return s*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}}}(e);if("number"===f&&isFinite(e))return s.long?(c=e,(o=Math.abs(c))>=a?i(c,o,a,"day"):o>=n?i(c,o,n,"hour"):o>=r?i(c,o,r,"minute"):o>=t?i(c,o,t,"second"):c+" ms"):function(e){var i=Math.abs(e);return i>=a?Math.round(e/a)+"d":i>=n?Math.round(e/n)+"h":i>=r?Math.round(e/r)+"m":i>=t?Math.round(e/t)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},6292:(e,t,r)=>{t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const r="color: "+this.color;t.splice(1,0,r,"color: inherit");let n=0,a=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(n++,"%c"===e&&(a=n))})),t.splice(a,0,r)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e={NODE_ENV:"production"}.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=r(9374)(t);const{formatters:n}=e.exports;n.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},9374:(e,t,r)=>{e.exports=function(e){function t(e){let r,a,i,s=null;function c(...e){if(!c.enabled)return;const n=c,a=Number(new Date),i=a-(r||a);n.diff=i,n.prev=r,n.curr=a,r=a,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let s=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((r,a)=>{if("%%"===r)return"%";s++;const i=t.formatters[a];if("function"==typeof i){const t=e[s];r=i.call(n,t),e.splice(s,1),s--}return r})),t.formatArgs.call(n,e),(n.log||t.log).apply(n,e)}return c.namespace=e,c.useColors=t.useColors(),c.color=t.selectColor(e),c.extend=n,c.destroy=t.destroy,Object.defineProperty(c,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==s?s:(a!==t.namespaces&&(a=t.namespaces,i=t.enabled(e)),i),set:e=>{s=e}}),"function"==typeof t.init&&t.init(c),c}function n(e,r){const n=t(this.namespace+(void 0===r?":":r)+e);return n.log=this.log,n}function a(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){const e=[...t.names.map(a),...t.skips.map(a).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let r;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const n=("string"==typeof e?e:"").split(/[\s,]+/),a=n.length;for(r=0;r<a;r++)n[r]&&("-"===(e=n[r].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let r,n;for(r=0,n=t.skips.length;r<n;r++)if(t.skips[r].test(e))return!1;for(r=0,n=t.names.length;r<n;r++)if(t.names[r].test(e))return!0;return!1},t.humanize=r(5862),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((r=>{t[r]=e[r]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let r=0;for(let t=0;t<e.length;t++)r=(r<<5)-r+e.charCodeAt(t),r|=0;return t.colors[Math.abs(r)%t.colors.length]},t.enable(t.load()),t}},7191:(e,t,r)=>{t.utils=r(5516),t.Cipher=r(4923),t.DES=r(225),t.CBC=r(8701),t.EDE=r(6540)},8701:(e,t,r)=>{var n=r(7859),a=r(87),i={};function s(e){n.equal(e.length,8,"Invalid IV length"),this.iv=new Array(8);for(var t=0;t<this.iv.length;t++)this.iv[t]=e[t]}t.instantiate=function(e){function t(t){e.call(this,t),this._cbcInit()}a(t,e);for(var r=Object.keys(i),n=0;n<r.length;n++){var s=r[n];t.prototype[s]=i[s]}return t.create=function(e){return new t(e)},t},i._cbcInit=function(){var e=new s(this.options.iv);this._cbcState=e},i._update=function(e,t,r,n){var a=this._cbcState,i=this.constructor.super_.prototype,s=a.iv;if("encrypt"===this.type){for(var c=0;c<this.blockSize;c++)s[c]^=e[t+c];for(i._update.call(this,s,0,r,n),c=0;c<this.blockSize;c++)s[c]=r[n+c]}else{for(i._update.call(this,e,t,r,n),c=0;c<this.blockSize;c++)r[n+c]^=s[c];for(c=0;c<this.blockSize;c++)s[c]=e[t+c]}}},4923:(e,t,r)=>{var n=r(7859);function a(e){this.options=e,this.type=this.options.type,this.blockSize=8,this._init(),this.buffer=new Array(this.blockSize),this.bufferOff=0,this.padding=!1!==e.padding}e.exports=a,a.prototype._init=function(){},a.prototype.update=function(e){return 0===e.length?[]:"decrypt"===this.type?this._updateDecrypt(e):this._updateEncrypt(e)},a.prototype._buffer=function(e,t){for(var r=Math.min(this.buffer.length-this.bufferOff,e.length-t),n=0;n<r;n++)this.buffer[this.bufferOff+n]=e[t+n];return this.bufferOff+=r,r},a.prototype._flushBuffer=function(e,t){return this._update(this.buffer,0,e,t),this.bufferOff=0,this.blockSize},a.prototype._updateEncrypt=function(e){var t=0,r=0,n=(this.bufferOff+e.length)/this.blockSize|0,a=new Array(n*this.blockSize);0!==this.bufferOff&&(t+=this._buffer(e,t),this.bufferOff===this.buffer.length&&(r+=this._flushBuffer(a,r)));for(var i=e.length-(e.length-t)%this.blockSize;t<i;t+=this.blockSize)this._update(e,t,a,r),r+=this.blockSize;for(;t<e.length;t++,this.bufferOff++)this.buffer[this.bufferOff]=e[t];return a},a.prototype._updateDecrypt=function(e){for(var t=0,r=0,n=Math.ceil((this.bufferOff+e.length)/this.blockSize)-1,a=new Array(n*this.blockSize);n>0;n--)t+=this._buffer(e,t),r+=this._flushBuffer(a,r);return t+=this._buffer(e,t),a},a.prototype.final=function(e){var t,r;return e&&(t=this.update(e)),r="encrypt"===this.type?this._finalEncrypt():this._finalDecrypt(),t?t.concat(r):r},a.prototype._pad=function(e,t){if(0===t)return!1;for(;t<e.length;)e[t++]=0;return!0},a.prototype._finalEncrypt=function(){if(!this._pad(this.buffer,this.bufferOff))return[];var e=new Array(this.blockSize);return this._update(this.buffer,0,e,0),e},a.prototype._unpad=function(e){return e},a.prototype._finalDecrypt=function(){n.equal(this.bufferOff,this.blockSize,"Not enough data to decrypt");var e=new Array(this.blockSize);return this._flushBuffer(e,0),this._unpad(e)}},225:(e,t,r)=>{var n=r(7859),a=r(87),i=r(5516),s=r(4923);function c(){this.tmp=new Array(2),this.keys=null}function o(e){s.call(this,e);var t=new c;this._desState=t,this.deriveKeys(t,e.key)}a(o,s),e.exports=o,o.create=function(e){return new o(e)};var f=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];o.prototype.deriveKeys=function(e,t){e.keys=new Array(32),n.equal(t.length,this.blockSize,"Invalid key length");var r=i.readUInt32BE(t,0),a=i.readUInt32BE(t,4);i.pc1(r,a,e.tmp,0),r=e.tmp[0],a=e.tmp[1];for(var s=0;s<e.keys.length;s+=2){var c=f[s>>>1];r=i.r28shl(r,c),a=i.r28shl(a,c),i.pc2(r,a,e.keys,s)}},o.prototype._update=function(e,t,r,n){var a=this._desState,s=i.readUInt32BE(e,t),c=i.readUInt32BE(e,t+4);i.ip(s,c,a.tmp,0),s=a.tmp[0],c=a.tmp[1],"encrypt"===this.type?this._encrypt(a,s,c,a.tmp,0):this._decrypt(a,s,c,a.tmp,0),s=a.tmp[0],c=a.tmp[1],i.writeUInt32BE(r,s,n),i.writeUInt32BE(r,c,n+4)},o.prototype._pad=function(e,t){if(!1===this.padding)return!1;for(var r=e.length-t,n=t;n<e.length;n++)e[n]=r;return!0},o.prototype._unpad=function(e){if(!1===this.padding)return e;for(var t=e[e.length-1],r=e.length-t;r<e.length;r++)n.equal(e[r],t);return e.slice(0,e.length-t)},o.prototype._encrypt=function(e,t,r,n,a){for(var s=t,c=r,o=0;o<e.keys.length;o+=2){var f=e.keys[o],l=e.keys[o+1];i.expand(c,e.tmp,0),f^=e.tmp[0],l^=e.tmp[1];var d=i.substitute(f,l),u=c;c=(s^i.permute(d))>>>0,s=u}i.rip(c,s,n,a)},o.prototype._decrypt=function(e,t,r,n,a){for(var s=r,c=t,o=e.keys.length-2;o>=0;o-=2){var f=e.keys[o],l=e.keys[o+1];i.expand(s,e.tmp,0),f^=e.tmp[0],l^=e.tmp[1];var d=i.substitute(f,l),u=s;s=(c^i.permute(d))>>>0,c=u}i.rip(s,c,n,a)}},6540:(e,t,r)=>{var n=r(7859),a=r(87),i=r(4923),s=r(225);function c(e,t){n.equal(t.length,24,"Invalid key length");var r=t.slice(0,8),a=t.slice(8,16),i=t.slice(16,24);this.ciphers="encrypt"===e?[s.create({type:"encrypt",key:r}),s.create({type:"decrypt",key:a}),s.create({type:"encrypt",key:i})]:[s.create({type:"decrypt",key:i}),s.create({type:"encrypt",key:a}),s.create({type:"decrypt",key:r})]}function o(e){i.call(this,e);var t=new c(this.type,this.options.key);this._edeState=t}a(o,i),e.exports=o,o.create=function(e){return new o(e)},o.prototype._update=function(e,t,r,n){var a=this._edeState;a.ciphers[0]._update(e,t,r,n),a.ciphers[1]._update(r,n,r,n),a.ciphers[2]._update(r,n,r,n)},o.prototype._pad=s.prototype._pad,o.prototype._unpad=s.prototype._unpad},5516:(e,t)=>{t.readUInt32BE=function(e,t){return(e[0+t]<<24|e[1+t]<<16|e[2+t]<<8|e[3+t])>>>0},t.writeUInt32BE=function(e,t,r){e[0+r]=t>>>24,e[1+r]=t>>>16&255,e[2+r]=t>>>8&255,e[3+r]=255&t},t.ip=function(e,t,r,n){for(var a=0,i=0,s=6;s>=0;s-=2){for(var c=0;c<=24;c+=8)a<<=1,a|=t>>>c+s&1;for(c=0;c<=24;c+=8)a<<=1,a|=e>>>c+s&1}for(s=6;s>=0;s-=2){for(c=1;c<=25;c+=8)i<<=1,i|=t>>>c+s&1;for(c=1;c<=25;c+=8)i<<=1,i|=e>>>c+s&1}r[n+0]=a>>>0,r[n+1]=i>>>0},t.rip=function(e,t,r,n){for(var a=0,i=0,s=0;s<4;s++)for(var c=24;c>=0;c-=8)a<<=1,a|=t>>>c+s&1,a<<=1,a|=e>>>c+s&1;for(s=4;s<8;s++)for(c=24;c>=0;c-=8)i<<=1,i|=t>>>c+s&1,i<<=1,i|=e>>>c+s&1;r[n+0]=a>>>0,r[n+1]=i>>>0},t.pc1=function(e,t,r,n){for(var a=0,i=0,s=7;s>=5;s--){for(var c=0;c<=24;c+=8)a<<=1,a|=t>>c+s&1;for(c=0;c<=24;c+=8)a<<=1,a|=e>>c+s&1}for(c=0;c<=24;c+=8)a<<=1,a|=t>>c+s&1;for(s=1;s<=3;s++){for(c=0;c<=24;c+=8)i<<=1,i|=t>>c+s&1;for(c=0;c<=24;c+=8)i<<=1,i|=e>>c+s&1}for(c=0;c<=24;c+=8)i<<=1,i|=e>>c+s&1;r[n+0]=a>>>0,r[n+1]=i>>>0},t.r28shl=function(e,t){return e<<t&268435455|e>>>28-t};var r=[14,11,17,4,27,23,25,0,13,22,7,18,5,9,16,24,2,20,12,21,1,8,15,26,15,4,25,19,9,1,26,16,5,11,23,8,12,7,17,0,22,3,10,14,6,20,27,24];t.pc2=function(e,t,n,a){for(var i=0,s=0,c=r.length>>>1,o=0;o<c;o++)i<<=1,i|=e>>>r[o]&1;for(o=c;o<r.length;o++)s<<=1,s|=t>>>r[o]&1;n[a+0]=i>>>0,n[a+1]=s>>>0},t.expand=function(e,t,r){var n=0,a=0;n=(1&e)<<5|e>>>27;for(var i=23;i>=15;i-=4)n<<=6,n|=e>>>i&63;for(i=11;i>=3;i-=4)a|=e>>>i&63,a<<=6;a|=(31&e)<<1|e>>>31,t[r+0]=n>>>0,t[r+1]=a>>>0};var n=[14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13,15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9,10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12,7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14,2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,6,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3,12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13,4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12,13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];t.substitute=function(e,t){for(var r=0,a=0;a<4;a++)r<<=4,r|=n[64*a+(e>>>18-6*a&63)];for(a=0;a<4;a++)r<<=4,r|=n[256+64*a+(t>>>18-6*a&63)];return r>>>0};var a=[16,25,12,11,3,20,4,15,31,17,9,6,27,14,1,22,30,24,8,18,0,5,29,23,13,19,2,26,10,21,28,7];t.permute=function(e){for(var t=0,r=0;r<a.length;r++)t<<=1,t|=e>>>a[r]&1;return t>>>0},t.padSplit=function(e,t,r){for(var n=e.toString(2);n.length<t;)n="0"+n;for(var a=[],i=0;i<t;i+=r)a.push(n.slice(i,i+r));return a.join(" ")}},3302:e=>{e.exports=!1},343:e=>{var t,r="object"==typeof Reflect?Reflect:null,n=r&&"function"==typeof r.apply?r.apply:function(e,t,r){return Function.prototype.apply.call(e,t,r)};t=r&&"function"==typeof r.ownKeys?r.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var a=Number.isNaN||function(e){return e!=e};function i(){i.init.call(this)}e.exports=i,e.exports.once=function(e,t){return new Promise((function(r,n){function a(r){e.removeListener(t,i),n(r)}function i(){"function"==typeof e.removeListener&&e.removeListener("error",a),r([].slice.call(arguments))}p(e,t,i,{once:!0}),"error"!==t&&function(e,t,r){"function"==typeof e.on&&p(e,"error",t,{once:!0})}(e,a)}))},i.EventEmitter=i,i.prototype._events=void 0,i.prototype._eventsCount=0,i.prototype._maxListeners=void 0;var s=10;function c(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function o(e){return void 0===e._maxListeners?i.defaultMaxListeners:e._maxListeners}function f(e,t,r,n){var a,i,s,f;if(c(r),void 0===(i=e._events)?(i=e._events=Object.create(null),e._eventsCount=0):(void 0!==i.newListener&&(e.emit("newListener",t,r.listener?r.listener:r),i=e._events),s=i[t]),void 0===s)s=i[t]=r,++e._eventsCount;else if("function"==typeof s?s=i[t]=n?[r,s]:[s,r]:n?s.unshift(r):s.push(r),(a=o(e))>0&&s.length>a&&!s.warned){s.warned=!0;var l=new Error("Possible EventEmitter memory leak detected. "+s.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");l.name="MaxListenersExceededWarning",l.emitter=e,l.type=t,l.count=s.length,f=l,console&&console.warn&&console.warn(f)}return e}function l(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function d(e,t,r){var n={fired:!1,wrapFn:void 0,target:e,type:t,listener:r},a=l.bind(n);return a.listener=r,n.wrapFn=a,a}function u(e,t,r){var n=e._events;if(void 0===n)return[];var a=n[t];return void 0===a?[]:"function"==typeof a?r?[a.listener||a]:[a]:r?function(e){for(var t=new Array(e.length),r=0;r<t.length;++r)t[r]=e[r].listener||e[r];return t}(a):b(a,a.length)}function h(e){var t=this._events;if(void 0!==t){var r=t[e];if("function"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function b(e,t){for(var r=new Array(t),n=0;n<t;++n)r[n]=e[n];return r}function p(e,t,r,n){if("function"==typeof e.on)n.once?e.once(t,r):e.on(t,r);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function a(i){n.once&&e.removeEventListener(t,a),r(i)}))}}Object.defineProperty(i,"defaultMaxListeners",{enumerable:!0,get:function(){return s},set:function(e){if("number"!=typeof e||e<0||a(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");s=e}}),i.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},i.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||a(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},i.prototype.getMaxListeners=function(){return o(this)},i.prototype.emit=function(e){for(var t=[],r=1;r<arguments.length;r++)t.push(arguments[r]);var a="error"===e,i=this._events;if(void 0!==i)a=a&&void 0===i.error;else if(!a)return!1;if(a){var s;if(t.length>0&&(s=t[0]),s instanceof Error)throw s;var c=new Error("Unhandled error."+(s?" ("+s.message+")":""));throw c.context=s,c}var o=i[e];if(void 0===o)return!1;if("function"==typeof o)n(o,this,t);else{var f=o.length,l=b(o,f);for(r=0;r<f;++r)n(l[r],this,t)}return!0},i.prototype.addListener=function(e,t){return f(this,e,t,!1)},i.prototype.on=i.prototype.addListener,i.prototype.prependListener=function(e,t){return f(this,e,t,!0)},i.prototype.once=function(e,t){return c(t),this.on(e,d(this,e,t)),this},i.prototype.prependOnceListener=function(e,t){return c(t),this.prependListener(e,d(this,e,t)),this},i.prototype.removeListener=function(e,t){var r,n,a,i,s;if(c(t),void 0===(n=this._events))return this;if(void 0===(r=n[e]))return this;if(r===t||r.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit("removeListener",e,r.listener||t));else if("function"!=typeof r){for(a=-1,i=r.length-1;i>=0;i--)if(r[i]===t||r[i].listener===t){s=r[i].listener,a=i;break}if(a<0)return this;0===a?r.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(r,a),1===r.length&&(n[e]=r[0]),void 0!==n.removeListener&&this.emit("removeListener",e,s||t)}return this},i.prototype.off=i.prototype.removeListener,i.prototype.removeAllListeners=function(e){var t,r,n;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[e]),this;if(0===arguments.length){var a,i=Object.keys(r);for(n=0;n<i.length;++n)"removeListener"!==(a=i[n])&&this.removeAllListeners(a);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=r[e]))this.removeListener(e,t);else if(void 0!==t)for(n=t.length-1;n>=0;n--)this.removeListener(e,t[n]);return this},i.prototype.listeners=function(e){return u(this,e,!0)},i.prototype.rawListeners=function(e){return u(this,e,!1)},i.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):h.call(e,t)},i.prototype.listenerCount=h,i.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},5883:(e,t,r)=>{var n=r(7172).Buffer,a=r(9500);e.exports=function(e,t,r,i){if(n.isBuffer(e)||(e=n.from(e,"binary")),t&&(n.isBuffer(t)||(t=n.from(t,"binary")),8!==t.length))throw new RangeError("salt should be Buffer with 8 byte length");for(var s=r/8,c=n.alloc(s),o=n.alloc(i||0),f=n.alloc(0);s>0||i>0;){var l=new a;l.update(f),l.update(e),t&&l.update(t),f=l.digest();var d=0;if(s>0){var u=c.length-s;d=Math.min(s,f.length),f.copy(c,u,0,d),s-=d}if(d<f.length&&i>0){var h=o.length-i,b=Math.min(i,f.length-d);f.copy(o,h,d,d+b),i-=b}}return f.fill(0),{key:c,iv:o}}},6883:(e,t,r)=>{var n=r(7172).Buffer,a=r(8310).Transform;function i(e){a.call(this),this._block=n.allocUnsafe(e),this._blockSize=e,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}r(87)(i,a),i.prototype._transform=function(e,t,r){var n=null;try{this.update(e,t)}catch(e){n=e}r(n)},i.prototype._flush=function(e){var t=null;try{this.push(this.digest())}catch(e){t=e}e(t)},i.prototype.update=function(e,t){if(function(e,t){if(!n.isBuffer(e)&&"string"!=typeof e)throw new TypeError("Data must be a string or a buffer")}(e),this._finalized)throw new Error("Digest already called");n.isBuffer(e)||(e=n.from(e,t));for(var r=this._block,a=0;this._blockOffset+e.length-a>=this._blockSize;){for(var i=this._blockOffset;i<this._blockSize;)r[i++]=e[a++];this._update(),this._blockOffset=0}for(;a<e.length;)r[this._blockOffset++]=e[a++];for(var s=0,c=8*e.length;c>0;++s)this._length[s]+=c,(c=this._length[s]/4294967296|0)>0&&(this._length[s]-=4294967296*c);return this},i.prototype._update=function(){throw new Error("_update is not implemented")},i.prototype.digest=function(e){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var t=this._digest();void 0!==e&&(t=t.toString(e)),this._block.fill(0),this._blockOffset=0;for(var r=0;r<4;++r)this._length[r]=0;return t},i.prototype._digest=function(){throw new Error("_digest is not implemented")},e.exports=i},5294:(e,t,r)=>{var n=t;n.utils=r(8626),n.common=r(8717),n.sha=r(2589),n.ripemd=r(8494),n.hmac=r(2750),n.sha1=n.sha.sha1,n.sha256=n.sha.sha256,n.sha224=n.sha.sha224,n.sha384=n.sha.sha384,n.sha512=n.sha.sha512,n.ripemd160=n.ripemd.ripemd160},8717:(e,t,r)=>{var n=r(8626),a=r(7859);function i(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}t.BlockHash=i,i.prototype.update=function(e,t){if(e=n.toArray(e,t),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){var r=(e=this.pending).length%this._delta8;this.pending=e.slice(e.length-r,e.length),0===this.pending.length&&(this.pending=null),e=n.join32(e,0,e.length-r,this.endian);for(var a=0;a<e.length;a+=this._delta32)this._update(e,a,a+this._delta32)}return this},i.prototype.digest=function(e){return this.update(this._pad()),a(null===this.pending),this._digest(e)},i.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,r=t-(e+this.padLength)%t,n=new Array(r+this.padLength);n[0]=128;for(var a=1;a<r;a++)n[a]=0;if(e<<=3,"big"===this.endian){for(var i=8;i<this.padLength;i++)n[a++]=0;n[a++]=0,n[a++]=0,n[a++]=0,n[a++]=0,n[a++]=e>>>24&255,n[a++]=e>>>16&255,n[a++]=e>>>8&255,n[a++]=255&e}else for(n[a++]=255&e,n[a++]=e>>>8&255,n[a++]=e>>>16&255,n[a++]=e>>>24&255,n[a++]=0,n[a++]=0,n[a++]=0,n[a++]=0,i=8;i<this.padLength;i++)n[a++]=0;return n}},2750:(e,t,r)=>{var n=r(8626),a=r(7859);function i(e,t,r){if(!(this instanceof i))return new i(e,t,r);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(n.toArray(t,r))}e.exports=i,i.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),a(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;for(this.inner=(new this.Hash).update(e),t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e)},i.prototype.update=function(e,t){return this.inner.update(e,t),this},i.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)}},8494:(e,t,r)=>{var n=r(8626),a=r(8717),i=n.rotl32,s=n.sum32,c=n.sum32_3,o=n.sum32_4,f=a.BlockHash;function l(){if(!(this instanceof l))return new l;f.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function d(e,t,r,n){return e<=15?t^r^n:e<=31?t&r|~t&n:e<=47?(t|~r)^n:e<=63?t&n|r&~n:t^(r|~n)}function u(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function h(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}n.inherits(l,f),t.ripemd160=l,l.blockSize=512,l.outSize=160,l.hmacStrength=192,l.padLength=64,l.prototype._update=function(e,t){for(var r=this.h[0],n=this.h[1],a=this.h[2],f=this.h[3],l=this.h[4],g=r,S=n,L=a,w=f,v=l,E=0;E<80;E++){var x=s(i(o(r,d(E,n,a,f),e[b[E]+t],u(E)),y[E]),l);r=l,l=f,f=i(a,10),a=n,n=x,x=s(i(o(g,d(79-E,S,L,w),e[p[E]+t],h(E)),m[E]),v),g=v,v=w,w=i(L,10),L=S,S=x}x=c(this.h[1],a,w),this.h[1]=c(this.h[2],f,v),this.h[2]=c(this.h[3],l,g),this.h[3]=c(this.h[4],r,S),this.h[4]=c(this.h[0],n,L),this.h[0]=x},l.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h,"little"):n.split32(this.h,"little")};var b=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],p=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],y=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],m=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},2589:(e,t,r)=>{t.sha1=r(9330),t.sha224=r(5168),t.sha256=r(375),t.sha384=r(8899),t.sha512=r(790)},9330:(e,t,r)=>{var n=r(8626),a=r(8717),i=r(8156),s=n.rotl32,c=n.sum32,o=n.sum32_5,f=i.ft_1,l=a.BlockHash,d=[1518500249,1859775393,2400959708,3395469782];function u(){if(!(this instanceof u))return new u;l.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}n.inherits(u,l),e.exports=u,u.blockSize=512,u.outSize=160,u.hmacStrength=80,u.padLength=64,u.prototype._update=function(e,t){for(var r=this.W,n=0;n<16;n++)r[n]=e[t+n];for(;n<r.length;n++)r[n]=s(r[n-3]^r[n-8]^r[n-14]^r[n-16],1);var a=this.h[0],i=this.h[1],l=this.h[2],u=this.h[3],h=this.h[4];for(n=0;n<r.length;n++){var b=~~(n/20),p=o(s(a,5),f(b,i,l,u),h,r[n],d[b]);h=u,u=l,l=s(i,30),i=a,a=p}this.h[0]=c(this.h[0],a),this.h[1]=c(this.h[1],i),this.h[2]=c(this.h[2],l),this.h[3]=c(this.h[3],u),this.h[4]=c(this.h[4],h)},u.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h,"big"):n.split32(this.h,"big")}},5168:(e,t,r)=>{var n=r(8626),a=r(375);function i(){if(!(this instanceof i))return new i;a.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}n.inherits(i,a),e.exports=i,i.blockSize=512,i.outSize=224,i.hmacStrength=192,i.padLength=64,i.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h.slice(0,7),"big"):n.split32(this.h.slice(0,7),"big")}},375:(e,t,r)=>{var n=r(8626),a=r(8717),i=r(8156),s=r(7859),c=n.sum32,o=n.sum32_4,f=n.sum32_5,l=i.ch32,d=i.maj32,u=i.s0_256,h=i.s1_256,b=i.g0_256,p=i.g1_256,y=a.BlockHash,m=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function g(){if(!(this instanceof g))return new g;y.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=m,this.W=new Array(64)}n.inherits(g,y),e.exports=g,g.blockSize=512,g.outSize=256,g.hmacStrength=192,g.padLength=64,g.prototype._update=function(e,t){for(var r=this.W,n=0;n<16;n++)r[n]=e[t+n];for(;n<r.length;n++)r[n]=o(p(r[n-2]),r[n-7],b(r[n-15]),r[n-16]);var a=this.h[0],i=this.h[1],y=this.h[2],m=this.h[3],g=this.h[4],S=this.h[5],L=this.h[6],w=this.h[7];for(s(this.k.length===r.length),n=0;n<r.length;n++){var v=f(w,h(g),l(g,S,L),this.k[n],r[n]),E=c(u(a),d(a,i,y));w=L,L=S,S=g,g=c(m,v),m=y,y=i,i=a,a=c(v,E)}this.h[0]=c(this.h[0],a),this.h[1]=c(this.h[1],i),this.h[2]=c(this.h[2],y),this.h[3]=c(this.h[3],m),this.h[4]=c(this.h[4],g),this.h[5]=c(this.h[5],S),this.h[6]=c(this.h[6],L),this.h[7]=c(this.h[7],w)},g.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h,"big"):n.split32(this.h,"big")}},8899:(e,t,r)=>{var n=r(8626),a=r(790);function i(){if(!(this instanceof i))return new i;a.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}n.inherits(i,a),e.exports=i,i.blockSize=1024,i.outSize=384,i.hmacStrength=192,i.padLength=128,i.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h.slice(0,12),"big"):n.split32(this.h.slice(0,12),"big")}},790:(e,t,r)=>{var n=r(8626),a=r(8717),i=r(7859),s=n.rotr64_hi,c=n.rotr64_lo,o=n.shr64_hi,f=n.shr64_lo,l=n.sum64,d=n.sum64_hi,u=n.sum64_lo,h=n.sum64_4_hi,b=n.sum64_4_lo,p=n.sum64_5_hi,y=n.sum64_5_lo,m=a.BlockHash,g=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function S(){if(!(this instanceof S))return new S;m.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=g,this.W=new Array(160)}function L(e,t,r,n,a){var i=e&r^~e&a;return i<0&&(i+=4294967296),i}function w(e,t,r,n,a,i){var s=t&n^~t&i;return s<0&&(s+=4294967296),s}function v(e,t,r,n,a){var i=e&r^e&a^r&a;return i<0&&(i+=4294967296),i}function E(e,t,r,n,a,i){var s=t&n^t&i^n&i;return s<0&&(s+=4294967296),s}function x(e,t){var r=s(e,t,28)^s(t,e,2)^s(t,e,7);return r<0&&(r+=4294967296),r}function k(e,t){var r=c(e,t,28)^c(t,e,2)^c(t,e,7);return r<0&&(r+=4294967296),r}function J(e,t){var r=c(e,t,14)^c(e,t,18)^c(t,e,9);return r<0&&(r+=4294967296),r}function O(e,t){var r=s(e,t,1)^s(e,t,8)^o(e,t,7);return r<0&&(r+=4294967296),r}function C(e,t){var r=c(e,t,1)^c(e,t,8)^f(e,t,7);return r<0&&(r+=4294967296),r}function T(e,t){var r=c(e,t,19)^c(t,e,29)^f(e,t,6);return r<0&&(r+=4294967296),r}n.inherits(S,m),e.exports=S,S.blockSize=1024,S.outSize=512,S.hmacStrength=192,S.padLength=128,S.prototype._prepareBlock=function(e,t){for(var r=this.W,n=0;n<32;n++)r[n]=e[t+n];for(;n<r.length;n+=2){var a=(y=r[n-4],m=r[n-3],g=void 0,(g=s(y,m,19)^s(m,y,29)^o(y,m,6))<0&&(g+=4294967296),g),i=T(r[n-4],r[n-3]),c=r[n-14],f=r[n-13],l=O(r[n-30],r[n-29]),d=C(r[n-30],r[n-29]),u=r[n-32],p=r[n-31];r[n]=h(a,i,c,f,l,d,u,p),r[n+1]=b(a,i,c,f,l,d,u,p)}var y,m,g},S.prototype._update=function(e,t){this._prepareBlock(e,t);var r,n,a,c=this.W,o=this.h[0],f=this.h[1],h=this.h[2],b=this.h[3],m=this.h[4],g=this.h[5],S=this.h[6],O=this.h[7],C=this.h[8],T=this.h[9],W=this.h[10],B=this.h[11],z=this.h[12],P=this.h[13],I=this.h[14],R=this.h[15];i(this.k.length===c.length);for(var A=0;A<c.length;A+=2){var H=I,Y=R,Z=(a=void 0,(a=s(r=C,n=T,14)^s(r,n,18)^s(n,r,9))<0&&(a+=4294967296),a),M=J(C,T),j=L(C,0,W,0,z),X=w(0,T,0,B,0,P),D=this.k[A],F=this.k[A+1],U=c[A],Q=c[A+1],K=p(H,Y,Z,M,j,X,D,F,U,Q),N=y(H,Y,Z,M,j,X,D,F,U,Q);H=x(o,f),Y=k(o,f),Z=v(o,0,h,0,m),M=E(0,f,0,b,0,g);var G=d(H,Y,Z,M),V=u(H,Y,Z,M);I=z,R=P,z=W,P=B,W=C,B=T,C=d(S,O,K,N),T=u(O,O,K,N),S=m,O=g,m=h,g=b,h=o,b=f,o=d(K,N,G,V),f=u(K,N,G,V)}l(this.h,0,o,f),l(this.h,2,h,b),l(this.h,4,m,g),l(this.h,6,S,O),l(this.h,8,C,T),l(this.h,10,W,B),l(this.h,12,z,P),l(this.h,14,I,R)},S.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h,"big"):n.split32(this.h,"big")}},8156:(e,t,r)=>{var n=r(8626).rotr32;function a(e,t,r){return e&t^~e&r}function i(e,t,r){return e&t^e&r^t&r}function s(e,t,r){return e^t^r}t.ft_1=function(e,t,r,n){return 0===e?a(t,r,n):1===e||3===e?s(t,r,n):2===e?i(t,r,n):void 0},t.ch32=a,t.maj32=i,t.p32=s,t.s0_256=function(e){return n(e,2)^n(e,13)^n(e,22)},t.s1_256=function(e){return n(e,6)^n(e,11)^n(e,25)},t.g0_256=function(e){return n(e,7)^n(e,18)^e>>>3},t.g1_256=function(e){return n(e,17)^n(e,19)^e>>>10}},8626:(e,t,r)=>{var n=r(7859),a=r(87);function i(e,t){return 55296==(64512&e.charCodeAt(t))&&!(t<0||t+1>=e.length)&&56320==(64512&e.charCodeAt(t+1))}function s(e){return(e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function c(e){return 1===e.length?"0"+e:e}function o(e){return 7===e.length?"0"+e:6===e.length?"00"+e:5===e.length?"000"+e:4===e.length?"0000"+e:3===e.length?"00000"+e:2===e.length?"000000"+e:1===e.length?"0000000"+e:e}t.inherits=a,t.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if("string"==typeof e)if(t){if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e),a=0;a<e.length;a+=2)r.push(parseInt(e[a]+e[a+1],16))}else for(var n=0,a=0;a<e.length;a++){var s=e.charCodeAt(a);s<128?r[n++]=s:s<2048?(r[n++]=s>>6|192,r[n++]=63&s|128):i(e,a)?(s=65536+((1023&s)<<10)+(1023&e.charCodeAt(++a)),r[n++]=s>>18|240,r[n++]=s>>12&63|128,r[n++]=s>>6&63|128,r[n++]=63&s|128):(r[n++]=s>>12|224,r[n++]=s>>6&63|128,r[n++]=63&s|128)}else for(a=0;a<e.length;a++)r[a]=0|e[a];return r},t.toHex=function(e){for(var t="",r=0;r<e.length;r++)t+=c(e[r].toString(16));return t},t.htonl=s,t.toHex32=function(e,t){for(var r="",n=0;n<e.length;n++){var a=e[n];"little"===t&&(a=s(a)),r+=o(a.toString(16))}return r},t.zero2=c,t.zero8=o,t.join32=function(e,t,r,a){var i=r-t;n(i%4==0);for(var s=new Array(i/4),c=0,o=t;c<s.length;c++,o+=4){var f;f="big"===a?e[o]<<24|e[o+1]<<16|e[o+2]<<8|e[o+3]:e[o+3]<<24|e[o+2]<<16|e[o+1]<<8|e[o],s[c]=f>>>0}return s},t.split32=function(e,t){for(var r=new Array(4*e.length),n=0,a=0;n<e.length;n++,a+=4){var i=e[n];"big"===t?(r[a]=i>>>24,r[a+1]=i>>>16&255,r[a+2]=i>>>8&255,r[a+3]=255&i):(r[a+3]=i>>>24,r[a+2]=i>>>16&255,r[a+1]=i>>>8&255,r[a]=255&i)}return r},t.rotr32=function(e,t){return e>>>t|e<<32-t},t.rotl32=function(e,t){return e<<t|e>>>32-t},t.sum32=function(e,t){return e+t>>>0},t.sum32_3=function(e,t,r){return e+t+r>>>0},t.sum32_4=function(e,t,r,n){return e+t+r+n>>>0},t.sum32_5=function(e,t,r,n,a){return e+t+r+n+a>>>0},t.sum64=function(e,t,r,n){var a=e[t],i=n+e[t+1]>>>0,s=(i<n?1:0)+r+a;e[t]=s>>>0,e[t+1]=i},t.sum64_hi=function(e,t,r,n){return(t+n>>>0<t?1:0)+e+r>>>0},t.sum64_lo=function(e,t,r,n){return t+n>>>0},t.sum64_4_hi=function(e,t,r,n,a,i,s,c){var o=0,f=t;return o+=(f=f+n>>>0)<t?1:0,o+=(f=f+i>>>0)<i?1:0,e+r+a+s+(o+=(f=f+c>>>0)<c?1:0)>>>0},t.sum64_4_lo=function(e,t,r,n,a,i,s,c){return t+n+i+c>>>0},t.sum64_5_hi=function(e,t,r,n,a,i,s,c,o,f){var l=0,d=t;return l+=(d=d+n>>>0)<t?1:0,l+=(d=d+i>>>0)<i?1:0,l+=(d=d+c>>>0)<c?1:0,e+r+a+s+o+(l+=(d=d+f>>>0)<f?1:0)>>>0},t.sum64_5_lo=function(e,t,r,n,a,i,s,c,o,f){return t+n+i+c+f>>>0},t.rotr64_hi=function(e,t,r){return(t<<32-r|e>>>r)>>>0},t.rotr64_lo=function(e,t,r){return(e<<32-r|t>>>r)>>>0},t.shr64_hi=function(e,t,r){return e>>>r},t.shr64_lo=function(e,t,r){return(e<<32-r|t>>>r)>>>0}},8898:(e,t)=>{t.read=function(e,t,r,n,a){var i,s,c=8*a-n-1,o=(1<<c)-1,f=o>>1,l=-7,d=r?a-1:0,u=r?-1:1,h=e[t+d];for(d+=u,i=h&(1<<-l)-1,h>>=-l,l+=c;l>0;i=256*i+e[t+d],d+=u,l-=8);for(s=i&(1<<-l)-1,i>>=-l,l+=n;l>0;s=256*s+e[t+d],d+=u,l-=8);if(0===i)i=1-f;else{if(i===o)return s?NaN:1/0*(h?-1:1);s+=Math.pow(2,n),i-=f}return(h?-1:1)*s*Math.pow(2,i-n)},t.write=function(e,t,r,n,a,i){var s,c,o,f=8*i-a-1,l=(1<<f)-1,d=l>>1,u=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,h=n?0:i-1,b=n?1:-1,p=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(c=isNaN(t)?1:0,s=l):(s=Math.floor(Math.log(t)/Math.LN2),t*(o=Math.pow(2,-s))<1&&(s--,o*=2),(t+=s+d>=1?u/o:u*Math.pow(2,1-d))*o>=2&&(s++,o/=2),s+d>=l?(c=0,s=l):s+d>=1?(c=(t*o-1)*Math.pow(2,a),s+=d):(c=t*Math.pow(2,d-1)*Math.pow(2,a),s=0));a>=8;e[r+h]=255&c,h+=b,c/=256,a-=8);for(s=s<<a|c,f+=a;f>0;e[r+h]=255&s,h+=b,s/=256,f-=8);e[r+h-b]|=128*p}},87:e=>{"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}}},3261:e=>{var t=1/0,r=9007199254740991,n=/^\s+|\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,s=/^0o[0-7]+$/i,c=/^(?:0|[1-9]\d*)$/,o=parseInt,f=Object.prototype.toString,l=Math.ceil,d=Math.max;function u(e,t,r){var n=-1,a=e.length;t<0&&(t=-t>a?0:a+t),(r=r>a?a:r)<0&&(r+=a),a=t>r?0:r-t>>>0,t>>>=0;for(var i=Array(a);++n<a;)i[n]=e[n+t];return i}function h(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}e.exports=function(e,b,p){b=(p?function(e,t,n){if(!h(n))return!1;var a=typeof t;return!!("number"==a?function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=r}(e.length)&&!function(e){var t=h(e)?f.call(e):"";return"[object Function]"==t||"[object GeneratorFunction]"==t}(e)}(n)&&function(e,t){return!!(t=null==t?r:t)&&("number"==typeof e||c.test(e))&&e>-1&&e%1==0&&e<t}(t,n.length):"string"==a&&t in n)&&function(e,t){return e===t||e!=e&&t!=t}(n[t],e)}(e,b,p):void 0===b)?1:d(function(e){var r=function(e){return e?(e=function(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==f.call(e)}(e))return NaN;if(h(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=h(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var r=i.test(e);return r||s.test(e)?o(e.slice(2),r?2:8):a.test(e)?NaN:+e}(e))===t||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}(e),c=r%1;return r==r?c?r-c:r:0}(b),0);var y=e?e.length:0;if(!y||b<1)return[];for(var m=0,g=0,S=Array(l(y/b));m<y;)S[g++]=u(e,m,m+=b);return S}},7902:(e,t,r)=>{e=r.nmd(e);var n="__lodash_hash_undefined__",a=9007199254740991,i="[object Arguments]",s="[object Boolean]",c="[object Date]",o="[object Function]",f="[object GeneratorFunction]",l="[object Map]",d="[object Number]",u="[object Object]",h="[object Promise]",b="[object RegExp]",p="[object Set]",y="[object String]",m="[object Symbol]",g="[object WeakMap]",S="[object ArrayBuffer]",L="[object DataView]",w="[object Float32Array]",v="[object Float64Array]",E="[object Int8Array]",x="[object Int16Array]",k="[object Int32Array]",J="[object Uint8Array]",O="[object Uint8ClampedArray]",C="[object Uint16Array]",T="[object Uint32Array]",W=/\w*$/,B=/^\[object .+?Constructor\]$/,z=/^(?:0|[1-9]\d*)$/,P={};P[i]=P["[object Array]"]=P[S]=P[L]=P[s]=P[c]=P[w]=P[v]=P[E]=P[x]=P[k]=P[l]=P[d]=P[u]=P[b]=P[p]=P[y]=P[m]=P[J]=P[O]=P[C]=P[T]=!0,P["[object Error]"]=P[o]=P[g]=!1;var I="object"==typeof r.g&&r.g&&r.g.Object===Object&&r.g,R="object"==typeof self&&self&&self.Object===Object&&self,A=I||R||Function("return this")(),H=t&&!t.nodeType&&t,Y=H&&e&&!e.nodeType&&e,Z=Y&&Y.exports===H;function M(e,t){return e.set(t[0],t[1]),e}function j(e,t){return e.add(t),e}function X(e,t,r,n){var a=-1,i=e?e.length:0;for(n&&i&&(r=e[++a]);++a<i;)r=t(r,e[a],a,e);return r}function D(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}function F(e){var t=-1,r=Array(e.size);return e.forEach((function(e,n){r[++t]=[n,e]})),r}function U(e,t){return function(r){return e(t(r))}}function Q(e){var t=-1,r=Array(e.size);return e.forEach((function(e){r[++t]=e})),r}var K,N=Array.prototype,G=Function.prototype,V=Object.prototype,q=A["__core-js_shared__"],_=(K=/[^.]+$/.exec(q&&q.keys&&q.keys.IE_PROTO||""))?"Symbol(src)_1."+K:"",$=G.toString,ee=V.hasOwnProperty,te=V.toString,re=RegExp("^"+$.call(ee).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ne=Z?A.Buffer:void 0,ae=A.Symbol,ie=A.Uint8Array,se=U(Object.getPrototypeOf,Object),ce=Object.create,oe=V.propertyIsEnumerable,fe=N.splice,le=Object.getOwnPropertySymbols,de=ne?ne.isBuffer:void 0,ue=U(Object.keys,Object),he=Ae(A,"DataView"),be=Ae(A,"Map"),pe=Ae(A,"Promise"),ye=Ae(A,"Set"),me=Ae(A,"WeakMap"),ge=Ae(Object,"create"),Se=je(he),Le=je(be),we=je(pe),ve=je(ye),Ee=je(me),xe=ae?ae.prototype:void 0,ke=xe?xe.valueOf:void 0;function Je(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Oe(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Ce(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Te(e){this.__data__=new Oe(e)}function We(e,t,r){var n=e[t];ee.call(e,t)&&Xe(n,r)&&(void 0!==r||t in e)||(e[t]=r)}function Be(e,t){for(var r=e.length;r--;)if(Xe(e[r][0],t))return r;return-1}function ze(e,t,r,n,a,h,g){var B;if(n&&(B=h?n(e,a,h,g):n(e)),void 0!==B)return B;if(!Ke(e))return e;var z=De(e);if(z){if(B=function(e){var t=e.length,r=e.constructor(t);return t&&"string"==typeof e[0]&&ee.call(e,"index")&&(r.index=e.index,r.input=e.input),r}(e),!t)return function(e,t){var r=-1,n=e.length;for(t||(t=Array(n));++r<n;)t[r]=e[r];return t}(e,B)}else{var I=Ye(e),R=I==o||I==f;if(Ue(e))return function(e,t){if(t)return e.slice();var r=new e.constructor(e.length);return e.copy(r),r}(e,t);if(I==u||I==i||R&&!h){if(D(e))return h?e:{};if(B=function(e){return"function"!=typeof e.constructor||Me(e)?{}:Ke(t=se(e))?ce(t):{};var t}(R?{}:e),!t)return function(e,t){return Ie(e,He(e),t)}(e,function(e,t){return e&&Ie(t,Ne(t),e)}(B,e))}else{if(!P[I])return h?e:{};B=function(e,t,r,n){var a,i=e.constructor;switch(t){case S:return Pe(e);case s:case c:return new i(+e);case L:return function(e,t){var r=t?Pe(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.byteLength)}(e,n);case w:case v:case E:case x:case k:case J:case O:case C:case T:return function(e,t){var r=t?Pe(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.length)}(e,n);case l:return function(e,t,r){return X(t?r(F(e),!0):F(e),M,new e.constructor)}(e,n,r);case d:case y:return new i(e);case b:return function(e){var t=new e.constructor(e.source,W.exec(e));return t.lastIndex=e.lastIndex,t}(e);case p:return function(e,t,r){return X(t?r(Q(e),!0):Q(e),j,new e.constructor)}(e,n,r);case m:return a=e,ke?Object(ke.call(a)):{}}}(e,I,ze,t)}}g||(g=new Te);var A=g.get(e);if(A)return A;if(g.set(e,B),!z)var H=r?function(e){return function(e,t,r){var n=t(e);return De(e)?n:function(e,t){for(var r=-1,n=t.length,a=e.length;++r<n;)e[a+r]=t[r];return e}(n,r(e))}(e,Ne,He)}(e):Ne(e);return function(e,t){for(var r=-1,n=e?e.length:0;++r<n&&!1!==t(e[r],r););}(H||e,(function(a,i){H&&(a=e[i=a]),We(B,i,ze(a,t,r,n,i,e,g))})),B}function Pe(e){var t=new e.constructor(e.byteLength);return new ie(t).set(new ie(e)),t}function Ie(e,t,r,n){r||(r={});for(var a=-1,i=t.length;++a<i;){var s=t[a],c=n?n(r[s],e[s],s,r,e):void 0;We(r,s,void 0===c?e[s]:c)}return r}function Re(e,t){var r,n,a=e.__data__;return("string"==(n=typeof(r=t))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?a["string"==typeof t?"string":"hash"]:a.map}function Ae(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return function(e){return!(!Ke(e)||(t=e,_&&_ in t))&&(Qe(e)||D(e)?re:B).test(je(e));var t}(r)?r:void 0}Je.prototype.clear=function(){this.__data__=ge?ge(null):{}},Je.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Je.prototype.get=function(e){var t=this.__data__;if(ge){var r=t[e];return r===n?void 0:r}return ee.call(t,e)?t[e]:void 0},Je.prototype.has=function(e){var t=this.__data__;return ge?void 0!==t[e]:ee.call(t,e)},Je.prototype.set=function(e,t){return this.__data__[e]=ge&&void 0===t?n:t,this},Oe.prototype.clear=function(){this.__data__=[]},Oe.prototype.delete=function(e){var t=this.__data__,r=Be(t,e);return!(r<0||(r==t.length-1?t.pop():fe.call(t,r,1),0))},Oe.prototype.get=function(e){var t=this.__data__,r=Be(t,e);return r<0?void 0:t[r][1]},Oe.prototype.has=function(e){return Be(this.__data__,e)>-1},Oe.prototype.set=function(e,t){var r=this.__data__,n=Be(r,e);return n<0?r.push([e,t]):r[n][1]=t,this},Ce.prototype.clear=function(){this.__data__={hash:new Je,map:new(be||Oe),string:new Je}},Ce.prototype.delete=function(e){return Re(this,e).delete(e)},Ce.prototype.get=function(e){return Re(this,e).get(e)},Ce.prototype.has=function(e){return Re(this,e).has(e)},Ce.prototype.set=function(e,t){return Re(this,e).set(e,t),this},Te.prototype.clear=function(){this.__data__=new Oe},Te.prototype.delete=function(e){return this.__data__.delete(e)},Te.prototype.get=function(e){return this.__data__.get(e)},Te.prototype.has=function(e){return this.__data__.has(e)},Te.prototype.set=function(e,t){var r=this.__data__;if(r instanceof Oe){var n=r.__data__;if(!be||n.length<199)return n.push([e,t]),this;r=this.__data__=new Ce(n)}return r.set(e,t),this};var He=le?U(le,Object):function(){return[]},Ye=function(e){return te.call(e)};function Ze(e,t){return!!(t=null==t?a:t)&&("number"==typeof e||z.test(e))&&e>-1&&e%1==0&&e<t}function Me(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||V)}function je(e){if(null!=e){try{return $.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Xe(e,t){return e===t||e!=e&&t!=t}(he&&Ye(new he(new ArrayBuffer(1)))!=L||be&&Ye(new be)!=l||pe&&Ye(pe.resolve())!=h||ye&&Ye(new ye)!=p||me&&Ye(new me)!=g)&&(Ye=function(e){var t=te.call(e),r=t==u?e.constructor:void 0,n=r?je(r):void 0;if(n)switch(n){case Se:return L;case Le:return l;case we:return h;case ve:return p;case Ee:return g}return t});var De=Array.isArray;function Fe(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=a}(e.length)&&!Qe(e)}var Ue=de||function(){return!1};function Qe(e){var t=Ke(e)?te.call(e):"";return t==o||t==f}function Ke(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function Ne(e){return Fe(e)?function(e,t){var r=De(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Fe(e)}(e)&&ee.call(e,"callee")&&(!oe.call(e,"callee")||te.call(e)==i)}(e)?function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(e.length,String):[],n=r.length,a=!!n;for(var s in e)!t&&!ee.call(e,s)||a&&("length"==s||Ze(s,n))||r.push(s);return r}(e):function(e){if(!Me(e))return ue(e);var t=[];for(var r in Object(e))ee.call(e,r)&&"constructor"!=r&&t.push(r);return t}(e)}e.exports=function(e,t){return ze(e,!0,!0,t)}},9467:(e,t,r)=>{e=r.nmd(e);var n="__lodash_hash_undefined__",a=1,i=2,s=1/0,c=9007199254740991,o="[object Arguments]",f="[object Array]",l="[object Boolean]",d="[object Date]",u="[object Error]",h="[object Function]",b="[object GeneratorFunction]",p="[object Map]",y="[object Number]",m="[object Object]",g="[object Promise]",S="[object RegExp]",L="[object Set]",w="[object String]",v="[object Symbol]",E="[object WeakMap]",x="[object ArrayBuffer]",k="[object DataView]",J=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,O=/^\w*$/,C=/^\./,T=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,W=/\\(\\)?/g,B=/^\[object .+?Constructor\]$/,z=/^(?:0|[1-9]\d*)$/,P={};P["[object Float32Array]"]=P["[object Float64Array]"]=P["[object Int8Array]"]=P["[object Int16Array]"]=P["[object Int32Array]"]=P["[object Uint8Array]"]=P["[object Uint8ClampedArray]"]=P["[object Uint16Array]"]=P["[object Uint32Array]"]=!0,P[o]=P[f]=P[x]=P[l]=P[k]=P[d]=P[u]=P[h]=P[p]=P[y]=P[m]=P[S]=P[L]=P[w]=P[E]=!1;var I="object"==typeof r.g&&r.g&&r.g.Object===Object&&r.g,R="object"==typeof self&&self&&self.Object===Object&&self,A=I||R||Function("return this")(),H=t&&!t.nodeType&&t,Y=H&&e&&!e.nodeType&&e,Z=Y&&Y.exports===H&&I.process,M=function(){try{return Z&&Z.binding("util")}catch(e){}}(),j=M&&M.isTypedArray;function X(e,t){for(var r=-1,n=e?e.length:0;++r<n;)if(!t(e[r],r,e))return!1;return!0}function D(e,t){for(var r=-1,n=e?e.length:0;++r<n;)if(t(e[r],r,e))return!0;return!1}function F(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}function U(e){var t=-1,r=Array(e.size);return e.forEach((function(e,n){r[++t]=[n,e]})),r}function Q(e){var t=-1,r=Array(e.size);return e.forEach((function(e){r[++t]=e})),r}var K,N,G,V=Array.prototype,q=Function.prototype,_=Object.prototype,$=A["__core-js_shared__"],ee=(K=/[^.]+$/.exec($&&$.keys&&$.keys.IE_PROTO||""))?"Symbol(src)_1."+K:"",te=q.toString,re=_.hasOwnProperty,ne=_.toString,ae=RegExp("^"+te.call(re).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ie=A.Symbol,se=A.Uint8Array,ce=_.propertyIsEnumerable,oe=V.splice,fe=(N=Object.keys,G=Object,function(e){return N(G(e))}),le=Me(A,"DataView"),de=Me(A,"Map"),ue=Me(A,"Promise"),he=Me(A,"Set"),be=Me(A,"WeakMap"),pe=Me(Object,"create"),ye=Ne(le),me=Ne(de),ge=Ne(ue),Se=Ne(he),Le=Ne(be),we=ie?ie.prototype:void 0,ve=we?we.valueOf:void 0,Ee=we?we.toString:void 0;function xe(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function ke(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Je(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Oe(e){var t=-1,r=e?e.length:0;for(this.__data__=new Je;++t<r;)this.add(e[t])}function Ce(e){this.__data__=new ke(e)}function Te(e,t){for(var r=e.length;r--;)if(Ve(e[r][0],t))return r;return-1}xe.prototype.clear=function(){this.__data__=pe?pe(null):{}},xe.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},xe.prototype.get=function(e){var t=this.__data__;if(pe){var r=t[e];return r===n?void 0:r}return re.call(t,e)?t[e]:void 0},xe.prototype.has=function(e){var t=this.__data__;return pe?void 0!==t[e]:re.call(t,e)},xe.prototype.set=function(e,t){return this.__data__[e]=pe&&void 0===t?n:t,this},ke.prototype.clear=function(){this.__data__=[]},ke.prototype.delete=function(e){var t=this.__data__,r=Te(t,e);return!(r<0||(r==t.length-1?t.pop():oe.call(t,r,1),0))},ke.prototype.get=function(e){var t=this.__data__,r=Te(t,e);return r<0?void 0:t[r][1]},ke.prototype.has=function(e){return Te(this.__data__,e)>-1},ke.prototype.set=function(e,t){var r=this.__data__,n=Te(r,e);return n<0?r.push([e,t]):r[n][1]=t,this},Je.prototype.clear=function(){this.__data__={hash:new xe,map:new(de||ke),string:new xe}},Je.prototype.delete=function(e){return Ze(this,e).delete(e)},Je.prototype.get=function(e){return Ze(this,e).get(e)},Je.prototype.has=function(e){return Ze(this,e).has(e)},Je.prototype.set=function(e,t){return Ze(this,e).set(e,t),this},Oe.prototype.add=Oe.prototype.push=function(e){return this.__data__.set(e,n),this},Oe.prototype.has=function(e){return this.__data__.has(e)},Ce.prototype.clear=function(){this.__data__=new ke},Ce.prototype.delete=function(e){return this.__data__.delete(e)},Ce.prototype.get=function(e){return this.__data__.get(e)},Ce.prototype.has=function(e){return this.__data__.has(e)},Ce.prototype.set=function(e,t){var r=this.__data__;if(r instanceof ke){var n=r.__data__;if(!de||n.length<199)return n.push([e,t]),this;r=this.__data__=new Je(n)}return r.set(e,t),this};var We,Be=(We=function(e,t){return e&&Pe(e,t,st)},function(e,t){if(null==e)return e;if(!$e(e))return We(e,t);for(var r=e.length,n=-1,a=Object(e);++n<r&&!1!==t(a[n],n,a););return e});function ze(e,t){var r=!0;return Be(e,(function(e,n,a){return r=!!t(e,n,a)})),r}var Pe=function(e,t,r){for(var n=-1,a=Object(e),i=r(e),s=i.length;s--;){var c=i[++n];if(!1===t(a[c],c,a))break}return e};function Ie(e,t){for(var r=0,n=(t=De(t,e)?[t]:He(t)).length;null!=e&&r<n;)e=e[Ke(t[r++])];return r&&r==n?e:void 0}function Re(e,t){return null!=e&&t in Object(e)}function Ae(e,t,r,n,s){return e===t||(null==e||null==t||!rt(e)&&!nt(t)?e!=e&&t!=t:function(e,t,r,n,s,c){var h=_e(e),b=_e(t),g=f,E=f;h||(g=(g=je(e))==o?m:g),b||(E=(E=je(t))==o?m:E);var J=g==m&&!F(e),O=E==m&&!F(t),C=g==E;if(C&&!J)return c||(c=new Ce),h||it(e)?Ye(e,t,r,n,s,c):function(e,t,r,n,s,c,o){switch(r){case k:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case x:return!(e.byteLength!=t.byteLength||!n(new se(e),new se(t)));case l:case d:case y:return Ve(+e,+t);case u:return e.name==t.name&&e.message==t.message;case S:case w:return e==t+"";case p:var f=U;case L:var h=c&i;if(f||(f=Q),e.size!=t.size&&!h)return!1;var b=o.get(e);if(b)return b==t;c|=a,o.set(e,t);var m=Ye(f(e),f(t),n,s,c,o);return o.delete(e),m;case v:if(ve)return ve.call(e)==ve.call(t)}return!1}(e,t,g,r,n,s,c);if(!(s&i)){var T=J&&re.call(e,"__wrapped__"),W=O&&re.call(t,"__wrapped__");if(T||W){var B=T?e.value():e,z=W?t.value():t;return c||(c=new Ce),r(B,z,n,s,c)}}return!!C&&(c||(c=new Ce),function(e,t,r,n,a,s){var c=a&i,o=st(e),f=o.length;if(f!=st(t).length&&!c)return!1;for(var l=f;l--;){var d=o[l];if(!(c?d in t:re.call(t,d)))return!1}var u=s.get(e);if(u&&s.get(t))return u==t;var h=!0;s.set(e,t),s.set(t,e);for(var b=c;++l<f;){var p=e[d=o[l]],y=t[d];if(n)var m=c?n(y,p,d,t,e,s):n(p,y,d,e,t,s);if(!(void 0===m?p===y||r(p,y,n,a,s):m)){h=!1;break}b||(b="constructor"==d)}if(h&&!b){var g=e.constructor,S=t.constructor;g==S||!("constructor"in e)||!("constructor"in t)||"function"==typeof g&&g instanceof g&&"function"==typeof S&&S instanceof S||(h=!1)}return s.delete(e),s.delete(t),h}(e,t,r,n,s,c))}(e,t,Ae,r,n,s))}function He(e){return _e(e)?e:Qe(e)}function Ye(e,t,r,n,s,c){var o=s&i,f=e.length,l=t.length;if(f!=l&&!(o&&l>f))return!1;var d=c.get(e);if(d&&c.get(t))return d==t;var u=-1,h=!0,b=s&a?new Oe:void 0;for(c.set(e,t),c.set(t,e);++u<f;){var p=e[u],y=t[u];if(n)var m=o?n(y,p,u,t,e,c):n(p,y,u,e,t,c);if(void 0!==m){if(m)continue;h=!1;break}if(b){if(!D(t,(function(e,t){if(!b.has(t)&&(p===e||r(p,e,n,s,c)))return b.add(t)}))){h=!1;break}}else if(p!==y&&!r(p,y,n,s,c)){h=!1;break}}return c.delete(e),c.delete(t),h}function Ze(e,t){var r,n,a=e.__data__;return("string"==(n=typeof(r=t))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?a["string"==typeof t?"string":"hash"]:a.map}function Me(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return function(e){return!(!rt(e)||function(e){return!!ee&&ee in e}(e))&&(et(e)||F(e)?ae:B).test(Ne(e))}(r)?r:void 0}var je=function(e){return ne.call(e)};function Xe(e,t){return!!(t=null==t?c:t)&&("number"==typeof e||z.test(e))&&e>-1&&e%1==0&&e<t}function De(e,t){if(_e(e))return!1;var r=typeof e;return!("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=e&&!at(e))||O.test(e)||!J.test(e)||null!=t&&e in Object(t)}function Fe(e){return e==e&&!rt(e)}function Ue(e,t){return function(r){return null!=r&&r[e]===t&&(void 0!==t||e in Object(r))}}(le&&je(new le(new ArrayBuffer(1)))!=k||de&&je(new de)!=p||ue&&je(ue.resolve())!=g||he&&je(new he)!=L||be&&je(new be)!=E)&&(je=function(e){var t=ne.call(e),r=t==m?e.constructor:void 0,n=r?Ne(r):void 0;if(n)switch(n){case ye:return k;case me:return p;case ge:return g;case Se:return L;case Le:return E}return t});var Qe=Ge((function(e){var t;e=null==(t=e)?"":function(e){if("string"==typeof e)return e;if(at(e))return Ee?Ee.call(e):"";var t=e+"";return"0"==t&&1/e==-s?"-0":t}(t);var r=[];return C.test(e)&&r.push(""),e.replace(T,(function(e,t,n,a){r.push(n?a.replace(W,"$1"):t||e)})),r}));function Ke(e){if("string"==typeof e||at(e))return e;var t=e+"";return"0"==t&&1/e==-s?"-0":t}function Ne(e){if(null!=e){try{return te.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Ge(e,t){if("function"!=typeof e||t&&"function"!=typeof t)throw new TypeError("Expected a function");var r=function(){var n=arguments,a=t?t.apply(this,n):n[0],i=r.cache;if(i.has(a))return i.get(a);var s=e.apply(this,n);return r.cache=i.set(a,s),s};return r.cache=new(Ge.Cache||Je),r}function Ve(e,t){return e===t||e!=e&&t!=t}function qe(e){return function(e){return nt(e)&&$e(e)}(e)&&re.call(e,"callee")&&(!ce.call(e,"callee")||ne.call(e)==o)}Ge.Cache=Je;var _e=Array.isArray;function $e(e){return null!=e&&tt(e.length)&&!et(e)}function et(e){var t=rt(e)?ne.call(e):"";return t==h||t==b}function tt(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=c}function rt(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function nt(e){return!!e&&"object"==typeof e}function at(e){return"symbol"==typeof e||nt(e)&&ne.call(e)==v}var it=j?function(e){return function(t){return e(t)}}(j):function(e){return nt(e)&&tt(e.length)&&!!P[ne.call(e)]};function st(e){return $e(e)?function(e,t){var r=_e(e)||qe(e)?function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(e.length,String):[],n=r.length,a=!!n;for(var i in e)!t&&!re.call(e,i)||a&&("length"==i||Xe(i,n))||r.push(i);return r}(e):function(e){if(r=(t=e)&&t.constructor,t!==("function"==typeof r&&r.prototype||_))return fe(e);var t,r,n=[];for(var a in Object(e))re.call(e,a)&&"constructor"!=a&&n.push(a);return n}(e)}function ct(e){return e}e.exports=function(e,t,r){var n,s,c,o,f,l=_e(e)?X:ze;return r&&function(e,t,r){if(!rt(r))return!1;var n=typeof t;return!!("number"==n?$e(r)&&Xe(t,r.length):"string"==n&&t in r)&&Ve(r[t],e)}(e,t,r)&&(t=void 0),l(e,"function"==typeof(n=t)?n:null==n?ct:"object"==typeof n?_e(n)?function(e,t){return De(e)&&Fe(t)?Ue(Ke(e),t):function(r){var n=function(e,t,r){var n=null==e?void 0:Ie(e,t);return void 0===n?void 0:n}(r,e);return void 0===n&&n===t?function(e,t){return null!=e&&function(e,t,r){for(var n,a=-1,i=(t=De(t,e)?[t]:He(t)).length;++a<i;){var s=Ke(t[a]);if(!(n=null!=e&&r(e,s)))break;e=e[s]}return n||!!(i=e?e.length:0)&&tt(i)&&Xe(s,i)&&(_e(e)||qe(e))}(e,t,Re)}(r,e):Ae(t,n,void 0,a|i)}}(n[0],n[1]):1==(c=function(e){for(var t=st(e),r=t.length;r--;){var n=t[r],a=e[n];t[r]=[n,a,Fe(a)]}return t}(s=n)).length&&c[0][2]?Ue(c[0][0],c[0][1]):function(e){return e===s||function(e,t,r,n){var s=r.length,c=s;if(null==e)return!c;for(e=Object(e);s--;){var o=r[s];if(o[2]?o[1]!==e[o[0]]:!(o[0]in e))return!1}for(;++s<c;){var f=(o=r[s])[0],l=e[f],d=o[1];if(o[2]){if(void 0===l&&!(f in e))return!1}else{var u,h=new Ce;if(!(void 0===u?Ae(d,l,n,a|i,h):u))return!1}}return!0}(e,0,c)}:De(o=n)?(f=Ke(o),function(e){return null==e?void 0:e[f]}):function(e){return function(t){return Ie(t,e)}}(o))}},1328:(e,t,r)=>{e=r.nmd(e);var n="__lodash_hash_undefined__",a=1,i=2,s=1/0,c=9007199254740991,o="[object Arguments]",f="[object Array]",l="[object Boolean]",d="[object Date]",u="[object Error]",h="[object Function]",b="[object GeneratorFunction]",p="[object Map]",y="[object Number]",m="[object Object]",g="[object Promise]",S="[object RegExp]",L="[object Set]",w="[object String]",v="[object Symbol]",E="[object WeakMap]",x="[object ArrayBuffer]",k="[object DataView]",J=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,O=/^\w*$/,C=/^\./,T=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,W=/\\(\\)?/g,B=/^\[object .+?Constructor\]$/,z=/^(?:0|[1-9]\d*)$/,P={};P["[object Float32Array]"]=P["[object Float64Array]"]=P["[object Int8Array]"]=P["[object Int16Array]"]=P["[object Int32Array]"]=P["[object Uint8Array]"]=P["[object Uint8ClampedArray]"]=P["[object Uint16Array]"]=P["[object Uint32Array]"]=!0,P[o]=P[f]=P[x]=P[l]=P[k]=P[d]=P[u]=P[h]=P[p]=P[y]=P[m]=P[S]=P[L]=P[w]=P[E]=!1;var I="object"==typeof r.g&&r.g&&r.g.Object===Object&&r.g,R="object"==typeof self&&self&&self.Object===Object&&self,A=I||R||Function("return this")(),H=t&&!t.nodeType&&t,Y=H&&e&&!e.nodeType&&e,Z=Y&&Y.exports===H&&I.process,M=function(){try{return Z&&Z.binding("util")}catch(e){}}(),j=M&&M.isTypedArray;function X(e,t){for(var r=-1,n=e?e.length:0;++r<n;)if(t(e[r],r,e))return!0;return!1}function D(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}function F(e){var t=-1,r=Array(e.size);return e.forEach((function(e,n){r[++t]=[n,e]})),r}function U(e){var t=-1,r=Array(e.size);return e.forEach((function(e){r[++t]=e})),r}var Q,K,N,G=Array.prototype,V=Function.prototype,q=Object.prototype,_=A["__core-js_shared__"],$=(Q=/[^.]+$/.exec(_&&_.keys&&_.keys.IE_PROTO||""))?"Symbol(src)_1."+Q:"",ee=V.toString,te=q.hasOwnProperty,re=q.toString,ne=RegExp("^"+ee.call(te).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ae=A.Symbol,ie=A.Uint8Array,se=q.propertyIsEnumerable,ce=G.splice,oe=(K=Object.keys,N=Object,function(e){return K(N(e))}),fe=Re(A,"DataView"),le=Re(A,"Map"),de=Re(A,"Promise"),ue=Re(A,"Set"),he=Re(A,"WeakMap"),be=Re(Object,"create"),pe=De(fe),ye=De(le),me=De(de),ge=De(ue),Se=De(he),Le=ae?ae.prototype:void 0,we=Le?Le.valueOf:void 0,ve=Le?Le.toString:void 0;function Ee(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function xe(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function ke(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Je(e){var t=-1,r=e?e.length:0;for(this.__data__=new ke;++t<r;)this.add(e[t])}function Oe(e){this.__data__=new xe(e)}function Ce(e,t){for(var r=e.length;r--;)if(Ue(e[r][0],t))return r;return-1}Ee.prototype.clear=function(){this.__data__=be?be(null):{}},Ee.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Ee.prototype.get=function(e){var t=this.__data__;if(be){var r=t[e];return r===n?void 0:r}return te.call(t,e)?t[e]:void 0},Ee.prototype.has=function(e){var t=this.__data__;return be?void 0!==t[e]:te.call(t,e)},Ee.prototype.set=function(e,t){return this.__data__[e]=be&&void 0===t?n:t,this},xe.prototype.clear=function(){this.__data__=[]},xe.prototype.delete=function(e){var t=this.__data__,r=Ce(t,e);return!(r<0||(r==t.length-1?t.pop():ce.call(t,r,1),0))},xe.prototype.get=function(e){var t=this.__data__,r=Ce(t,e);return r<0?void 0:t[r][1]},xe.prototype.has=function(e){return Ce(this.__data__,e)>-1},xe.prototype.set=function(e,t){var r=this.__data__,n=Ce(r,e);return n<0?r.push([e,t]):r[n][1]=t,this},ke.prototype.clear=function(){this.__data__={hash:new Ee,map:new(le||xe),string:new Ee}},ke.prototype.delete=function(e){return Ie(this,e).delete(e)},ke.prototype.get=function(e){return Ie(this,e).get(e)},ke.prototype.has=function(e){return Ie(this,e).has(e)},ke.prototype.set=function(e,t){return Ie(this,e).set(e,t),this},Je.prototype.add=Je.prototype.push=function(e){return this.__data__.set(e,n),this},Je.prototype.has=function(e){return this.__data__.has(e)},Oe.prototype.clear=function(){this.__data__=new xe},Oe.prototype.delete=function(e){return this.__data__.delete(e)},Oe.prototype.get=function(e){return this.__data__.get(e)},Oe.prototype.has=function(e){return this.__data__.has(e)},Oe.prototype.set=function(e,t){var r=this.__data__;if(r instanceof xe){var n=r.__data__;if(!le||n.length<199)return n.push([e,t]),this;r=this.__data__=new ke(n)}return r.set(e,t),this};function Te(e,t){for(var r=0,n=(t=Ye(t,e)?[t]:ze(t)).length;null!=e&&r<n;)e=e[Xe(t[r++])];return r&&r==n?e:void 0}function We(e,t){return null!=e&&t in Object(e)}function Be(e,t,r,n,s){return e===t||(null==e||null==t||!qe(e)&&!_e(t)?e!=e&&t!=t:function(e,t,r,n,s,c){var h=Ke(e),b=Ke(t),g=f,E=f;h||(g=(g=Ae(e))==o?m:g),b||(E=(E=Ae(t))==o?m:E);var J=g==m&&!D(e),O=E==m&&!D(t),C=g==E;if(C&&!J)return c||(c=new Oe),h||et(e)?Pe(e,t,r,n,s,c):function(e,t,r,n,s,c,o){switch(r){case k:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case x:return!(e.byteLength!=t.byteLength||!n(new ie(e),new ie(t)));case l:case d:case y:return Ue(+e,+t);case u:return e.name==t.name&&e.message==t.message;case S:case w:return e==t+"";case p:var f=F;case L:var h=c&i;if(f||(f=U),e.size!=t.size&&!h)return!1;var b=o.get(e);if(b)return b==t;c|=a,o.set(e,t);var m=Pe(f(e),f(t),n,s,c,o);return o.delete(e),m;case v:if(we)return we.call(e)==we.call(t)}return!1}(e,t,g,r,n,s,c);if(!(s&i)){var T=J&&te.call(e,"__wrapped__"),W=O&&te.call(t,"__wrapped__");if(T||W){var B=T?e.value():e,z=W?t.value():t;return c||(c=new Oe),r(B,z,n,s,c)}}return!!C&&(c||(c=new Oe),function(e,t,r,n,a,s){var c=a&i,o=tt(e),f=o.length;if(f!=tt(t).length&&!c)return!1;for(var l=f;l--;){var d=o[l];if(!(c?d in t:te.call(t,d)))return!1}var u=s.get(e);if(u&&s.get(t))return u==t;var h=!0;s.set(e,t),s.set(t,e);for(var b=c;++l<f;){var p=e[d=o[l]],y=t[d];if(n)var m=c?n(y,p,d,t,e,s):n(p,y,d,e,t,s);if(!(void 0===m?p===y||r(p,y,n,a,s):m)){h=!1;break}b||(b="constructor"==d)}if(h&&!b){var g=e.constructor,S=t.constructor;g==S||!("constructor"in e)||!("constructor"in t)||"function"==typeof g&&g instanceof g&&"function"==typeof S&&S instanceof S||(h=!1)}return s.delete(e),s.delete(t),h}(e,t,r,n,s,c))}(e,t,Be,r,n,s))}function ze(e){return Ke(e)?e:je(e)}function Pe(e,t,r,n,s,c){var o=s&i,f=e.length,l=t.length;if(f!=l&&!(o&&l>f))return!1;var d=c.get(e);if(d&&c.get(t))return d==t;var u=-1,h=!0,b=s&a?new Je:void 0;for(c.set(e,t),c.set(t,e);++u<f;){var p=e[u],y=t[u];if(n)var m=o?n(y,p,u,t,e,c):n(p,y,u,e,t,c);if(void 0!==m){if(m)continue;h=!1;break}if(b){if(!X(t,(function(e,t){if(!b.has(t)&&(p===e||r(p,e,n,s,c)))return b.add(t)}))){h=!1;break}}else if(p!==y&&!r(p,y,n,s,c)){h=!1;break}}return c.delete(e),c.delete(t),h}function Ie(e,t){var r,n,a=e.__data__;return("string"==(n=typeof(r=t))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?a["string"==typeof t?"string":"hash"]:a.map}function Re(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return function(e){return!(!qe(e)||function(e){return!!$&&$ in e}(e))&&(Ge(e)||D(e)?ne:B).test(De(e))}(r)?r:void 0}var Ae=function(e){return re.call(e)};function He(e,t){return!!(t=null==t?c:t)&&("number"==typeof e||z.test(e))&&e>-1&&e%1==0&&e<t}function Ye(e,t){if(Ke(e))return!1;var r=typeof e;return!("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=e&&!$e(e))||O.test(e)||!J.test(e)||null!=t&&e in Object(t)}function Ze(e){return e==e&&!qe(e)}function Me(e,t){return function(r){return null!=r&&r[e]===t&&(void 0!==t||e in Object(r))}}(fe&&Ae(new fe(new ArrayBuffer(1)))!=k||le&&Ae(new le)!=p||de&&Ae(de.resolve())!=g||ue&&Ae(new ue)!=L||he&&Ae(new he)!=E)&&(Ae=function(e){var t=re.call(e),r=t==m?e.constructor:void 0,n=r?De(r):void 0;if(n)switch(n){case pe:return k;case ye:return p;case me:return g;case ge:return L;case Se:return E}return t});var je=Fe((function(e){var t;e=null==(t=e)?"":function(e){if("string"==typeof e)return e;if($e(e))return ve?ve.call(e):"";var t=e+"";return"0"==t&&1/e==-s?"-0":t}(t);var r=[];return C.test(e)&&r.push(""),e.replace(T,(function(e,t,n,a){r.push(n?a.replace(W,"$1"):t||e)})),r}));function Xe(e){if("string"==typeof e||$e(e))return e;var t=e+"";return"0"==t&&1/e==-s?"-0":t}function De(e){if(null!=e){try{return ee.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Fe(e,t){if("function"!=typeof e||t&&"function"!=typeof t)throw new TypeError("Expected a function");var r=function(){var n=arguments,a=t?t.apply(this,n):n[0],i=r.cache;if(i.has(a))return i.get(a);var s=e.apply(this,n);return r.cache=i.set(a,s),s};return r.cache=new(Fe.Cache||ke),r}function Ue(e,t){return e===t||e!=e&&t!=t}function Qe(e){return function(e){return _e(e)&&Ne(e)}(e)&&te.call(e,"callee")&&(!se.call(e,"callee")||re.call(e)==o)}Fe.Cache=ke;var Ke=Array.isArray;function Ne(e){return null!=e&&Ve(e.length)&&!Ge(e)}function Ge(e){var t=qe(e)?re.call(e):"";return t==h||t==b}function Ve(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=c}function qe(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function _e(e){return!!e&&"object"==typeof e}function $e(e){return"symbol"==typeof e||_e(e)&&re.call(e)==v}var et=j?function(e){return function(t){return e(t)}}(j):function(e){return _e(e)&&Ve(e.length)&&!!P[re.call(e)]};function tt(e){return Ne(e)?function(e,t){var r=Ke(e)||Qe(e)?function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(e.length,String):[],n=r.length,a=!!n;for(var i in e)!t&&!te.call(e,i)||a&&("length"==i||He(i,n))||r.push(i);return r}(e):function(e){if(r=(t=e)&&t.constructor,t!==("function"==typeof r&&r.prototype||q))return oe(e);var t,r,n=[];for(var a in Object(e))te.call(e,a)&&"constructor"!=a&&n.push(a);return n}(e)}function rt(e){return e}e.exports=function(e,t){var r,n,s,c,o,f={};return t="function"==typeof(r=t)?r:null==r?rt:"object"==typeof r?Ke(r)?function(e,t){return Ye(e)&&Ze(t)?Me(Xe(e),t):function(r){var n=function(e,t,r){var n=null==e?void 0:Te(e,t);return void 0===n?void 0:n}(r,e);return void 0===n&&n===t?function(e,t){return null!=e&&function(e,t,r){for(var n,a=-1,i=(t=Ye(t,e)?[t]:ze(t)).length;++a<i;){var s=Xe(t[a]);if(!(n=null!=e&&r(e,s)))break;e=e[s]}return n||!!(i=e?e.length:0)&&Ve(i)&&He(s,i)&&(Ke(e)||Qe(e))}(e,t,We)}(r,e):Be(t,n,void 0,a|i)}}(r[0],r[1]):(s=function(e){for(var t=tt(e),r=t.length;r--;){var n=t[r],a=e[n];t[r]=[n,a,Ze(a)]}return t}(n=r),1==s.length&&s[0][2]?Me(s[0][0],s[0][1]):function(e){return e===n||function(e,t,r,n){var s=r.length,c=s;if(null==e)return!c;for(e=Object(e);s--;){var o=r[s];if(o[2]?o[1]!==e[o[0]]:!(o[0]in e))return!1}for(;++s<c;){var f=(o=r[s])[0],l=e[f],d=o[1];if(o[2]){if(void 0===l&&!(f in e))return!1}else{var u,h=new Oe;if(!(void 0===u?Be(d,l,n,a|i,h):u))return!1}}return!0}(e,0,s)}):Ye(c=r)?(o=Xe(c),function(e){return null==e?void 0:e[o]}):function(e){return function(t){return Te(t,e)}}(c),function(e,t){e&&function(e,t,r){for(var n=-1,a=Object(e),i=r(e),s=i.length;s--;){var c=i[++n];if(!1===t(a[c],c,a))break}}(e,t,tt)}(e,(function(e,r,n){f[r]=t(e,r,n)})),f}},3545:e=>{var t=1/0,r=4294967295,n=/^\s+|\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,s=/^0o[0-7]+$/i,c=parseInt,o=Object.prototype.toString,f=Math.min;function l(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function d(e){return e}e.exports=function(e,u){if((e=function(e){var r=function(e){return e?(e=function(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==o.call(e)}(e))return NaN;if(l(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=l(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var r=i.test(e);return r||s.test(e)?c(e.slice(2),r?2:8):a.test(e)?NaN:+e}(e))===t||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}(e),f=r%1;return r==r?f?r-f:r:0}(e))<1||e>9007199254740991)return[];var h=r,b=f(e,r);e-=r;for(var p=function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(b,u="function"==typeof u?u:d);++h<e;)u(h);return p}},5465:e=>{var t,r,n=Object.prototype.toString,a=Math.max,i=(t=function(e){if(!e||!e.length)return[];var t=0;return e=function(e,t){for(var r=-1,n=e?e.length:0,a=0,i=[];++r<n;){var s=e[r];t(s)&&(i[a++]=s)}return i}(e,(function(e){if(function(e){return!!e&&"object"==typeof e}(r=e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}(e.length)&&!function(e){var t=function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(e)?n.call(e):"";return"[object Function]"==t||"[object GeneratorFunction]"==t}(e)}(r))return t=a(e.length,t),!0;var r})),function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(t,(function(t){return function(e,t){for(var r=-1,n=e?e.length:0,a=Array(n);++r<n;)a[r]=t(e[r],r,e);return a}(e,(r=t,function(e){return null==e?void 0:e[r]}));var r}))},r=a(void 0===r?t.length-1:r,0),function(){for(var e=arguments,n=-1,i=a(e.length-r,0),s=Array(i);++n<i;)s[n]=e[r+n];n=-1;for(var c=Array(r+1);++n<r;)c[n]=e[n];return c[r]=s,function(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}(t,this,c)});e.exports=i},9500:(e,t,r)=>{var n=r(87),a=r(6883),i=r(7172).Buffer,s=new Array(16);function c(){a.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function o(e,t){return e<<t|e>>>32-t}function f(e,t,r,n,a,i,s){return o(e+(t&r|~t&n)+a+i|0,s)+t|0}function l(e,t,r,n,a,i,s){return o(e+(t&n|r&~n)+a+i|0,s)+t|0}function d(e,t,r,n,a,i,s){return o(e+(t^r^n)+a+i|0,s)+t|0}function u(e,t,r,n,a,i,s){return o(e+(r^(t|~n))+a+i|0,s)+t|0}n(c,a),c.prototype._update=function(){for(var e=s,t=0;t<16;++t)e[t]=this._block.readInt32LE(4*t);var r=this._a,n=this._b,a=this._c,i=this._d;r=f(r,n,a,i,e[0],3614090360,7),i=f(i,r,n,a,e[1],3905402710,12),a=f(a,i,r,n,e[2],606105819,17),n=f(n,a,i,r,e[3],3250441966,22),r=f(r,n,a,i,e[4],4118548399,7),i=f(i,r,n,a,e[5],1200080426,12),a=f(a,i,r,n,e[6],2821735955,17),n=f(n,a,i,r,e[7],4249261313,22),r=f(r,n,a,i,e[8],1770035416,7),i=f(i,r,n,a,e[9],2336552879,12),a=f(a,i,r,n,e[10],4294925233,17),n=f(n,a,i,r,e[11],2304563134,22),r=f(r,n,a,i,e[12],1804603682,7),i=f(i,r,n,a,e[13],4254626195,12),a=f(a,i,r,n,e[14],2792965006,17),r=l(r,n=f(n,a,i,r,e[15],1236535329,22),a,i,e[1],4129170786,5),i=l(i,r,n,a,e[6],3225465664,9),a=l(a,i,r,n,e[11],643717713,14),n=l(n,a,i,r,e[0],3921069994,20),r=l(r,n,a,i,e[5],3593408605,5),i=l(i,r,n,a,e[10],38016083,9),a=l(a,i,r,n,e[15],3634488961,14),n=l(n,a,i,r,e[4],3889429448,20),r=l(r,n,a,i,e[9],568446438,5),i=l(i,r,n,a,e[14],3275163606,9),a=l(a,i,r,n,e[3],4107603335,14),n=l(n,a,i,r,e[8],1163531501,20),r=l(r,n,a,i,e[13],2850285829,5),i=l(i,r,n,a,e[2],4243563512,9),a=l(a,i,r,n,e[7],1735328473,14),r=d(r,n=l(n,a,i,r,e[12],2368359562,20),a,i,e[5],4294588738,4),i=d(i,r,n,a,e[8],2272392833,11),a=d(a,i,r,n,e[11],1839030562,16),n=d(n,a,i,r,e[14],4259657740,23),r=d(r,n,a,i,e[1],2763975236,4),i=d(i,r,n,a,e[4],1272893353,11),a=d(a,i,r,n,e[7],4139469664,16),n=d(n,a,i,r,e[10],3200236656,23),r=d(r,n,a,i,e[13],681279174,4),i=d(i,r,n,a,e[0],3936430074,11),a=d(a,i,r,n,e[3],3572445317,16),n=d(n,a,i,r,e[6],76029189,23),r=d(r,n,a,i,e[9],3654602809,4),i=d(i,r,n,a,e[12],3873151461,11),a=d(a,i,r,n,e[15],530742520,16),r=u(r,n=d(n,a,i,r,e[2],3299628645,23),a,i,e[0],4096336452,6),i=u(i,r,n,a,e[7],1126891415,10),a=u(a,i,r,n,e[14],2878612391,15),n=u(n,a,i,r,e[5],4237533241,21),r=u(r,n,a,i,e[12],1700485571,6),i=u(i,r,n,a,e[3],2399980690,10),a=u(a,i,r,n,e[10],4293915773,15),n=u(n,a,i,r,e[1],2240044497,21),r=u(r,n,a,i,e[8],1873313359,6),i=u(i,r,n,a,e[15],4264355552,10),a=u(a,i,r,n,e[6],2734768916,15),n=u(n,a,i,r,e[13],1309151649,21),r=u(r,n,a,i,e[4],4149444226,6),i=u(i,r,n,a,e[11],3174756917,10),a=u(a,i,r,n,e[2],718787259,15),n=u(n,a,i,r,e[9],3951481745,21),this._a=this._a+r|0,this._b=this._b+n|0,this._c=this._c+a|0,this._d=this._d+i|0},c.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var e=i.allocUnsafe(16);return e.writeInt32LE(this._a,0),e.writeInt32LE(this._b,4),e.writeInt32LE(this._c,8),e.writeInt32LE(this._d,12),e},e.exports=c},7859:e=>{function t(e,t){if(!e)throw new Error(t||"Assertion failed")}e.exports=t,t.equal=function(e,t,r){if(e!=t)throw new Error(r||"Assertion failed: "+e+" != "+t)}},6938:e=>{var t={};function r(e,r,n){n||(n=Error);var a=function(e){var t,n;function a(t,n,a){return e.call(this,function(e,t,n){return"string"==typeof r?r:r(e,t,n)}(t,n,a))||this}return n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,a}(n);a.prototype.name=n.name,a.prototype.code=e,t[e]=a}function n(e,t){if(Array.isArray(e)){var r=e.length;return e=e.map((function(e){return String(e)})),r>2?"one of ".concat(t," ").concat(e.slice(0,r-1).join(", "),", or ")+e[r-1]:2===r?"one of ".concat(t," ").concat(e[0]," or ").concat(e[1]):"of ".concat(t," ").concat(e[0])}return"of ".concat(t," ").concat(String(e))}r("ERR_INVALID_OPT_VALUE",(function(e,t){return'The value "'+t+'" is invalid for option "'+e+'"'}),TypeError),r("ERR_INVALID_ARG_TYPE",(function(e,t,r){var a,i,s,c,o;if("string"==typeof t&&(i="not ",t.substr(0,4)===i)?(a="must not be",t=t.replace(/^not /,"")):a="must be",function(e,t,r){return(void 0===r||r>e.length)&&(r=e.length),e.substring(r-9,r)===t}(e," argument"))s="The ".concat(e," ").concat(a," ").concat(n(t,"type"));else{var f=("number"!=typeof o&&(o=0),o+1>(c=e).length||-1===c.indexOf(".",o)?"argument":"property");s='The "'.concat(e,'" ').concat(f," ").concat(a," ").concat(n(t,"type"))}return s+". Received type ".concat(typeof r)}),TypeError),r("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),r("ERR_METHOD_NOT_IMPLEMENTED",(function(e){return"The "+e+" method is not implemented"})),r("ERR_STREAM_PREMATURE_CLOSE","Premature close"),r("ERR_STREAM_DESTROYED",(function(e){return"Cannot call "+e+" after a stream was destroyed"})),r("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),r("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),r("ERR_STREAM_WRITE_AFTER_END","write after end"),r("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),r("ERR_UNKNOWN_ENCODING",(function(e){return"Unknown encoding: "+e}),TypeError),r("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),e.exports.q=t},4439:(e,t,r)=>{var n=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};e.exports=f;var a=r(5327),i=r(4567);r(87)(f,a);for(var s=n(i.prototype),c=0;c<s.length;c++){var o=s[c];f.prototype[o]||(f.prototype[o]=i.prototype[o])}function f(e){if(!(this instanceof f))return new f(e);a.call(this,e),i.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once("end",l)))}function l(){this._writableState.ended||process.nextTick(d,this)}function d(e){e.end()}Object.defineProperty(f.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(f.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(f.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(f.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}})},3754:(e,t,r)=>{e.exports=a;var n=r(2175);function a(e){if(!(this instanceof a))return new a(e);n.call(this,e)}r(87)(a,n),a.prototype._transform=function(e,t,r){r(null,e)}},5327:(e,t,r)=>{var n;e.exports=x,x.ReadableState=E,r(343).EventEmitter;var a,i=function(e,t){return e.listeners(t).length},s=r(6052),c=r(816).Buffer,o=(void 0!==r.g?r.g:"undefined"!=typeof window?window:"undefined"!=typeof self?self:{}).Uint8Array||function(){},f=r(1632);a=f&&f.debuglog?f.debuglog("stream"):function(){};var l,d,u,h=r(7712),b=r(7640),p=r(5985).getHighWaterMark,y=r(6938).q,m=y.ERR_INVALID_ARG_TYPE,g=y.ERR_STREAM_PUSH_AFTER_EOF,S=y.ERR_METHOD_NOT_IMPLEMENTED,L=y.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;r(87)(x,s);var w=b.errorOrDestroy,v=["error","close","destroy","pause","resume"];function E(e,t,a){n=n||r(4439),e=e||{},"boolean"!=typeof a&&(a=t instanceof n),this.objectMode=!!e.objectMode,a&&(this.objectMode=this.objectMode||!!e.readableObjectMode),this.highWaterMark=p(this,e,"readableHighWaterMark",a),this.buffer=new h,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(l||(l=r(4361).s),this.decoder=new l(e.encoding),this.encoding=e.encoding)}function x(e){if(n=n||r(4439),!(this instanceof x))return new x(e);var t=this instanceof n;this._readableState=new E(e,this,t),this.readable=!0,e&&("function"==typeof e.read&&(this._read=e.read),"function"==typeof e.destroy&&(this._destroy=e.destroy)),s.call(this)}function k(e,t,r,n,i){a("readableAddChunk",t);var s,f=e._readableState;if(null===t)f.reading=!1,function(e,t){if(a("onEofChunk"),!t.ended){if(t.decoder){var r=t.decoder.end();r&&r.length&&(t.buffer.push(r),t.length+=t.objectMode?1:r.length)}t.ended=!0,t.sync?T(e):(t.needReadable=!1,t.emittedReadable||(t.emittedReadable=!0,W(e)))}}(e,f);else if(i||(s=function(e,t){var r,n;return n=t,c.isBuffer(n)||n instanceof o||"string"==typeof t||void 0===t||e.objectMode||(r=new m("chunk",["string","Buffer","Uint8Array"],t)),r}(f,t)),s)w(e,s);else if(f.objectMode||t&&t.length>0)if("string"==typeof t||f.objectMode||Object.getPrototypeOf(t)===c.prototype||(t=function(e){return c.from(e)}(t)),n)f.endEmitted?w(e,new L):J(e,f,t,!0);else if(f.ended)w(e,new g);else{if(f.destroyed)return!1;f.reading=!1,f.decoder&&!r?(t=f.decoder.write(t),f.objectMode||0!==t.length?J(e,f,t,!1):B(e,f)):J(e,f,t,!1)}else n||(f.reading=!1,B(e,f));return!f.ended&&(f.length<f.highWaterMark||0===f.length)}function J(e,t,r,n){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit("data",r)):(t.length+=t.objectMode?1:r.length,n?t.buffer.unshift(r):t.buffer.push(r),t.needReadable&&T(e)),B(e,t)}Object.defineProperty(x.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),x.prototype.destroy=b.destroy,x.prototype._undestroy=b.undestroy,x.prototype._destroy=function(e,t){t(e)},x.prototype.push=function(e,t){var r,n=this._readableState;return n.objectMode?r=!0:"string"==typeof e&&((t=t||n.defaultEncoding)!==n.encoding&&(e=c.from(e,t),t=""),r=!0),k(this,e,t,!1,r)},x.prototype.unshift=function(e){return k(this,e,null,!0,!1)},x.prototype.isPaused=function(){return!1===this._readableState.flowing},x.prototype.setEncoding=function(e){l||(l=r(4361).s);var t=new l(e);this._readableState.decoder=t,this._readableState.encoding=this._readableState.decoder.encoding;for(var n=this._readableState.buffer.head,a="";null!==n;)a+=t.write(n.data),n=n.next;return this._readableState.buffer.clear(),""!==a&&this._readableState.buffer.push(a),this._readableState.length=a.length,this};var O=1073741824;function C(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=O?e=O:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function T(e){var t=e._readableState;a("emitReadable",t.needReadable,t.emittedReadable),t.needReadable=!1,t.emittedReadable||(a("emitReadable",t.flowing),t.emittedReadable=!0,process.nextTick(W,e))}function W(e){var t=e._readableState;a("emitReadable_",t.destroyed,t.length,t.ended),t.destroyed||!t.length&&!t.ended||(e.emit("readable"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,A(e)}function B(e,t){t.readingMore||(t.readingMore=!0,process.nextTick(z,e,t))}function z(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var r=t.length;if(a("maybeReadMore read 0"),e.read(0),r===t.length)break}t.readingMore=!1}function P(e){var t=e._readableState;t.readableListening=e.listenerCount("readable")>0,t.resumeScheduled&&!t.paused?t.flowing=!0:e.listenerCount("data")>0&&e.resume()}function I(e){a("readable nexttick read 0"),e.read(0)}function R(e,t){a("resume",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit("resume"),A(e),t.flowing&&!t.reading&&e.read(0)}function A(e){var t=e._readableState;for(a("flow",t.flowing);t.flowing&&null!==e.read(););}function H(e,t){return 0===t.length?null:(t.objectMode?r=t.buffer.shift():!e||e>=t.length?(r=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):r=t.buffer.consume(e,t.decoder),r);var r}function Y(e){var t=e._readableState;a("endReadable",t.endEmitted),t.endEmitted||(t.ended=!0,process.nextTick(Z,t,e))}function Z(e,t){if(a("endReadableNT",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,t.readable=!1,t.emit("end"),e.autoDestroy)){var r=t._writableState;(!r||r.autoDestroy&&r.finished)&&t.destroy()}}function M(e,t){for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}x.prototype.read=function(e){a("read",e),e=parseInt(e,10);var t=this._readableState,r=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0!==t.highWaterMark?t.length>=t.highWaterMark:t.length>0)||t.ended))return a("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?Y(this):T(this),null;if(0===(e=C(e,t))&&t.ended)return 0===t.length&&Y(this),null;var n,i=t.needReadable;return a("need readable",i),(0===t.length||t.length-e<t.highWaterMark)&&a("length less than watermark",i=!0),t.ended||t.reading?a("reading or ended",i=!1):i&&(a("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=C(r,t))),null===(n=e>0?H(e,t):null)?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(t.ended||(t.needReadable=!0),r!==e&&t.ended&&Y(this)),null!==n&&this.emit("data",n),n},x.prototype._read=function(e){w(this,new S("_read()"))},x.prototype.pipe=function(e,t){var r=this,n=this._readableState;switch(n.pipesCount){case 0:n.pipes=e;break;case 1:n.pipes=[n.pipes,e];break;default:n.pipes.push(e)}n.pipesCount+=1,a("pipe count=%d opts=%j",n.pipesCount,t);var s=t&&!1===t.end||e===process.stdout||e===process.stderr?b:c;function c(){a("onend"),e.end()}n.endEmitted?process.nextTick(s):r.once("end",s),e.on("unpipe",(function t(i,s){a("onunpipe"),i===r&&s&&!1===s.hasUnpiped&&(s.hasUnpiped=!0,a("cleanup"),e.removeListener("close",u),e.removeListener("finish",h),e.removeListener("drain",o),e.removeListener("error",d),e.removeListener("unpipe",t),r.removeListener("end",c),r.removeListener("end",b),r.removeListener("data",l),f=!0,!n.awaitDrain||e._writableState&&!e._writableState.needDrain||o())}));var o=function(e){return function(){var t=e._readableState;a("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&i(e,"data")&&(t.flowing=!0,A(e))}}(r);e.on("drain",o);var f=!1;function l(t){a("ondata");var i=e.write(t);a("dest.write",i),!1===i&&((1===n.pipesCount&&n.pipes===e||n.pipesCount>1&&-1!==M(n.pipes,e))&&!f&&(a("false write response, pause",n.awaitDrain),n.awaitDrain++),r.pause())}function d(t){a("onerror",t),b(),e.removeListener("error",d),0===i(e,"error")&&w(e,t)}function u(){e.removeListener("finish",h),b()}function h(){a("onfinish"),e.removeListener("close",u),b()}function b(){a("unpipe"),r.unpipe(e)}return r.on("data",l),function(e,t,r){if("function"==typeof e.prependListener)return e.prependListener(t,r);e._events&&e._events[t]?Array.isArray(e._events[t])?e._events[t].unshift(r):e._events[t]=[r,e._events[t]]:e.on(t,r)}(e,"error",d),e.once("close",u),e.once("finish",h),e.emit("pipe",r),n.flowing||(a("pipe resume"),r.resume()),e},x.prototype.unpipe=function(e){var t=this._readableState,r={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes||(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,r)),this;if(!e){var n=t.pipes,a=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var i=0;i<a;i++)n[i].emit("unpipe",this,{hasUnpiped:!1});return this}var s=M(t.pipes,e);return-1===s||(t.pipes.splice(s,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,r)),this},x.prototype.on=function(e,t){var r=s.prototype.on.call(this,e,t),n=this._readableState;return"data"===e?(n.readableListening=this.listenerCount("readable")>0,!1!==n.flowing&&this.resume()):"readable"===e&&(n.endEmitted||n.readableListening||(n.readableListening=n.needReadable=!0,n.flowing=!1,n.emittedReadable=!1,a("on readable",n.length,n.reading),n.length?T(this):n.reading||process.nextTick(I,this))),r},x.prototype.addListener=x.prototype.on,x.prototype.removeListener=function(e,t){var r=s.prototype.removeListener.call(this,e,t);return"readable"===e&&process.nextTick(P,this),r},x.prototype.removeAllListeners=function(e){var t=s.prototype.removeAllListeners.apply(this,arguments);return"readable"!==e&&void 0!==e||process.nextTick(P,this),t},x.prototype.resume=function(){var e=this._readableState;return e.flowing||(a("resume"),e.flowing=!e.readableListening,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,process.nextTick(R,e,t))}(this,e)),e.paused=!1,this},x.prototype.pause=function(){return a("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(a("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},x.prototype.wrap=function(e){var t=this,r=this._readableState,n=!1;for(var i in e.on("end",(function(){if(a("wrapped end"),r.decoder&&!r.ended){var e=r.decoder.end();e&&e.length&&t.push(e)}t.push(null)})),e.on("data",(function(i){a("wrapped data"),r.decoder&&(i=r.decoder.write(i)),r.objectMode&&null==i||(r.objectMode||i&&i.length)&&(t.push(i)||(n=!0,e.pause()))})),e)void 0===this[i]&&"function"==typeof e[i]&&(this[i]=function(t){return function(){return e[t].apply(e,arguments)}}(i));for(var s=0;s<v.length;s++)e.on(v[s],this.emit.bind(this,v[s]));return this._read=function(t){a("wrapped _read",t),n&&(n=!1,e.resume())},this},"function"==typeof Symbol&&(x.prototype[Symbol.asyncIterator]=function(){return void 0===d&&(d=r(4157)),d(this)}),Object.defineProperty(x.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(x.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(x.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),x._fromList=H,Object.defineProperty(x.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),"function"==typeof Symbol&&(x.from=function(e,t){return void 0===u&&(u=r(5800)),u(x,e,t)})},2175:(e,t,r)=>{e.exports=l;var n=r(6938).q,a=n.ERR_METHOD_NOT_IMPLEMENTED,i=n.ERR_MULTIPLE_CALLBACK,s=n.ERR_TRANSFORM_ALREADY_TRANSFORMING,c=n.ERR_TRANSFORM_WITH_LENGTH_0,o=r(4439);function f(e,t){var r=this._transformState;r.transforming=!1;var n=r.writecb;if(null===n)return this.emit("error",new i);r.writechunk=null,r.writecb=null,null!=t&&this.push(t),n(e);var a=this._readableState;a.reading=!1,(a.needReadable||a.length<a.highWaterMark)&&this._read(a.highWaterMark)}function l(e){if(!(this instanceof l))return new l(e);o.call(this,e),this._transformState={afterTransform:f.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",d)}function d(){var e=this;"function"!=typeof this._flush||this._readableState.destroyed?u(this,null,null):this._flush((function(t,r){u(e,t,r)}))}function u(e,t,r){if(t)return e.emit("error",t);if(null!=r&&e.push(r),e._writableState.length)throw new c;if(e._transformState.transforming)throw new s;return e.push(null)}r(87)(l,o),l.prototype.push=function(e,t){return this._transformState.needTransform=!1,o.prototype.push.call(this,e,t)},l.prototype._transform=function(e,t,r){r(new a("_transform()"))},l.prototype._write=function(e,t,r){var n=this._transformState;if(n.writecb=r,n.writechunk=e,n.writeencoding=t,!n.transforming){var a=this._readableState;(n.needTransform||a.needReadable||a.length<a.highWaterMark)&&this._read(a.highWaterMark)}},l.prototype._read=function(e){var t=this._transformState;null===t.writechunk||t.transforming?t.needTransform=!0:(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform))},l.prototype._destroy=function(e,t){o.prototype._destroy.call(this,e,(function(e){t(e)}))}},4567:(e,t,r)=>{function n(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,r){var n=e.entry;for(e.entry=null;n;){var a=n.callback;t.pendingcb--,a(undefined),n=n.next}t.corkedRequestsFree.next=e}(t,e)}}var a;e.exports=x,x.WritableState=E;var i,s={deprecate:r(7451)},c=r(6052),o=r(816).Buffer,f=(void 0!==r.g?r.g:"undefined"!=typeof window?window:"undefined"!=typeof self?self:{}).Uint8Array||function(){},l=r(7640),d=r(5985).getHighWaterMark,u=r(6938).q,h=u.ERR_INVALID_ARG_TYPE,b=u.ERR_METHOD_NOT_IMPLEMENTED,p=u.ERR_MULTIPLE_CALLBACK,y=u.ERR_STREAM_CANNOT_PIPE,m=u.ERR_STREAM_DESTROYED,g=u.ERR_STREAM_NULL_VALUES,S=u.ERR_STREAM_WRITE_AFTER_END,L=u.ERR_UNKNOWN_ENCODING,w=l.errorOrDestroy;function v(){}function E(e,t,i){a=a||r(4439),e=e||{},"boolean"!=typeof i&&(i=t instanceof a),this.objectMode=!!e.objectMode,i&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=d(this,e,"writableHighWaterMark",i),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var s=!1===e.decodeStrings;this.decodeStrings=!s,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,t){var r=e._writableState,n=r.sync,a=r.writecb;if("function"!=typeof a)throw new p;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(r),t)!function(e,t,r,n,a){--t.pendingcb,r?(process.nextTick(a,n),process.nextTick(W,e,t),e._writableState.errorEmitted=!0,w(e,n)):(a(n),e._writableState.errorEmitted=!0,w(e,n),W(e,t))}(e,r,n,t,a);else{var i=C(r)||e.destroyed;i||r.corked||r.bufferProcessing||!r.bufferedRequest||O(e,r),n?process.nextTick(J,e,r,i,a):J(e,r,i,a)}}(t,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new n(this)}function x(e){var t=this instanceof(a=a||r(4439));if(!t&&!i.call(x,this))return new x(e);this._writableState=new E(e,this,t),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final)),c.call(this)}function k(e,t,r,n,a,i,s){t.writelen=n,t.writecb=s,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new m("write")):r?e._writev(a,t.onwrite):e._write(a,i,t.onwrite),t.sync=!1}function J(e,t,r,n){r||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,n(),W(e,t)}function O(e,t){t.bufferProcessing=!0;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var a=t.bufferedRequestCount,i=new Array(a),s=t.corkedRequestsFree;s.entry=r;for(var c=0,o=!0;r;)i[c]=r,r.isBuf||(o=!1),r=r.next,c+=1;i.allBuffers=o,k(e,t,!0,t.length,i,"",s.finish),t.pendingcb++,t.lastBufferedRequest=null,s.next?(t.corkedRequestsFree=s.next,s.next=null):t.corkedRequestsFree=new n(t),t.bufferedRequestCount=0}else{for(;r;){var f=r.chunk,l=r.encoding,d=r.callback;if(k(e,t,!1,t.objectMode?1:f.length,f,l,d),r=r.next,t.bufferedRequestCount--,t.writing)break}null===r&&(t.lastBufferedRequest=null)}t.bufferedRequest=r,t.bufferProcessing=!1}function C(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function T(e,t){e._final((function(r){t.pendingcb--,r&&w(e,r),t.prefinished=!0,e.emit("prefinish"),W(e,t)}))}function W(e,t){var r=C(t);if(r&&(function(e,t){t.prefinished||t.finalCalled||("function"!=typeof e._final||t.destroyed?(t.prefinished=!0,e.emit("prefinish")):(t.pendingcb++,t.finalCalled=!0,process.nextTick(T,e,t)))}(e,t),0===t.pendingcb&&(t.finished=!0,e.emit("finish"),t.autoDestroy))){var n=e._readableState;(!n||n.autoDestroy&&n.endEmitted)&&e.destroy()}return r}r(87)(x,c),E.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(E.prototype,"buffer",{get:s.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(i=Function.prototype[Symbol.hasInstance],Object.defineProperty(x,Symbol.hasInstance,{value:function(e){return!!i.call(this,e)||this===x&&e&&e._writableState instanceof E}})):i=function(e){return e instanceof this},x.prototype.pipe=function(){w(this,new y)},x.prototype.write=function(e,t,r){var n,a=this._writableState,i=!1,s=!a.objectMode&&(n=e,o.isBuffer(n)||n instanceof f);return s&&!o.isBuffer(e)&&(e=function(e){return o.from(e)}(e)),"function"==typeof t&&(r=t,t=null),s?t="buffer":t||(t=a.defaultEncoding),"function"!=typeof r&&(r=v),a.ending?function(e,t){var r=new S;w(e,r),process.nextTick(t,r)}(this,r):(s||function(e,t,r,n){var a;return null===r?a=new g:"string"==typeof r||t.objectMode||(a=new h("chunk",["string","Buffer"],r)),!a||(w(e,a),process.nextTick(n,a),!1)}(this,a,e,r))&&(a.pendingcb++,i=function(e,t,r,n,a,i){if(!r){var s=function(e,t,r){return e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=o.from(t,r)),t}(t,n,a);n!==s&&(r=!0,a="buffer",n=s)}var c=t.objectMode?1:n.length;t.length+=c;var f=t.length<t.highWaterMark;if(f||(t.needDrain=!0),t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:n,encoding:a,isBuf:r,callback:i,next:null},l?l.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else k(e,t,!1,c,n,a,i);return f}(this,a,s,e,t,r)),i},x.prototype.cork=function(){this._writableState.corked++},x.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||O(this,e))},x.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new L(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(x.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(x.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),x.prototype._write=function(e,t,r){r(new b("_write()"))},x.prototype._writev=null,x.prototype.end=function(e,t,r){var n=this._writableState;return"function"==typeof e?(r=e,e=null,t=null):"function"==typeof t&&(r=t,t=null),null!=e&&this.write(e,t),n.corked&&(n.corked=1,this.uncork()),n.ending||function(e,t,r){t.ending=!0,W(e,t),r&&(t.finished?process.nextTick(r):e.once("finish",r)),t.ended=!0,e.writable=!1}(this,n,r),this},Object.defineProperty(x.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(x.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),x.prototype.destroy=l.destroy,x.prototype._undestroy=l.undestroy,x.prototype._destroy=function(e,t){t(e)}},4157:(e,t,r)=>{var n;function a(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var i=r(5027),s=Symbol("lastResolve"),c=Symbol("lastReject"),o=Symbol("error"),f=Symbol("ended"),l=Symbol("lastPromise"),d=Symbol("handlePromise"),u=Symbol("stream");function h(e,t){return{value:e,done:t}}function b(e){var t=e[s];if(null!==t){var r=e[u].read();null!==r&&(e[l]=null,e[s]=null,e[c]=null,t(h(r,!1)))}}function p(e){process.nextTick(b,e)}var y=Object.getPrototypeOf((function(){})),m=Object.setPrototypeOf((a(n={get stream(){return this[u]},next:function(){var e=this,t=this[o];if(null!==t)return Promise.reject(t);if(this[f])return Promise.resolve(h(void 0,!0));if(this[u].destroyed)return new Promise((function(t,r){process.nextTick((function(){e[o]?r(e[o]):t(h(void 0,!0))}))}));var r,n=this[l];if(n)r=new Promise(function(e,t){return function(r,n){e.then((function(){t[f]?r(h(void 0,!0)):t[d](r,n)}),n)}}(n,this));else{var a=this[u].read();if(null!==a)return Promise.resolve(h(a,!1));r=new Promise(this[d])}return this[l]=r,r}},Symbol.asyncIterator,(function(){return this})),a(n,"return",(function(){var e=this;return new Promise((function(t,r){e[u].destroy(null,(function(e){e?r(e):t(h(void 0,!0))}))}))})),n),y);e.exports=function(e){var t,r=Object.create(m,(a(t={},u,{value:e,writable:!0}),a(t,s,{value:null,writable:!0}),a(t,c,{value:null,writable:!0}),a(t,o,{value:null,writable:!0}),a(t,f,{value:e._readableState.endEmitted,writable:!0}),a(t,d,{value:function(e,t){var n=r[u].read();n?(r[l]=null,r[s]=null,r[c]=null,e(h(n,!1))):(r[s]=e,r[c]=t)},writable:!0}),t));return r[l]=null,i(e,(function(e){if(e&&"ERR_STREAM_PREMATURE_CLOSE"!==e.code){var t=r[c];return null!==t&&(r[l]=null,r[s]=null,r[c]=null,t(e)),void(r[o]=e)}var n=r[s];null!==n&&(r[l]=null,r[s]=null,r[c]=null,n(h(void 0,!0))),r[f]=!0})),e.on("readable",p.bind(null,r)),r}},7712:(e,t,r)=>{function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t,r){return(t=c(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,c(n.key),n)}}function c(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}var o=r(816).Buffer,f=r(471).inspect,l=f&&f.custom||"inspect";e.exports=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}var t,r;return t=e,(r=[{key:"push",value:function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length}},{key:"unshift",value:function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}},{key:"shift",value:function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(e){if(0===this.length)return"";for(var t=this.head,r=""+t.data;t=t.next;)r+=e+t.data;return r}},{key:"concat",value:function(e){if(0===this.length)return o.alloc(0);for(var t,r,n,a=o.allocUnsafe(e>>>0),i=this.head,s=0;i;)t=i.data,r=a,n=s,o.prototype.copy.call(t,r,n),s+=i.data.length,i=i.next;return a}},{key:"consume",value:function(e,t){var r;return e<this.head.data.length?(r=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):r=e===this.head.data.length?this.shift():t?this._getString(e):this._getBuffer(e),r}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(e){var t=this.head,r=1,n=t.data;for(e-=n.length;t=t.next;){var a=t.data,i=e>a.length?a.length:e;if(i===a.length?n+=a:n+=a.slice(0,e),0==(e-=i)){i===a.length?(++r,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=a.slice(i));break}++r}return this.length-=r,n}},{key:"_getBuffer",value:function(e){var t=o.allocUnsafe(e),r=this.head,n=1;for(r.data.copy(t),e-=r.data.length;r=r.next;){var a=r.data,i=e>a.length?a.length:e;if(a.copy(t,t.length-e,0,i),0==(e-=i)){i===a.length?(++n,r.next?this.head=r.next:this.head=this.tail=null):(this.head=r,r.data=a.slice(i));break}++n}return this.length-=n,t}},{key:l,value:function(e,t){return f(this,a(a({},t),{},{depth:0,customInspect:!1}))}}])&&s(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}()},7640:e=>{function t(e,t){n(e,t),r(e)}function r(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit("close")}function n(e,t){e.emit("error",t)}e.exports={destroy:function(e,a){var i=this,s=this._readableState&&this._readableState.destroyed,c=this._writableState&&this._writableState.destroyed;return s||c?(a?a(e):e&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,process.nextTick(n,this,e)):process.nextTick(n,this,e)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(e||null,(function(e){!a&&e?i._writableState?i._writableState.errorEmitted?process.nextTick(r,i):(i._writableState.errorEmitted=!0,process.nextTick(t,i,e)):process.nextTick(t,i,e):a?(process.nextTick(r,i),a(e)):process.nextTick(r,i)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,t){var r=e._readableState,n=e._writableState;r&&r.autoDestroy||n&&n.autoDestroy?e.destroy(t):e.emit("error",t)}}},5027:(e,t,r)=>{var n=r(6938).q.ERR_STREAM_PREMATURE_CLOSE;function a(){}e.exports=function e(t,r,i){if("function"==typeof r)return e(t,null,r);r||(r={}),i=function(e){var t=!1;return function(){if(!t){t=!0;for(var r=arguments.length,n=new Array(r),a=0;a<r;a++)n[a]=arguments[a];e.apply(this,n)}}}(i||a);var s=r.readable||!1!==r.readable&&t.readable,c=r.writable||!1!==r.writable&&t.writable,o=function(){t.writable||l()},f=t._writableState&&t._writableState.finished,l=function(){c=!1,f=!0,s||i.call(t)},d=t._readableState&&t._readableState.endEmitted,u=function(){s=!1,d=!0,c||i.call(t)},h=function(e){i.call(t,e)},b=function(){var e;return s&&!d?(t._readableState&&t._readableState.ended||(e=new n),i.call(t,e)):c&&!f?(t._writableState&&t._writableState.ended||(e=new n),i.call(t,e)):void 0},p=function(){t.req.on("finish",l)};return function(e){return e.setHeader&&"function"==typeof e.abort}(t)?(t.on("complete",l),t.on("abort",b),t.req?p():t.on("request",p)):c&&!t._writableState&&(t.on("end",o),t.on("close",o)),t.on("end",u),t.on("finish",l),!1!==r.error&&t.on("error",h),t.on("close",b),function(){t.removeListener("complete",l),t.removeListener("abort",b),t.removeListener("request",p),t.req&&t.req.removeListener("finish",l),t.removeListener("end",o),t.removeListener("close",o),t.removeListener("finish",l),t.removeListener("end",u),t.removeListener("error",h),t.removeListener("close",b)}}},5800:e=>{e.exports=function(){throw new Error("Readable.from is not available in the browser")}},410:(e,t,r)=>{var n,a=r(6938).q,i=a.ERR_MISSING_ARGS,s=a.ERR_STREAM_DESTROYED;function c(e){if(e)throw e}function o(e){e()}function f(e,t){return e.pipe(t)}e.exports=function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var l,d=function(e){return e.length?"function"!=typeof e[e.length-1]?c:e.pop():c}(t);if(Array.isArray(t[0])&&(t=t[0]),t.length<2)throw new i("streams");var u=t.map((function(e,a){var i=a<t.length-1;return function(e,t,a,i){i=function(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}(i);var c=!1;e.on("close",(function(){c=!0})),void 0===n&&(n=r(5027)),n(e,{readable:t,writable:a},(function(e){if(e)return i(e);c=!0,i()}));var o=!1;return function(t){if(!c&&!o)return o=!0,function(e){return e.setHeader&&"function"==typeof e.abort}(e)?e.abort():"function"==typeof e.destroy?e.destroy():void i(t||new s("pipe"))}}(e,i,a>0,(function(e){l||(l=e),e&&u.forEach(o),i||(u.forEach(o),d(l))}))}));return t.reduce(f)}},5985:(e,t,r)=>{var n=r(6938).q.ERR_INVALID_OPT_VALUE;e.exports={getHighWaterMark:function(e,t,r,a){var i=function(e,t,r){return null!=e.highWaterMark?e.highWaterMark:t?e[r]:null}(t,a,r);if(null!=i){if(!isFinite(i)||Math.floor(i)!==i||i<0)throw new n(a?r:"highWaterMark",i);return Math.floor(i)}return e.objectMode?16:16384}}},6052:(e,t,r)=>{e.exports=r(343).EventEmitter},8310:(e,t,r)=>{(t=e.exports=r(5327)).Stream=t,t.Readable=t,t.Writable=r(4567),t.Duplex=r(4439),t.Transform=r(2175),t.PassThrough=r(3754),t.finished=r(5027),t.pipeline=r(410)},7172:(e,t,r)=>{var n=r(816),a=n.Buffer;function i(e,t){for(var r in e)t[r]=e[r]}function s(e,t,r){return a(e,t,r)}a.from&&a.alloc&&a.allocUnsafe&&a.allocUnsafeSlow?e.exports=n:(i(n,t),t.Buffer=s),s.prototype=Object.create(a.prototype),i(a,s),s.from=function(e,t,r){if("number"==typeof e)throw new TypeError("Argument must not be a number");return a(e,t,r)},s.alloc=function(e,t,r){if("number"!=typeof e)throw new TypeError("Argument must be a number");var n=a(e);return void 0!==t?"string"==typeof r?n.fill(t,r):n.fill(t):n.fill(0),n},s.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return a(e)},s.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return n.SlowBuffer(e)}},3573:(e,t,r)=>{t.C4=void 0;var n,a=r(816),i=(n=r(350))&&n.__esModule?n:{default:n},s=function(e){var t=e.allowedSizes,r=e.defaultSize,n=e.padding;return function e(){var s=this,c=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r;if(!this||this.constructor!==e)return new e(c);if(t&&!t.includes(c))throw new Error("Unsupported hash length");var o=new i.default({capacity:c});return this.update=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf8";if(a.Buffer.isBuffer(e))return o.absorb(e),s;if("string"==typeof e)return s.update(a.Buffer.from(e,t));throw new TypeError("Not a string or buffer")},this.digest=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"binary",t="string"==typeof e?{format:e}:e,r=o.squeeze({buffer:t.buffer,padding:t.padding||n});return t.format&&"binary"!==t.format?r.toString(t.format):r},this.reset=function(){return o.reset(),s},this}},c=s({allowedSizes:[224,256,384,512],defaultSize:512,padding:1});t.C4=c;var o=s({allowedSizes:[224,256,384,512],defaultSize:512,padding:6});s({allowedSizes:[128,256],defaultSize:256,padding:31});var f=c;o.SHA3Hash=f},350:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n,a=r(816),i=(n=r(5037))&&n.__esModule?n:{default:n},s=function(e,t){for(var r=0;r<e.length;r+=8){var n=r/4;t[n]^=e[r+7]<<24|e[r+6]<<16|e[r+5]<<8|e[r+4],t[n+1]^=e[r+3]<<24|e[r+2]<<16|e[r+1]<<8|e[r]}return t},c=function(e,t){for(var r=0;r<t.length;r+=8){var n=r/4;t[r]=e[n+1],t[r+1]=e[n+1]>>>8,t[r+2]=e[n+1]>>>16,t[r+3]=e[n+1]>>>24,t[r+4]=e[n],t[r+5]=e[n]>>>8,t[r+6]=e[n]>>>16,t[r+7]=e[n]>>>24}return t};t.default=function(e){var t=this,r=e.capacity,n=e.padding,o=(0,i.default)(),f=r/8,l=200-r/4,d=0,u=new Uint32Array(50),h=a.Buffer.allocUnsafe(l);return this.absorb=function(e){for(var r=0;r<e.length;r++)h[d]=e[r],(d+=1)>=l&&(s(h,u),o(u),d=0);return t},this.squeeze=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={buffer:e.buffer||a.Buffer.allocUnsafe(f),padding:e.padding||n,queue:a.Buffer.allocUnsafe(h.length),state:new Uint32Array(u.length)};h.copy(t.queue);for(var r=0;r<u.length;r++)t.state[r]=u[r];t.queue.fill(0,d),t.queue[d]|=t.padding,t.queue[l-1]|=128,s(t.queue,t.state);for(var i=0;i<t.buffer.length;i+=l)o(t.state),c(t.state,t.buffer.slice(i,i+l));return t.buffer},this.reset=function(){return h.fill(0),u.fill(0),d=0,t},this}},9940:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n,a=(n=r(2196))&&n.__esModule?n:{default:n};t.default=function(e){for(var t=e.A,r=e.C,n=0;n<25;n+=5){for(var i=0;i<5;i++)(0,a.default)(t,n+i)(r,i);for(var s=0;s<5;s++){var c=2*(n+s),o=(s+1)%5*2,f=(s+2)%5*2;t[c]^=~r[o]&r[f],t[c+1]^=~r[o+1]&r[f+1]}}}},2196:e=>{e.exports=function(e,t){return function(r,n){var a=2*n,i=2*t;r[a]=e[i],r[a+1]=e[i+1]}}},5037:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=c(r(9940)),a=c(r(1909)),i=c(r(6021)),s=c(r(4421));function c(e){return e&&e.__esModule?e:{default:e}}t.default=function(){var e=new Uint32Array(10),t=new Uint32Array(10),r=new Uint32Array(2);return function(c){for(var o=0;o<24;o++)(0,s.default)({A:c,C:e,D:t,W:r}),(0,i.default)({A:c,C:e,W:r}),(0,n.default)({A:c,C:e}),(0,a.default)({A:c,roundIndex:o});e.fill(0),t.fill(0),r.fill(0)}}},1909:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n,a=(n=r(3408))&&n.__esModule?n:{default:n};t.default=function(e){var t=e.A,r=2*e.roundIndex;t[0]^=a.default[r],t[1]^=a.default[r+1]}},3408:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=new Uint32Array([0,1,0,32898,2147483648,32906,2147483648,2147516416,0,32907,0,2147483649,2147483648,2147516545,2147483648,32777,0,138,0,136,0,2147516425,0,2147483658,0,2147516555,2147483648,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,0,32778,2147483648,2147483658,2147483648,2147516545,2147483648,32896,0,2147483649,2147483648,2147516424]);t.default=r},6021:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=s(r(2773)),a=s(r(4728)),i=s(r(2196));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function(e){var t=e.A,r=e.C,s=e.W;(0,i.default)(t,1)(s,0);for(var c=0,o=0,f=0,l=32,d=0;d<24;d++){var u=n.default[d],h=a.default[d];(0,i.default)(t,u)(r,0),c=s[0],o=s[1],l=32-h,s[f=h<32?0:1]=c<<h|o>>>l,s[(f+1)%2]=o<<h|c>>>l,(0,i.default)(s,0)(t,u),(0,i.default)(r,0)(s,0)}}},2773:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default=[10,7,11,17,18,3,5,16,8,21,24,4,15,23,19,13,12,2,20,14,22,9,6,1]},4728:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default=[1,3,6,10,15,21,28,36,45,55,2,14,27,41,56,8,25,43,62,18,39,61,20,44]},4421:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n,a=(n=r(2196))&&n.__esModule?n:{default:n};t.default=function(e){for(var t=e.A,r=e.C,n=e.D,i=e.W,s=0,c=0,o=0;o<5;o++){var f=2*o,l=2*(o+5),d=2*(o+10),u=2*(o+15),h=2*(o+20);r[f]=t[f]^t[l]^t[d]^t[u]^t[h],r[f+1]=t[f+1]^t[l+1]^t[d+1]^t[u+1]^t[h+1]}for(var b=0;b<5;b++){(0,a.default)(r,(b+1)%5)(i,0),s=i[0],c=i[1],i[0]=s<<1|c>>>31,i[1]=c<<1|s>>>31,n[2*b]=r[(b+4)%5*2]^i[0],n[2*b+1]=r[(b+4)%5*2+1]^i[1];for(var p=0;p<25;p+=5)t[2*(p+b)]^=n[2*b],t[2*(p+b)+1]^=n[2*b+1]}}},3424:(e,t,r)=>{e.exports=a;var n=r(343).EventEmitter;function a(){n.call(this)}r(87)(a,n),a.Readable=r(5327),a.Writable=r(4567),a.Duplex=r(4439),a.Transform=r(2175),a.PassThrough=r(3754),a.finished=r(5027),a.pipeline=r(410),a.Stream=a,a.prototype.pipe=function(e,t){var r=this;function a(t){e.writable&&!1===e.write(t)&&r.pause&&r.pause()}function i(){r.readable&&r.resume&&r.resume()}r.on("data",a),e.on("drain",i),e._isStdio||t&&!1===t.end||(r.on("end",c),r.on("close",o));var s=!1;function c(){s||(s=!0,e.end())}function o(){s||(s=!0,"function"==typeof e.destroy&&e.destroy())}function f(e){if(l(),0===n.listenerCount(this,"error"))throw e}function l(){r.removeListener("data",a),e.removeListener("drain",i),r.removeListener("end",c),r.removeListener("close",o),r.removeListener("error",f),e.removeListener("error",f),r.removeListener("end",l),r.removeListener("close",l),e.removeListener("close",l)}return r.on("error",f),e.on("error",f),r.on("end",l),r.on("close",l),e.on("close",l),e.emit("pipe",r),e}},4361:(e,t,r)=>{var n=r(7172).Buffer,a=n.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function i(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}(e);if("string"!=typeof t&&(n.isEncoding===a||!a(e)))throw new Error("Unknown encoding: "+e);return t||e}(e),this.encoding){case"utf16le":this.text=o,this.end=f,t=4;break;case"utf8":this.fillLast=c,t=4;break;case"base64":this.text=l,this.end=d,t=3;break;default:return this.write=u,void(this.end=h)}this.lastNeed=0,this.lastTotal=0,this.lastChar=n.allocUnsafe(t)}function s(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function c(e){var t=this.lastTotal-this.lastNeed,r=function(e,t,r){if(128!=(192&t[0]))return e.lastNeed=0,"�";if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,"�";if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,"�"}}(this,e);return void 0!==r?r:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function o(e,t){if((e.length-t)%2==0){var r=e.toString("utf16le",t);if(r){var n=r.charCodeAt(r.length-1);if(n>=55296&&n<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],r.slice(0,-1)}return r}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function f(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,r)}return t}function l(e,t){var r=(e.length-t)%3;return 0===r?e.toString("base64",t):(this.lastNeed=3-r,this.lastTotal=3,1===r?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-r))}function d(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function u(e){return e.toString(this.encoding)}function h(e){return e&&e.length?this.write(e):""}t.s=i,i.prototype.write=function(e){if(0===e.length)return"";var t,r;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";r=this.lastNeed,this.lastNeed=0}else r=0;return r<e.length?t?t+this.text(e,r):this.text(e,r):t||""},i.prototype.end=function(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"�":t},i.prototype.text=function(e,t){var r=function(e,t,r){var n=t.length-1;if(n<r)return 0;var a=s(t[n]);return a>=0?(a>0&&(e.lastNeed=a-1),a):--n<r||-2===a?0:(a=s(t[n]))>=0?(a>0&&(e.lastNeed=a-2),a):--n<r||-2===a?0:(a=s(t[n]))>=0?(a>0&&(2===a?a=0:e.lastNeed=a-3),a):0}(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=r;var n=e.length-(r-this.lastNeed);return e.copy(this.lastChar,0,n),e.toString("utf8",t,n)},i.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}},3118:(e,t)=>{t.VB=function(){return!1}},7451:(e,t,r)=>{function n(e){try{if(!r.g.localStorage)return!1}catch(e){return!1}var t=r.g.localStorage[e];return null!=t&&"true"===String(t).toLowerCase()}e.exports=function(e,t){if(n("noDeprecation"))return e;var r=!1;return function(){if(!r){if(n("throwDeprecation"))throw new Error(t);n("traceDeprecation")?console.trace(t):console.warn(t),r=!0}return e.apply(this,arguments)}}},233:()=>{},6534:()=>{},1856:()=>{},6014:()=>{},717:()=>{},9190:()=>{},3240:()=>{},394:()=>{},5860:()=>{},471:()=>{},1632:()=>{},8517:()=>{},4636:e=>{e.exports=JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}')}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var i=t[n]={id:n,loaded:!1,exports:{}};return e[n](i,i.exports,r),i.loaded=!0,i.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var n={};(()=>{function e(e){let t=e.length;for(;--t>=0;)e[t]=0}r.d(n,{ge:()=>ys,Uk:()=>zs,bG:()=>Vs,xz:()=>gn,EB:()=>ns,b7:()=>vs,cC:()=>Ns,C3:()=>ji,QT:()=>ts,ug:()=>Na,CH:()=>Mi,xq:()=>Zi,vp:()=>ri,Ag:()=>Fi,g2:()=>Yi,cu:()=>Ls,ed:()=>ws,Y8:()=>Di,gB:()=>Es,jF:()=>Ln,Wi:()=>rs,W7:()=>ti,Fr:()=>Wr,mr:()=>Hr,E7:()=>Ds,ah:()=>Ms,N0:()=>Xs,rL:()=>js,$h:()=>hi,pP:()=>Bi,E9:()=>Pr,uG:()=>Fs,lW:()=>Js,a5:()=>Ai,GR:()=>qs,x6:()=>Ts,Tx:()=>ki,qd:()=>Pi,f1:()=>Si,EY:()=>Ci,bH:()=>Ji,N4:()=>ms,qx:()=>Ui,o1:()=>Qi,ig:()=>Ni,_$:()=>bs,g$:()=>oa,Dx:()=>Ki,sn:()=>Qs,es:()=>ni,XN:()=>ea,MA:()=>Ss,ir:()=>Gi,o2:()=>Ps,nW:()=>Vi,C2:()=>Us,IQ:()=>Is,JA:()=>Rs,FV:()=>As,iL:()=>Hs,kZ:()=>gs,dH:()=>qi,Jz:()=>us,_v:()=>Ga,qW:()=>Ks});const t=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),a=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),i=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),s=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),c=new Array(576);e(c);const o=new Array(60);e(o);const f=new Array(512);e(f);const l=new Array(256);e(l);const d=new Array(29);e(d);const u=new Array(30);function h(e,t,r,n,a){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=a,this.has_stree=e&&e.length}let b,p,y;function m(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}e(u);const g=e=>e<256?f[e]:f[256+(e>>>7)],S=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},L=(e,t,r)=>{e.bi_valid>16-r?(e.bi_buf|=t<<e.bi_valid&65535,S(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=r-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=r)},w=(e,t,r)=>{L(e,r[2*t],r[2*t+1])},v=(e,t)=>{let r=0;do{r|=1&e,e>>>=1,r<<=1}while(--t>0);return r>>>1},E=(e,t,r)=>{const n=new Array(16);let a,i,s=0;for(a=1;a<=15;a++)s=s+r[a-1]<<1,n[a]=s;for(i=0;i<=t;i++){let t=e[2*i+1];0!==t&&(e[2*i]=v(n[t]++,t))}},x=e=>{let t;for(t=0;t<286;t++)e.dyn_ltree[2*t]=0;for(t=0;t<30;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.sym_next=e.matches=0},k=e=>{e.bi_valid>8?S(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},J=(e,t,r,n)=>{const a=2*t,i=2*r;return e[a]<e[i]||e[a]===e[i]&&n[t]<=n[r]},O=(e,t,r)=>{const n=e.heap[r];let a=r<<1;for(;a<=e.heap_len&&(a<e.heap_len&&J(t,e.heap[a+1],e.heap[a],e.depth)&&a++,!J(t,n,e.heap[a],e.depth));)e.heap[r]=e.heap[a],r=a,a<<=1;e.heap[r]=n},C=(e,r,n)=>{let i,s,c,o,f=0;if(0!==e.sym_next)do{i=255&e.pending_buf[e.sym_buf+f++],i+=(255&e.pending_buf[e.sym_buf+f++])<<8,s=e.pending_buf[e.sym_buf+f++],0===i?w(e,s,r):(c=l[s],w(e,c+256+1,r),o=t[c],0!==o&&(s-=d[c],L(e,s,o)),i--,c=g(i),w(e,c,n),o=a[c],0!==o&&(i-=u[c],L(e,i,o)))}while(f<e.sym_next);w(e,256,r)},T=(e,t)=>{const r=t.dyn_tree,n=t.stat_desc.static_tree,a=t.stat_desc.has_stree,i=t.stat_desc.elems;let s,c,o,f=-1;for(e.heap_len=0,e.heap_max=573,s=0;s<i;s++)0!==r[2*s]?(e.heap[++e.heap_len]=f=s,e.depth[s]=0):r[2*s+1]=0;for(;e.heap_len<2;)o=e.heap[++e.heap_len]=f<2?++f:0,r[2*o]=1,e.depth[o]=0,e.opt_len--,a&&(e.static_len-=n[2*o+1]);for(t.max_code=f,s=e.heap_len>>1;s>=1;s--)O(e,r,s);o=i;do{s=e.heap[1],e.heap[1]=e.heap[e.heap_len--],O(e,r,1),c=e.heap[1],e.heap[--e.heap_max]=s,e.heap[--e.heap_max]=c,r[2*o]=r[2*s]+r[2*c],e.depth[o]=(e.depth[s]>=e.depth[c]?e.depth[s]:e.depth[c])+1,r[2*s+1]=r[2*c+1]=o,e.heap[1]=o++,O(e,r,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const r=t.dyn_tree,n=t.max_code,a=t.stat_desc.static_tree,i=t.stat_desc.has_stree,s=t.stat_desc.extra_bits,c=t.stat_desc.extra_base,o=t.stat_desc.max_length;let f,l,d,u,h,b,p=0;for(u=0;u<=15;u++)e.bl_count[u]=0;for(r[2*e.heap[e.heap_max]+1]=0,f=e.heap_max+1;f<573;f++)l=e.heap[f],u=r[2*r[2*l+1]+1]+1,u>o&&(u=o,p++),r[2*l+1]=u,l>n||(e.bl_count[u]++,h=0,l>=c&&(h=s[l-c]),b=r[2*l],e.opt_len+=b*(u+h),i&&(e.static_len+=b*(a[2*l+1]+h)));if(0!==p){do{for(u=o-1;0===e.bl_count[u];)u--;e.bl_count[u]--,e.bl_count[u+1]+=2,e.bl_count[o]--,p-=2}while(p>0);for(u=o;0!==u;u--)for(l=e.bl_count[u];0!==l;)d=e.heap[--f],d>n||(r[2*d+1]!==u&&(e.opt_len+=(u-r[2*d+1])*r[2*d],r[2*d+1]=u),l--)}})(e,t),E(r,f,e.bl_count)},W=(e,t,r)=>{let n,a,i=-1,s=t[1],c=0,o=7,f=4;for(0===s&&(o=138,f=3),t[2*(r+1)+1]=65535,n=0;n<=r;n++)a=s,s=t[2*(n+1)+1],++c<o&&a===s||(c<f?e.bl_tree[2*a]+=c:0!==a?(a!==i&&e.bl_tree[2*a]++,e.bl_tree[32]++):c<=10?e.bl_tree[34]++:e.bl_tree[36]++,c=0,i=a,0===s?(o=138,f=3):a===s?(o=6,f=3):(o=7,f=4))},B=(e,t,r)=>{let n,a,i=-1,s=t[1],c=0,o=7,f=4;for(0===s&&(o=138,f=3),n=0;n<=r;n++)if(a=s,s=t[2*(n+1)+1],!(++c<o&&a===s)){if(c<f)do{w(e,a,e.bl_tree)}while(0!=--c);else 0!==a?(a!==i&&(w(e,a,e.bl_tree),c--),w(e,16,e.bl_tree),L(e,c-3,2)):c<=10?(w(e,17,e.bl_tree),L(e,c-3,3)):(w(e,18,e.bl_tree),L(e,c-11,7));c=0,i=a,0===s?(o=138,f=3):a===s?(o=6,f=3):(o=7,f=4)}};let z=!1;const P=(e,t,r,n)=>{L(e,0+(n?1:0),3),k(e),S(e,r),S(e,~r),r&&e.pending_buf.set(e.window.subarray(t,t+r),e.pending),e.pending+=r};var I={_tr_init:e=>{z||((()=>{let e,r,n,s,m;const g=new Array(16);for(n=0,s=0;s<28;s++)for(d[s]=n,e=0;e<1<<t[s];e++)l[n++]=s;for(l[n-1]=s,m=0,s=0;s<16;s++)for(u[s]=m,e=0;e<1<<a[s];e++)f[m++]=s;for(m>>=7;s<30;s++)for(u[s]=m<<7,e=0;e<1<<a[s]-7;e++)f[256+m++]=s;for(r=0;r<=15;r++)g[r]=0;for(e=0;e<=143;)c[2*e+1]=8,e++,g[8]++;for(;e<=255;)c[2*e+1]=9,e++,g[9]++;for(;e<=279;)c[2*e+1]=7,e++,g[7]++;for(;e<=287;)c[2*e+1]=8,e++,g[8]++;for(E(c,287,g),e=0;e<30;e++)o[2*e+1]=5,o[2*e]=v(e,5);b=new h(c,t,257,286,15),p=new h(o,a,0,30,15),y=new h(new Array(0),i,0,19,7)})(),z=!0),e.l_desc=new m(e.dyn_ltree,b),e.d_desc=new m(e.dyn_dtree,p),e.bl_desc=new m(e.bl_tree,y),e.bi_buf=0,e.bi_valid=0,x(e)},_tr_stored_block:P,_tr_flush_block:(e,t,r,n)=>{let a,i,f=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<256;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),T(e,e.l_desc),T(e,e.d_desc),f=(e=>{let t;for(W(e,e.dyn_ltree,e.l_desc.max_code),W(e,e.dyn_dtree,e.d_desc.max_code),T(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*s[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),a=e.opt_len+3+7>>>3,i=e.static_len+3+7>>>3,i<=a&&(a=i)):a=i=r+5,r+4<=a&&-1!==t?P(e,t,r,n):4===e.strategy||i===a?(L(e,2+(n?1:0),3),C(e,c,o)):(L(e,4+(n?1:0),3),((e,t,r,n)=>{let a;for(L(e,t-257,5),L(e,r-1,5),L(e,n-4,4),a=0;a<n;a++)L(e,e.bl_tree[2*s[a]+1],3);B(e,e.dyn_ltree,t-1),B(e,e.dyn_dtree,r-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,f+1),C(e,e.dyn_ltree,e.dyn_dtree)),x(e),n&&k(e)},_tr_tally:(e,t,r)=>(e.pending_buf[e.sym_buf+e.sym_next++]=t,e.pending_buf[e.sym_buf+e.sym_next++]=t>>8,e.pending_buf[e.sym_buf+e.sym_next++]=r,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(l[r]+256+1)]++,e.dyn_dtree[2*g(t)]++),e.sym_next===e.sym_end),_tr_align:e=>{L(e,2,3),w(e,256,c),(e=>{16===e.bi_valid?(S(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)}},R=(e,t,r,n)=>{let a=65535&e|0,i=e>>>16&65535|0,s=0;for(;0!==r;){s=r>2e3?2e3:r,r-=s;do{a=a+t[n++]|0,i=i+a|0}while(--s);a%=65521,i%=65521}return a|i<<16|0};const A=new Uint32Array((()=>{let e,t=[];for(var r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t})());var H=(e,t,r,n)=>{const a=A,i=n+r;e^=-1;for(let r=n;r<i;r++)e=e>>>8^a[255&(e^t[r])];return-1^e},Y={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},Z={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:M,_tr_stored_block:j,_tr_flush_block:X,_tr_tally:D,_tr_align:F}=I,{Z_NO_FLUSH:U,Z_PARTIAL_FLUSH:Q,Z_FULL_FLUSH:K,Z_FINISH:N,Z_BLOCK:G,Z_OK:V,Z_STREAM_END:q,Z_STREAM_ERROR:_,Z_DATA_ERROR:$,Z_BUF_ERROR:ee,Z_DEFAULT_COMPRESSION:te,Z_FILTERED:re,Z_HUFFMAN_ONLY:ne,Z_RLE:ae,Z_FIXED:ie,Z_DEFAULT_STRATEGY:se,Z_UNKNOWN:ce,Z_DEFLATED:oe}=Z,fe=258,le=262,de=42,ue=113,he=666,be=(e,t)=>(e.msg=Y[t],t),pe=e=>2*e-(e>4?9:0),ye=e=>{let t=e.length;for(;--t>=0;)e[t]=0},me=e=>{let t,r,n,a=e.w_size;t=e.hash_size,n=t;do{r=e.head[--n],e.head[n]=r>=a?r-a:0}while(--t);t=a,n=t;do{r=e.prev[--n],e.prev[n]=r>=a?r-a:0}while(--t)};let ge=(e,t,r)=>(t<<e.hash_shift^r)&e.hash_mask;const Se=e=>{const t=e.state;let r=t.pending;r>e.avail_out&&(r=e.avail_out),0!==r&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+r),e.next_out),e.next_out+=r,t.pending_out+=r,e.total_out+=r,e.avail_out-=r,t.pending-=r,0===t.pending&&(t.pending_out=0))},Le=(e,t)=>{X(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,Se(e.strm)},we=(e,t)=>{e.pending_buf[e.pending++]=t},ve=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},Ee=(e,t,r,n)=>{let a=e.avail_in;return a>n&&(a=n),0===a?0:(e.avail_in-=a,t.set(e.input.subarray(e.next_in,e.next_in+a),r),1===e.state.wrap?e.adler=R(e.adler,t,a,r):2===e.state.wrap&&(e.adler=H(e.adler,t,a,r)),e.next_in+=a,e.total_in+=a,a)},xe=(e,t)=>{let r,n,a=e.max_chain_length,i=e.strstart,s=e.prev_length,c=e.nice_match;const o=e.strstart>e.w_size-le?e.strstart-(e.w_size-le):0,f=e.window,l=e.w_mask,d=e.prev,u=e.strstart+fe;let h=f[i+s-1],b=f[i+s];e.prev_length>=e.good_match&&(a>>=2),c>e.lookahead&&(c=e.lookahead);do{if(r=t,f[r+s]===b&&f[r+s-1]===h&&f[r]===f[i]&&f[++r]===f[i+1]){i+=2,r++;do{}while(f[++i]===f[++r]&&f[++i]===f[++r]&&f[++i]===f[++r]&&f[++i]===f[++r]&&f[++i]===f[++r]&&f[++i]===f[++r]&&f[++i]===f[++r]&&f[++i]===f[++r]&&i<u);if(n=fe-(u-i),i=u-fe,n>s){if(e.match_start=t,s=n,n>=c)break;h=f[i+s-1],b=f[i+s]}}}while((t=d[t&l])>o&&0!=--a);return s<=e.lookahead?s:e.lookahead},ke=e=>{const t=e.w_size;let r,n,a;do{if(n=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-le)&&(e.window.set(e.window.subarray(t,t+t-n),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,e.insert>e.strstart&&(e.insert=e.strstart),me(e),n+=t),0===e.strm.avail_in)break;if(r=Ee(e.strm,e.window,e.strstart+e.lookahead,n),e.lookahead+=r,e.lookahead+e.insert>=3)for(a=e.strstart-e.insert,e.ins_h=e.window[a],e.ins_h=ge(e,e.ins_h,e.window[a+1]);e.insert&&(e.ins_h=ge(e,e.ins_h,e.window[a+3-1]),e.prev[a&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=a,a++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<le&&0!==e.strm.avail_in)},Je=(e,t)=>{let r,n,a,i=e.pending_buf_size-5>e.w_size?e.w_size:e.pending_buf_size-5,s=0,c=e.strm.avail_in;do{if(r=65535,a=e.bi_valid+42>>3,e.strm.avail_out<a)break;if(a=e.strm.avail_out-a,n=e.strstart-e.block_start,r>n+e.strm.avail_in&&(r=n+e.strm.avail_in),r>a&&(r=a),r<i&&(0===r&&t!==N||t===U||r!==n+e.strm.avail_in))break;s=t===N&&r===n+e.strm.avail_in?1:0,j(e,0,0,s),e.pending_buf[e.pending-4]=r,e.pending_buf[e.pending-3]=r>>8,e.pending_buf[e.pending-2]=~r,e.pending_buf[e.pending-1]=~r>>8,Se(e.strm),n&&(n>r&&(n=r),e.strm.output.set(e.window.subarray(e.block_start,e.block_start+n),e.strm.next_out),e.strm.next_out+=n,e.strm.avail_out-=n,e.strm.total_out+=n,e.block_start+=n,r-=n),r&&(Ee(e.strm,e.strm.output,e.strm.next_out,r),e.strm.next_out+=r,e.strm.avail_out-=r,e.strm.total_out+=r)}while(0===s);return c-=e.strm.avail_in,c&&(c>=e.w_size?(e.matches=2,e.window.set(e.strm.input.subarray(e.strm.next_in-e.w_size,e.strm.next_in),0),e.strstart=e.w_size,e.insert=e.strstart):(e.window_size-e.strstart<=c&&(e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,e.insert>e.strstart&&(e.insert=e.strstart)),e.window.set(e.strm.input.subarray(e.strm.next_in-c,e.strm.next_in),e.strstart),e.strstart+=c,e.insert+=c>e.w_size-e.insert?e.w_size-e.insert:c),e.block_start=e.strstart),e.high_water<e.strstart&&(e.high_water=e.strstart),s?4:t!==U&&t!==N&&0===e.strm.avail_in&&e.strstart===e.block_start?2:(a=e.window_size-e.strstart,e.strm.avail_in>a&&e.block_start>=e.w_size&&(e.block_start-=e.w_size,e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,a+=e.w_size,e.insert>e.strstart&&(e.insert=e.strstart)),a>e.strm.avail_in&&(a=e.strm.avail_in),a&&(Ee(e.strm,e.window,e.strstart,a),e.strstart+=a,e.insert+=a>e.w_size-e.insert?e.w_size-e.insert:a),e.high_water<e.strstart&&(e.high_water=e.strstart),a=e.bi_valid+42>>3,a=e.pending_buf_size-a>65535?65535:e.pending_buf_size-a,i=a>e.w_size?e.w_size:a,n=e.strstart-e.block_start,(n>=i||(n||t===N)&&t!==U&&0===e.strm.avail_in&&n<=a)&&(r=n>a?a:n,s=t===N&&0===e.strm.avail_in&&r===n?1:0,j(e,e.block_start,r,s),e.block_start+=r,Se(e.strm)),s?3:1)},Oe=(e,t)=>{let r,n;for(;;){if(e.lookahead<le){if(ke(e),e.lookahead<le&&t===U)return 1;if(0===e.lookahead)break}if(r=0,e.lookahead>=3&&(e.ins_h=ge(e,e.ins_h,e.window[e.strstart+3-1]),r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==r&&e.strstart-r<=e.w_size-le&&(e.match_length=xe(e,r)),e.match_length>=3)if(n=D(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=ge(e,e.ins_h,e.window[e.strstart+3-1]),r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=ge(e,e.ins_h,e.window[e.strstart+1]);else n=D(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(Le(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===N?(Le(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Le(e,!1),0===e.strm.avail_out)?1:2},Ce=(e,t)=>{let r,n,a;for(;;){if(e.lookahead<le){if(ke(e),e.lookahead<le&&t===U)return 1;if(0===e.lookahead)break}if(r=0,e.lookahead>=3&&(e.ins_h=ge(e,e.ins_h,e.window[e.strstart+3-1]),r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==r&&e.prev_length<e.max_lazy_match&&e.strstart-r<=e.w_size-le&&(e.match_length=xe(e,r),e.match_length<=5&&(e.strategy===re||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){a=e.strstart+e.lookahead-3,n=D(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=a&&(e.ins_h=ge(e,e.ins_h,e.window[e.strstart+3-1]),r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,n&&(Le(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(n=D(e,0,e.window[e.strstart-1]),n&&Le(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=D(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===N?(Le(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Le(e,!1),0===e.strm.avail_out)?1:2};function Te(e,t,r,n,a){this.good_length=e,this.max_lazy=t,this.nice_length=r,this.max_chain=n,this.func=a}const We=[new Te(0,0,0,0,Je),new Te(4,4,8,4,Oe),new Te(4,5,16,8,Oe),new Te(4,6,32,32,Oe),new Te(4,4,16,16,Ce),new Te(8,16,32,32,Ce),new Te(8,16,128,128,Ce),new Te(8,32,128,256,Ce),new Te(32,128,258,1024,Ce),new Te(32,258,258,4096,Ce)];function Be(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=oe,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),ye(this.dyn_ltree),ye(this.dyn_dtree),ye(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),ye(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),ye(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const ze=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.status!==de&&57!==t.status&&69!==t.status&&73!==t.status&&91!==t.status&&103!==t.status&&t.status!==ue&&t.status!==he?1:0},Pe=e=>{if(ze(e))return be(e,_);e.total_in=e.total_out=0,e.data_type=ce;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=2===t.wrap?57:t.wrap?de:ue,e.adler=2===t.wrap?0:1,t.last_flush=-2,M(t),V},Ie=e=>{const t=Pe(e);var r;return t===V&&((r=e.state).window_size=2*r.w_size,ye(r.head),r.max_lazy_match=We[r.level].max_lazy,r.good_match=We[r.level].good_length,r.nice_match=We[r.level].nice_length,r.max_chain_length=We[r.level].max_chain,r.strstart=0,r.block_start=0,r.lookahead=0,r.insert=0,r.match_length=r.prev_length=2,r.match_available=0,r.ins_h=0),t},Re=(e,t,r,n,a,i)=>{if(!e)return _;let s=1;if(t===te&&(t=6),n<0?(s=0,n=-n):n>15&&(s=2,n-=16),a<1||a>9||r!==oe||n<8||n>15||t<0||t>9||i<0||i>ie||8===n&&1!==s)return be(e,_);8===n&&(n=9);const c=new Be;return e.state=c,c.strm=e,c.status=de,c.wrap=s,c.gzhead=null,c.w_bits=n,c.w_size=1<<c.w_bits,c.w_mask=c.w_size-1,c.hash_bits=a+7,c.hash_size=1<<c.hash_bits,c.hash_mask=c.hash_size-1,c.hash_shift=~~((c.hash_bits+3-1)/3),c.window=new Uint8Array(2*c.w_size),c.head=new Uint16Array(c.hash_size),c.prev=new Uint16Array(c.w_size),c.lit_bufsize=1<<a+6,c.pending_buf_size=4*c.lit_bufsize,c.pending_buf=new Uint8Array(c.pending_buf_size),c.sym_buf=c.lit_bufsize,c.sym_end=3*(c.lit_bufsize-1),c.level=t,c.strategy=i,c.method=r,Ie(e)};var Ae={deflateInit:(e,t)=>Re(e,t,oe,15,8,se),deflateInit2:Re,deflateReset:Ie,deflateResetKeep:Pe,deflateSetHeader:(e,t)=>ze(e)||2!==e.state.wrap?_:(e.state.gzhead=t,V),deflate:(e,t)=>{if(ze(e)||t>G||t<0)return e?be(e,_):_;const r=e.state;if(!e.output||0!==e.avail_in&&!e.input||r.status===he&&t!==N)return be(e,0===e.avail_out?ee:_);const n=r.last_flush;if(r.last_flush=t,0!==r.pending){if(Se(e),0===e.avail_out)return r.last_flush=-1,V}else if(0===e.avail_in&&pe(t)<=pe(n)&&t!==N)return be(e,ee);if(r.status===he&&0!==e.avail_in)return be(e,ee);if(r.status===de&&0===r.wrap&&(r.status=ue),r.status===de){let t=oe+(r.w_bits-8<<4)<<8,n=-1;if(n=r.strategy>=ne||r.level<2?0:r.level<6?1:6===r.level?2:3,t|=n<<6,0!==r.strstart&&(t|=32),t+=31-t%31,ve(r,t),0!==r.strstart&&(ve(r,e.adler>>>16),ve(r,65535&e.adler)),e.adler=1,r.status=ue,Se(e),0!==r.pending)return r.last_flush=-1,V}if(57===r.status)if(e.adler=0,we(r,31),we(r,139),we(r,8),r.gzhead)we(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),we(r,255&r.gzhead.time),we(r,r.gzhead.time>>8&255),we(r,r.gzhead.time>>16&255),we(r,r.gzhead.time>>24&255),we(r,9===r.level?2:r.strategy>=ne||r.level<2?4:0),we(r,255&r.gzhead.os),r.gzhead.extra&&r.gzhead.extra.length&&(we(r,255&r.gzhead.extra.length),we(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=H(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=69;else if(we(r,0),we(r,0),we(r,0),we(r,0),we(r,0),we(r,9===r.level?2:r.strategy>=ne||r.level<2?4:0),we(r,3),r.status=ue,Se(e),0!==r.pending)return r.last_flush=-1,V;if(69===r.status){if(r.gzhead.extra){let t=r.pending,n=(65535&r.gzhead.extra.length)-r.gzindex;for(;r.pending+n>r.pending_buf_size;){let a=r.pending_buf_size-r.pending;if(r.pending_buf.set(r.gzhead.extra.subarray(r.gzindex,r.gzindex+a),r.pending),r.pending=r.pending_buf_size,r.gzhead.hcrc&&r.pending>t&&(e.adler=H(e.adler,r.pending_buf,r.pending-t,t)),r.gzindex+=a,Se(e),0!==r.pending)return r.last_flush=-1,V;t=0,n-=a}let a=new Uint8Array(r.gzhead.extra);r.pending_buf.set(a.subarray(r.gzindex,r.gzindex+n),r.pending),r.pending+=n,r.gzhead.hcrc&&r.pending>t&&(e.adler=H(e.adler,r.pending_buf,r.pending-t,t)),r.gzindex=0}r.status=73}if(73===r.status){if(r.gzhead.name){let t,n=r.pending;do{if(r.pending===r.pending_buf_size){if(r.gzhead.hcrc&&r.pending>n&&(e.adler=H(e.adler,r.pending_buf,r.pending-n,n)),Se(e),0!==r.pending)return r.last_flush=-1,V;n=0}t=r.gzindex<r.gzhead.name.length?255&r.gzhead.name.charCodeAt(r.gzindex++):0,we(r,t)}while(0!==t);r.gzhead.hcrc&&r.pending>n&&(e.adler=H(e.adler,r.pending_buf,r.pending-n,n)),r.gzindex=0}r.status=91}if(91===r.status){if(r.gzhead.comment){let t,n=r.pending;do{if(r.pending===r.pending_buf_size){if(r.gzhead.hcrc&&r.pending>n&&(e.adler=H(e.adler,r.pending_buf,r.pending-n,n)),Se(e),0!==r.pending)return r.last_flush=-1,V;n=0}t=r.gzindex<r.gzhead.comment.length?255&r.gzhead.comment.charCodeAt(r.gzindex++):0,we(r,t)}while(0!==t);r.gzhead.hcrc&&r.pending>n&&(e.adler=H(e.adler,r.pending_buf,r.pending-n,n))}r.status=103}if(103===r.status){if(r.gzhead.hcrc){if(r.pending+2>r.pending_buf_size&&(Se(e),0!==r.pending))return r.last_flush=-1,V;we(r,255&e.adler),we(r,e.adler>>8&255),e.adler=0}if(r.status=ue,Se(e),0!==r.pending)return r.last_flush=-1,V}if(0!==e.avail_in||0!==r.lookahead||t!==U&&r.status!==he){let n=0===r.level?Je(r,t):r.strategy===ne?((e,t)=>{let r;for(;;){if(0===e.lookahead&&(ke(e),0===e.lookahead)){if(t===U)return 1;break}if(e.match_length=0,r=D(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,r&&(Le(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===N?(Le(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Le(e,!1),0===e.strm.avail_out)?1:2})(r,t):r.strategy===ae?((e,t)=>{let r,n,a,i;const s=e.window;for(;;){if(e.lookahead<=fe){if(ke(e),e.lookahead<=fe&&t===U)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(a=e.strstart-1,n=s[a],n===s[++a]&&n===s[++a]&&n===s[++a])){i=e.strstart+fe;do{}while(n===s[++a]&&n===s[++a]&&n===s[++a]&&n===s[++a]&&n===s[++a]&&n===s[++a]&&n===s[++a]&&n===s[++a]&&a<i);e.match_length=fe-(i-a),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(r=D(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(r=D(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),r&&(Le(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===N?(Le(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Le(e,!1),0===e.strm.avail_out)?1:2})(r,t):We[r.level].func(r,t);if(3!==n&&4!==n||(r.status=he),1===n||3===n)return 0===e.avail_out&&(r.last_flush=-1),V;if(2===n&&(t===Q?F(r):t!==G&&(j(r,0,0,!1),t===K&&(ye(r.head),0===r.lookahead&&(r.strstart=0,r.block_start=0,r.insert=0))),Se(e),0===e.avail_out))return r.last_flush=-1,V}return t!==N?V:r.wrap<=0?q:(2===r.wrap?(we(r,255&e.adler),we(r,e.adler>>8&255),we(r,e.adler>>16&255),we(r,e.adler>>24&255),we(r,255&e.total_in),we(r,e.total_in>>8&255),we(r,e.total_in>>16&255),we(r,e.total_in>>24&255)):(ve(r,e.adler>>>16),ve(r,65535&e.adler)),Se(e),r.wrap>0&&(r.wrap=-r.wrap),0!==r.pending?V:q)},deflateEnd:e=>{if(ze(e))return _;const t=e.state.status;return e.state=null,t===ue?be(e,$):V},deflateSetDictionary:(e,t)=>{let r=t.length;if(ze(e))return _;const n=e.state,a=n.wrap;if(2===a||1===a&&n.status!==de||n.lookahead)return _;if(1===a&&(e.adler=R(e.adler,t,r,0)),n.wrap=0,r>=n.w_size){0===a&&(ye(n.head),n.strstart=0,n.block_start=0,n.insert=0);let e=new Uint8Array(n.w_size);e.set(t.subarray(r-n.w_size,r),0),t=e,r=n.w_size}const i=e.avail_in,s=e.next_in,c=e.input;for(e.avail_in=r,e.next_in=0,e.input=t,ke(n);n.lookahead>=3;){let e=n.strstart,t=n.lookahead-2;do{n.ins_h=ge(n,n.ins_h,n.window[e+3-1]),n.prev[e&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=e,e++}while(--t);n.strstart=e,n.lookahead=2,ke(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=2,n.match_available=0,e.next_in=s,e.input=c,e.avail_in=i,n.wrap=a,V},deflateInfo:"pako deflate (from Nodeca project)"};const He=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var Ye={assign:function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const r=t.shift();if(r){if("object"!=typeof r)throw new TypeError(r+"must be non-object");for(const t in r)He(r,t)&&(e[t]=r[t])}}return e},flattenChunks:e=>{let t=0;for(let r=0,n=e.length;r<n;r++)t+=e[r].length;const r=new Uint8Array(t);for(let t=0,n=0,a=e.length;t<a;t++){let a=e[t];r.set(a,n),n+=a.length}return r}};let Ze=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){Ze=!1}const Me=new Uint8Array(256);for(let e=0;e<256;e++)Me[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;Me[254]=Me[254]=1;var je={string2buf:e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,r,n,a,i,s=e.length,c=0;for(a=0;a<s;a++)r=e.charCodeAt(a),55296==(64512&r)&&a+1<s&&(n=e.charCodeAt(a+1),56320==(64512&n)&&(r=65536+(r-55296<<10)+(n-56320),a++)),c+=r<128?1:r<2048?2:r<65536?3:4;for(t=new Uint8Array(c),i=0,a=0;i<c;a++)r=e.charCodeAt(a),55296==(64512&r)&&a+1<s&&(n=e.charCodeAt(a+1),56320==(64512&n)&&(r=65536+(r-55296<<10)+(n-56320),a++)),r<128?t[i++]=r:r<2048?(t[i++]=192|r>>>6,t[i++]=128|63&r):r<65536?(t[i++]=224|r>>>12,t[i++]=128|r>>>6&63,t[i++]=128|63&r):(t[i++]=240|r>>>18,t[i++]=128|r>>>12&63,t[i++]=128|r>>>6&63,t[i++]=128|63&r);return t},buf2string:(e,t)=>{const r=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let n,a;const i=new Array(2*r);for(a=0,n=0;n<r;){let t=e[n++];if(t<128){i[a++]=t;continue}let s=Me[t];if(s>4)i[a++]=65533,n+=s-1;else{for(t&=2===s?31:3===s?15:7;s>1&&n<r;)t=t<<6|63&e[n++],s--;s>1?i[a++]=65533:t<65536?i[a++]=t:(t-=65536,i[a++]=55296|t>>10&1023,i[a++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&Ze)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let r="";for(let n=0;n<t;n++)r+=String.fromCharCode(e[n]);return r})(i,a)},utf8border:(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let r=t-1;for(;r>=0&&128==(192&e[r]);)r--;return r<0||0===r?t:r+Me[e[r]]>t?r:t}},Xe=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const De=Object.prototype.toString,{Z_NO_FLUSH:Fe,Z_SYNC_FLUSH:Ue,Z_FULL_FLUSH:Qe,Z_FINISH:Ke,Z_OK:Ne,Z_STREAM_END:Ge,Z_DEFAULT_COMPRESSION:Ve,Z_DEFAULT_STRATEGY:qe,Z_DEFLATED:_e}=Z;function $e(e){this.options=Ye.assign({level:Ve,method:_e,chunkSize:16384,windowBits:15,memLevel:8,strategy:qe},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Xe,this.strm.avail_out=0;let r=Ae.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(r!==Ne)throw new Error(Y[r]);if(t.header&&Ae.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e="string"==typeof t.dictionary?je.string2buf(t.dictionary):"[object ArrayBuffer]"===De.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,r=Ae.deflateSetDictionary(this.strm,e),r!==Ne)throw new Error(Y[r]);this._dict_set=!0}}function et(e,t){const r=new $e(t);if(r.push(e,!0),r.err)throw r.msg||Y[r.err];return r.result}$e.prototype.push=function(e,t){const r=this.strm,n=this.options.chunkSize;let a,i;if(this.ended)return!1;for(i=t===~~t?t:!0===t?Ke:Fe,"string"==typeof e?r.input=je.string2buf(e):"[object ArrayBuffer]"===De.call(e)?r.input=new Uint8Array(e):r.input=e,r.next_in=0,r.avail_in=r.input.length;;)if(0===r.avail_out&&(r.output=new Uint8Array(n),r.next_out=0,r.avail_out=n),(i===Ue||i===Qe)&&r.avail_out<=6)this.onData(r.output.subarray(0,r.next_out)),r.avail_out=0;else{if(a=Ae.deflate(r,i),a===Ge)return r.next_out>0&&this.onData(r.output.subarray(0,r.next_out)),a=Ae.deflateEnd(this.strm),this.onEnd(a),this.ended=!0,a===Ne;if(0!==r.avail_out){if(i>0&&r.next_out>0)this.onData(r.output.subarray(0,r.next_out)),r.avail_out=0;else if(0===r.avail_in)break}else this.onData(r.output)}return!0},$e.prototype.onData=function(e){this.chunks.push(e)},$e.prototype.onEnd=function(e){e===Ne&&(this.result=Ye.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var tt={Deflate:$e,deflate:et,deflateRaw:function(e,t){return(t=t||{}).raw=!0,et(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,et(e,t)},constants:Z};const rt=16209;var nt=function(e,t){let r,n,a,i,s,c,o,f,l,d,u,h,b,p,y,m,g,S,L,w,v,E,x,k;const J=e.state;r=e.next_in,x=e.input,n=r+(e.avail_in-5),a=e.next_out,k=e.output,i=a-(t-e.avail_out),s=a+(e.avail_out-257),c=J.dmax,o=J.wsize,f=J.whave,l=J.wnext,d=J.window,u=J.hold,h=J.bits,b=J.lencode,p=J.distcode,y=(1<<J.lenbits)-1,m=(1<<J.distbits)-1;e:do{h<15&&(u+=x[r++]<<h,h+=8,u+=x[r++]<<h,h+=8),g=b[u&y];t:for(;;){if(S=g>>>24,u>>>=S,h-=S,S=g>>>16&255,0===S)k[a++]=65535&g;else{if(!(16&S)){if(0==(64&S)){g=b[(65535&g)+(u&(1<<S)-1)];continue t}if(32&S){J.mode=16191;break e}e.msg="invalid literal/length code",J.mode=rt;break e}L=65535&g,S&=15,S&&(h<S&&(u+=x[r++]<<h,h+=8),L+=u&(1<<S)-1,u>>>=S,h-=S),h<15&&(u+=x[r++]<<h,h+=8,u+=x[r++]<<h,h+=8),g=p[u&m];r:for(;;){if(S=g>>>24,u>>>=S,h-=S,S=g>>>16&255,!(16&S)){if(0==(64&S)){g=p[(65535&g)+(u&(1<<S)-1)];continue r}e.msg="invalid distance code",J.mode=rt;break e}if(w=65535&g,S&=15,h<S&&(u+=x[r++]<<h,h+=8,h<S&&(u+=x[r++]<<h,h+=8)),w+=u&(1<<S)-1,w>c){e.msg="invalid distance too far back",J.mode=rt;break e}if(u>>>=S,h-=S,S=a-i,w>S){if(S=w-S,S>f&&J.sane){e.msg="invalid distance too far back",J.mode=rt;break e}if(v=0,E=d,0===l){if(v+=o-S,S<L){L-=S;do{k[a++]=d[v++]}while(--S);v=a-w,E=k}}else if(l<S){if(v+=o+l-S,S-=l,S<L){L-=S;do{k[a++]=d[v++]}while(--S);if(v=0,l<L){S=l,L-=S;do{k[a++]=d[v++]}while(--S);v=a-w,E=k}}}else if(v+=l-S,S<L){L-=S;do{k[a++]=d[v++]}while(--S);v=a-w,E=k}for(;L>2;)k[a++]=E[v++],k[a++]=E[v++],k[a++]=E[v++],L-=3;L&&(k[a++]=E[v++],L>1&&(k[a++]=E[v++]))}else{v=a-w;do{k[a++]=k[v++],k[a++]=k[v++],k[a++]=k[v++],L-=3}while(L>2);L&&(k[a++]=k[v++],L>1&&(k[a++]=k[v++]))}break}}break}}while(r<n&&a<s);L=h>>3,r-=L,h-=L<<3,u&=(1<<h)-1,e.next_in=r,e.next_out=a,e.avail_in=r<n?n-r+5:5-(r-n),e.avail_out=a<s?s-a+257:257-(a-s),J.hold=u,J.bits=h};const at=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),it=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),st=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),ct=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var ot=(e,t,r,n,a,i,s,c)=>{const o=c.bits;let f,l,d,u,h,b,p=0,y=0,m=0,g=0,S=0,L=0,w=0,v=0,E=0,x=0,k=null;const J=new Uint16Array(16),O=new Uint16Array(16);let C,T,W,B=null;for(p=0;p<=15;p++)J[p]=0;for(y=0;y<n;y++)J[t[r+y]]++;for(S=o,g=15;g>=1&&0===J[g];g--);if(S>g&&(S=g),0===g)return a[i++]=20971520,a[i++]=20971520,c.bits=1,0;for(m=1;m<g&&0===J[m];m++);for(S<m&&(S=m),v=1,p=1;p<=15;p++)if(v<<=1,v-=J[p],v<0)return-1;if(v>0&&(0===e||1!==g))return-1;for(O[1]=0,p=1;p<15;p++)O[p+1]=O[p]+J[p];for(y=0;y<n;y++)0!==t[r+y]&&(s[O[t[r+y]]++]=y);if(0===e?(k=B=s,b=20):1===e?(k=at,B=it,b=257):(k=st,B=ct,b=0),x=0,y=0,p=m,h=i,L=S,w=0,d=-1,E=1<<S,u=E-1,1===e&&E>852||2===e&&E>592)return 1;for(;;){C=p-w,s[y]+1<b?(T=0,W=s[y]):s[y]>=b?(T=B[s[y]-b],W=k[s[y]-b]):(T=96,W=0),f=1<<p-w,l=1<<L,m=l;do{l-=f,a[h+(x>>w)+l]=C<<24|T<<16|W|0}while(0!==l);for(f=1<<p-1;x&f;)f>>=1;if(0!==f?(x&=f-1,x+=f):x=0,y++,0==--J[p]){if(p===g)break;p=t[r+s[y]]}if(p>S&&(x&u)!==d){for(0===w&&(w=S),h+=m,L=p-w,v=1<<L;L+w<g&&(v-=J[L+w],!(v<=0));)L++,v<<=1;if(E+=1<<L,1===e&&E>852||2===e&&E>592)return 1;d=x&u,a[d]=S<<24|L<<16|h-i|0}}return 0!==x&&(a[h+x]=p-w<<24|64<<16|0),c.bits=S,0};const{Z_FINISH:ft,Z_BLOCK:lt,Z_TREES:dt,Z_OK:ut,Z_STREAM_END:ht,Z_NEED_DICT:bt,Z_STREAM_ERROR:pt,Z_DATA_ERROR:yt,Z_MEM_ERROR:mt,Z_BUF_ERROR:gt,Z_DEFLATED:St}=Z,Lt=16180,wt=16190,vt=16191,Et=16192,xt=16194,kt=16199,Jt=16200,Ot=16206,Ct=16209,Tt=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function Wt(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const Bt=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<Lt||t.mode>16211?1:0},zt=e=>{if(Bt(e))return pt;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=Lt,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,ut},Pt=e=>{if(Bt(e))return pt;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,zt(e)},It=(e,t)=>{let r;if(Bt(e))return pt;const n=e.state;return t<0?(r=0,t=-t):(r=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?pt:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=r,n.wbits=t,Pt(e))},Rt=(e,t)=>{if(!e)return pt;const r=new Wt;e.state=r,r.strm=e,r.window=null,r.mode=Lt;const n=It(e,t);return n!==ut&&(e.state=null),n};let At,Ht,Yt=!0;const Zt=e=>{if(Yt){At=new Int32Array(512),Ht=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(ot(1,e.lens,0,288,At,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;ot(2,e.lens,0,32,Ht,0,e.work,{bits:5}),Yt=!1}e.lencode=At,e.lenbits=9,e.distcode=Ht,e.distbits=5},Mt=(e,t,r,n)=>{let a;const i=e.state;return null===i.window&&(i.wsize=1<<i.wbits,i.wnext=0,i.whave=0,i.window=new Uint8Array(i.wsize)),n>=i.wsize?(i.window.set(t.subarray(r-i.wsize,r),0),i.wnext=0,i.whave=i.wsize):(a=i.wsize-i.wnext,a>n&&(a=n),i.window.set(t.subarray(r-n,r-n+a),i.wnext),(n-=a)?(i.window.set(t.subarray(r-n,r),0),i.wnext=n,i.whave=i.wsize):(i.wnext+=a,i.wnext===i.wsize&&(i.wnext=0),i.whave<i.wsize&&(i.whave+=a))),0};var jt={inflateReset:Pt,inflateReset2:It,inflateResetKeep:zt,inflateInit:e=>Rt(e,15),inflateInit2:Rt,inflate:(e,t)=>{let r,n,a,i,s,c,o,f,l,d,u,h,b,p,y,m,g,S,L,w,v,E,x=0;const k=new Uint8Array(4);let J,O;const C=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(Bt(e)||!e.output||!e.input&&0!==e.avail_in)return pt;r=e.state,r.mode===vt&&(r.mode=Et),s=e.next_out,a=e.output,o=e.avail_out,i=e.next_in,n=e.input,c=e.avail_in,f=r.hold,l=r.bits,d=c,u=o,E=ut;e:for(;;)switch(r.mode){case Lt:if(0===r.wrap){r.mode=Et;break}for(;l<16;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}if(2&r.wrap&&35615===f){0===r.wbits&&(r.wbits=15),r.check=0,k[0]=255&f,k[1]=f>>>8&255,r.check=H(r.check,k,2,0),f=0,l=0,r.mode=16181;break}if(r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&f)<<8)+(f>>8))%31){e.msg="incorrect header check",r.mode=Ct;break}if((15&f)!==St){e.msg="unknown compression method",r.mode=Ct;break}if(f>>>=4,l-=4,v=8+(15&f),0===r.wbits&&(r.wbits=v),v>15||v>r.wbits){e.msg="invalid window size",r.mode=Ct;break}r.dmax=1<<r.wbits,r.flags=0,e.adler=r.check=1,r.mode=512&f?16189:vt,f=0,l=0;break;case 16181:for(;l<16;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}if(r.flags=f,(255&r.flags)!==St){e.msg="unknown compression method",r.mode=Ct;break}if(57344&r.flags){e.msg="unknown header flags set",r.mode=Ct;break}r.head&&(r.head.text=f>>8&1),512&r.flags&&4&r.wrap&&(k[0]=255&f,k[1]=f>>>8&255,r.check=H(r.check,k,2,0)),f=0,l=0,r.mode=16182;case 16182:for(;l<32;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}r.head&&(r.head.time=f),512&r.flags&&4&r.wrap&&(k[0]=255&f,k[1]=f>>>8&255,k[2]=f>>>16&255,k[3]=f>>>24&255,r.check=H(r.check,k,4,0)),f=0,l=0,r.mode=16183;case 16183:for(;l<16;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}r.head&&(r.head.xflags=255&f,r.head.os=f>>8),512&r.flags&&4&r.wrap&&(k[0]=255&f,k[1]=f>>>8&255,r.check=H(r.check,k,2,0)),f=0,l=0,r.mode=16184;case 16184:if(1024&r.flags){for(;l<16;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}r.length=f,r.head&&(r.head.extra_len=f),512&r.flags&&4&r.wrap&&(k[0]=255&f,k[1]=f>>>8&255,r.check=H(r.check,k,2,0)),f=0,l=0}else r.head&&(r.head.extra=null);r.mode=16185;case 16185:if(1024&r.flags&&(h=r.length,h>c&&(h=c),h&&(r.head&&(v=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Uint8Array(r.head.extra_len)),r.head.extra.set(n.subarray(i,i+h),v)),512&r.flags&&4&r.wrap&&(r.check=H(r.check,n,h,i)),c-=h,i+=h,r.length-=h),r.length))break e;r.length=0,r.mode=16186;case 16186:if(2048&r.flags){if(0===c)break e;h=0;do{v=n[i+h++],r.head&&v&&r.length<65536&&(r.head.name+=String.fromCharCode(v))}while(v&&h<c);if(512&r.flags&&4&r.wrap&&(r.check=H(r.check,n,h,i)),c-=h,i+=h,v)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=16187;case 16187:if(4096&r.flags){if(0===c)break e;h=0;do{v=n[i+h++],r.head&&v&&r.length<65536&&(r.head.comment+=String.fromCharCode(v))}while(v&&h<c);if(512&r.flags&&4&r.wrap&&(r.check=H(r.check,n,h,i)),c-=h,i+=h,v)break e}else r.head&&(r.head.comment=null);r.mode=16188;case 16188:if(512&r.flags){for(;l<16;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}if(4&r.wrap&&f!==(65535&r.check)){e.msg="header crc mismatch",r.mode=Ct;break}f=0,l=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),e.adler=r.check=0,r.mode=vt;break;case 16189:for(;l<32;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}e.adler=r.check=Tt(f),f=0,l=0,r.mode=wt;case wt:if(0===r.havedict)return e.next_out=s,e.avail_out=o,e.next_in=i,e.avail_in=c,r.hold=f,r.bits=l,bt;e.adler=r.check=1,r.mode=vt;case vt:if(t===lt||t===dt)break e;case Et:if(r.last){f>>>=7&l,l-=7&l,r.mode=Ot;break}for(;l<3;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}switch(r.last=1&f,f>>>=1,l-=1,3&f){case 0:r.mode=16193;break;case 1:if(Zt(r),r.mode=kt,t===dt){f>>>=2,l-=2;break e}break;case 2:r.mode=16196;break;case 3:e.msg="invalid block type",r.mode=Ct}f>>>=2,l-=2;break;case 16193:for(f>>>=7&l,l-=7&l;l<32;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}if((65535&f)!=(f>>>16^65535)){e.msg="invalid stored block lengths",r.mode=Ct;break}if(r.length=65535&f,f=0,l=0,r.mode=xt,t===dt)break e;case xt:r.mode=16195;case 16195:if(h=r.length,h){if(h>c&&(h=c),h>o&&(h=o),0===h)break e;a.set(n.subarray(i,i+h),s),c-=h,i+=h,o-=h,s+=h,r.length-=h;break}r.mode=vt;break;case 16196:for(;l<14;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}if(r.nlen=257+(31&f),f>>>=5,l-=5,r.ndist=1+(31&f),f>>>=5,l-=5,r.ncode=4+(15&f),f>>>=4,l-=4,r.nlen>286||r.ndist>30){e.msg="too many length or distance symbols",r.mode=Ct;break}r.have=0,r.mode=16197;case 16197:for(;r.have<r.ncode;){for(;l<3;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}r.lens[C[r.have++]]=7&f,f>>>=3,l-=3}for(;r.have<19;)r.lens[C[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,J={bits:r.lenbits},E=ot(0,r.lens,0,19,r.lencode,0,r.work,J),r.lenbits=J.bits,E){e.msg="invalid code lengths set",r.mode=Ct;break}r.have=0,r.mode=16198;case 16198:for(;r.have<r.nlen+r.ndist;){for(;x=r.lencode[f&(1<<r.lenbits)-1],y=x>>>24,m=x>>>16&255,g=65535&x,!(y<=l);){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}if(g<16)f>>>=y,l-=y,r.lens[r.have++]=g;else{if(16===g){for(O=y+2;l<O;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}if(f>>>=y,l-=y,0===r.have){e.msg="invalid bit length repeat",r.mode=Ct;break}v=r.lens[r.have-1],h=3+(3&f),f>>>=2,l-=2}else if(17===g){for(O=y+3;l<O;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}f>>>=y,l-=y,v=0,h=3+(7&f),f>>>=3,l-=3}else{for(O=y+7;l<O;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}f>>>=y,l-=y,v=0,h=11+(127&f),f>>>=7,l-=7}if(r.have+h>r.nlen+r.ndist){e.msg="invalid bit length repeat",r.mode=Ct;break}for(;h--;)r.lens[r.have++]=v}}if(r.mode===Ct)break;if(0===r.lens[256]){e.msg="invalid code -- missing end-of-block",r.mode=Ct;break}if(r.lenbits=9,J={bits:r.lenbits},E=ot(1,r.lens,0,r.nlen,r.lencode,0,r.work,J),r.lenbits=J.bits,E){e.msg="invalid literal/lengths set",r.mode=Ct;break}if(r.distbits=6,r.distcode=r.distdyn,J={bits:r.distbits},E=ot(2,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,J),r.distbits=J.bits,E){e.msg="invalid distances set",r.mode=Ct;break}if(r.mode=kt,t===dt)break e;case kt:r.mode=Jt;case Jt:if(c>=6&&o>=258){e.next_out=s,e.avail_out=o,e.next_in=i,e.avail_in=c,r.hold=f,r.bits=l,nt(e,u),s=e.next_out,a=e.output,o=e.avail_out,i=e.next_in,n=e.input,c=e.avail_in,f=r.hold,l=r.bits,r.mode===vt&&(r.back=-1);break}for(r.back=0;x=r.lencode[f&(1<<r.lenbits)-1],y=x>>>24,m=x>>>16&255,g=65535&x,!(y<=l);){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}if(m&&0==(240&m)){for(S=y,L=m,w=g;x=r.lencode[w+((f&(1<<S+L)-1)>>S)],y=x>>>24,m=x>>>16&255,g=65535&x,!(S+y<=l);){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}f>>>=S,l-=S,r.back+=S}if(f>>>=y,l-=y,r.back+=y,r.length=g,0===m){r.mode=16205;break}if(32&m){r.back=-1,r.mode=vt;break}if(64&m){e.msg="invalid literal/length code",r.mode=Ct;break}r.extra=15&m,r.mode=16201;case 16201:if(r.extra){for(O=r.extra;l<O;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}r.length+=f&(1<<r.extra)-1,f>>>=r.extra,l-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=16202;case 16202:for(;x=r.distcode[f&(1<<r.distbits)-1],y=x>>>24,m=x>>>16&255,g=65535&x,!(y<=l);){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}if(0==(240&m)){for(S=y,L=m,w=g;x=r.distcode[w+((f&(1<<S+L)-1)>>S)],y=x>>>24,m=x>>>16&255,g=65535&x,!(S+y<=l);){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}f>>>=S,l-=S,r.back+=S}if(f>>>=y,l-=y,r.back+=y,64&m){e.msg="invalid distance code",r.mode=Ct;break}r.offset=g,r.extra=15&m,r.mode=16203;case 16203:if(r.extra){for(O=r.extra;l<O;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}r.offset+=f&(1<<r.extra)-1,f>>>=r.extra,l-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){e.msg="invalid distance too far back",r.mode=Ct;break}r.mode=16204;case 16204:if(0===o)break e;if(h=u-o,r.offset>h){if(h=r.offset-h,h>r.whave&&r.sane){e.msg="invalid distance too far back",r.mode=Ct;break}h>r.wnext?(h-=r.wnext,b=r.wsize-h):b=r.wnext-h,h>r.length&&(h=r.length),p=r.window}else p=a,b=s-r.offset,h=r.length;h>o&&(h=o),o-=h,r.length-=h;do{a[s++]=p[b++]}while(--h);0===r.length&&(r.mode=Jt);break;case 16205:if(0===o)break e;a[s++]=r.length,o--,r.mode=Jt;break;case Ot:if(r.wrap){for(;l<32;){if(0===c)break e;c--,f|=n[i++]<<l,l+=8}if(u-=o,e.total_out+=u,r.total+=u,4&r.wrap&&u&&(e.adler=r.check=r.flags?H(r.check,a,u,s-u):R(r.check,a,u,s-u)),u=o,4&r.wrap&&(r.flags?f:Tt(f))!==r.check){e.msg="incorrect data check",r.mode=Ct;break}f=0,l=0}r.mode=16207;case 16207:if(r.wrap&&r.flags){for(;l<32;){if(0===c)break e;c--,f+=n[i++]<<l,l+=8}if(4&r.wrap&&f!==(4294967295&r.total)){e.msg="incorrect length check",r.mode=Ct;break}f=0,l=0}r.mode=16208;case 16208:E=ht;break e;case Ct:E=yt;break e;case 16210:return mt;default:return pt}return e.next_out=s,e.avail_out=o,e.next_in=i,e.avail_in=c,r.hold=f,r.bits=l,(r.wsize||u!==e.avail_out&&r.mode<Ct&&(r.mode<Ot||t!==ft))&&Mt(e,e.output,e.next_out,u-e.avail_out),d-=e.avail_in,u-=e.avail_out,e.total_in+=d,e.total_out+=u,r.total+=u,4&r.wrap&&u&&(e.adler=r.check=r.flags?H(r.check,a,u,e.next_out-u):R(r.check,a,u,e.next_out-u)),e.data_type=r.bits+(r.last?64:0)+(r.mode===vt?128:0)+(r.mode===kt||r.mode===xt?256:0),(0===d&&0===u||t===ft)&&E===ut&&(E=gt),E},inflateEnd:e=>{if(Bt(e))return pt;let t=e.state;return t.window&&(t.window=null),e.state=null,ut},inflateGetHeader:(e,t)=>{if(Bt(e))return pt;const r=e.state;return 0==(2&r.wrap)?pt:(r.head=t,t.done=!1,ut)},inflateSetDictionary:(e,t)=>{const r=t.length;let n,a,i;return Bt(e)?pt:(n=e.state,0!==n.wrap&&n.mode!==wt?pt:n.mode===wt&&(a=1,a=R(a,t,r,0),a!==n.check)?yt:(i=Mt(e,t,r,r),i?(n.mode=16210,mt):(n.havedict=1,ut)))},inflateInfo:"pako inflate (from Nodeca project)"},Xt=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const Dt=Object.prototype.toString,{Z_NO_FLUSH:Ft,Z_FINISH:Ut,Z_OK:Qt,Z_STREAM_END:Kt,Z_NEED_DICT:Nt,Z_STREAM_ERROR:Gt,Z_DATA_ERROR:Vt,Z_MEM_ERROR:qt}=Z;function _t(e){this.options=Ye.assign({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Xe,this.strm.avail_out=0;let r=jt.inflateInit2(this.strm,t.windowBits);if(r!==Qt)throw new Error(Y[r]);if(this.header=new Xt,jt.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=je.string2buf(t.dictionary):"[object ArrayBuffer]"===Dt.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(r=jt.inflateSetDictionary(this.strm,t.dictionary),r!==Qt)))throw new Error(Y[r])}function $t(e,t){const r=new _t(t);if(r.push(e),r.err)throw r.msg||Y[r.err];return r.result}_t.prototype.push=function(e,t){const r=this.strm,n=this.options.chunkSize,a=this.options.dictionary;let i,s,c;if(this.ended)return!1;for(s=t===~~t?t:!0===t?Ut:Ft,"[object ArrayBuffer]"===Dt.call(e)?r.input=new Uint8Array(e):r.input=e,r.next_in=0,r.avail_in=r.input.length;;){for(0===r.avail_out&&(r.output=new Uint8Array(n),r.next_out=0,r.avail_out=n),i=jt.inflate(r,s),i===Nt&&a&&(i=jt.inflateSetDictionary(r,a),i===Qt?i=jt.inflate(r,s):i===Vt&&(i=Nt));r.avail_in>0&&i===Kt&&r.state.wrap>0&&0!==e[r.next_in];)jt.inflateReset(r),i=jt.inflate(r,s);switch(i){case Gt:case Vt:case Nt:case qt:return this.onEnd(i),this.ended=!0,!1}if(c=r.avail_out,r.next_out&&(0===r.avail_out||i===Kt))if("string"===this.options.to){let e=je.utf8border(r.output,r.next_out),t=r.next_out-e,a=je.buf2string(r.output,e);r.next_out=t,r.avail_out=n-t,t&&r.output.set(r.output.subarray(e,e+t),0),this.onData(a)}else this.onData(r.output.length===r.next_out?r.output:r.output.subarray(0,r.next_out));if(i!==Qt||0!==c){if(i===Kt)return i=jt.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,!0;if(0===r.avail_in)break}}return!0},_t.prototype.onData=function(e){this.chunks.push(e)},_t.prototype.onEnd=function(e){e===Qt&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=Ye.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var er={Inflate:_t,inflate:$t,inflateRaw:function(e,t){return(t=t||{}).raw=!0,$t(e,t)},ungzip:$t,constants:Z};const{Deflate:tr,deflate:rr,deflateRaw:nr,gzip:ar}=tt,{Inflate:ir,inflate:sr,inflateRaw:cr,ungzip:or}=er;var fr,lr,dr;r(816).Buffer,function(e){e.PUBLIC="public",e.SECRET="secret"}(fr||(fr={})),(dr=lr||(lr={})).SECRET="secret",dr.OPEN="open",dr.UNCONSTRAINED="unconstrained";var ur=r(816).Buffer;function hr(e){const t=e.toString("hex");return 0===t.length?BigInt(0):BigInt(`0x${t}`)}function br(e,t){if(e<BigInt(0))throw new Error(`Cannot convert negative bigint ${e.toString()} to buffer with toBufferBE.`);const r=e.toString(16),n=ur.from(r.padStart(2*t,"0").slice(0,2*t),"hex");if(n.length>t)throw new Error(`Number ${e.toString(16)} does not fit in ${t}`);return n}function pr(e,t=!1){const r=e.toString(16),n=r.length%2==0?r.length:r.length+1;return`0x${r.padStart(t?64:n,"0")}`}var yr=r(3573);function mr(e){return new yr.C4(256).update(e).digest()}function gr(e){const t=new yr.C4(256);return t.reset(),t.update(e),t.digest("hex")}var Sr=r(394),Lr=r(3302),wr=r(816).Buffer;const vr=65536,Er=e=>{if(Lr)return Sr.randomBytes(e);const t="undefined"!=typeof window&&window.crypto?window.crypto:"undefined"!=typeof self&&self.crypto?self.crypto:void 0;if(!t)throw new Error("randomBytes UnsupportedEnvironment");const r=wr.allocUnsafe(e);if(e>vr)for(let n=0;n<e;n+=vr)t.getRandomValues(r.slice(n,n+vr));else t.getRandomValues(r);return r};var xr=r(5294),kr=r(816).Buffer;const Jr=e=>kr.from(xr.sha256().update(e).digest());var Or=r(816).Buffer;class Cr{constructor(e,t=0){this.buffer=e,this.index=t}static asReader(e){return Or.isBuffer(e)?new Cr(e):e}readNumber(){return this.index+=4,this.buffer.readUint32BE(this.index-4)}readUInt16(){return this.index+=2,this.buffer.readUInt16BE(this.index-2)}readBoolean(){return this.index+=1,Boolean(this.buffer.at(this.index-1))}readBytes(e){return this.index+=e,Or.from(this.buffer.subarray(this.index-e,this.index))}readFr(){return Wr.fromBuffer(this)}readFq(){return Br.fromBuffer(this)}readNumberVector(){return this.readVector({fromBuffer:e=>e.readNumber()})}readVector(e){const t=this.readNumber(),r=new Array(t);for(let n=0;n<t;n++)r[n]=e.fromBuffer(this);return r}readArray(e,t){return Array.from({length:e},(()=>t.fromBuffer(this)))}readBufferArray(e=-1){const t=[],r=e>=0?this.index+e:this.buffer.length;for(;this.index<r;){const e=this.readBuffer();t.push(e)}if(this.index!==r)throw new Error(`Reader buffer was not fully consumed. Consumed up to ${this.index} bytes. End of data: ${r} bytes.`);return t}readObject(e){return e.fromBuffer(this)}peekBytes(e){return this.buffer.subarray(this.index,e?this.index+e:void 0)}readString(){return this.readBuffer().toString()}readBuffer(){const e=this.readNumber();return this.readBytes(e)}readMap(e){const t=this.readNumber(),r={};for(let n=0;n<t;n++){const t=this.readString(),n=this.readObject(e);r[t]=n}return r}getLength(){return this.buffer.length}}var Tr=r(816).Buffer;class Wr{constructor(e){if(this.value=(e=>!!e.toBigInt)(e)?e.toBigInt():BigInt(e),this.value>Wr.MAX_VALUE)throw new Error(`Fr out of range ${e}.`)}static random(){const e=hr(Er(Wr.SIZE_IN_BYTES))%Wr.MODULUS;return new Wr(e)}static zero(){return new Wr(0n)}static fromBuffer(e){const t=Cr.asReader(e);return new Wr(hr(t.readBytes(Wr.SIZE_IN_BYTES)))}static fromString(e){return Wr.fromBuffer(Tr.from(e.replace(/^0x/i,""),"hex"))}toBuffer(){return br(this.value,Wr.SIZE_IN_BYTES)}toString(e=!1){return pr(this.value,e)}toBigInt(){return this.value}toShortString(){const e=this.toString();return`${e.slice(0,10)}...${e.slice(-4)}`}equals(e){return this.value===e.value}isZero(){return 0n===this.value}toFriendlyJSON(){return this.toString()}}Wr.ZERO=new Wr(0n),Wr.MODULUS=0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001n,Wr.MAX_VALUE=Wr.MODULUS-1n,Wr.SIZE_IN_BYTES=32;class Br{constructor(e){if(this.value=e,e>Br.MAX_VALUE)throw new Error(`Fq out of range ${e}.`)}static random(){return new this(hr(Er(64))%Br.MODULUS)}static fromBuffer(e){return new this(hr(Cr.asReader(e).readBytes(this.SIZE_IN_BYTES)))}toBuffer(){return br(this.value,Br.SIZE_IN_BYTES)}toString(){return pr(this.value)}isZero(){return 0n===this.value}toFriendlyJSON(){return this.toString()}}Br.MODULUS=0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47n,Br.MAX_VALUE=Wr.MODULUS-1n,Br.SIZE_IN_BYTES=32;var zr=r(816).Buffer;class Pr{constructor(e,t){this.x=e,this.y=t,this.kind="point"}static random(){return new Pr(Wr.random(),Wr.random())}static fromBuffer(e){const t=Cr.asReader(e);return new this(Wr.fromBuffer(t.readBytes(32)),Wr.fromBuffer(t.readBytes(32)))}static fromString(e){return this.fromBuffer(zr.from(e.replace(/^0x/i,""),"hex"))}toFields(){return[this.x,this.y]}toBigInts(){return{x:this.x.value,y:this.y.value}}toBuffer(){return zr.concat([this.x.toBuffer(),this.y.toBuffer()])}toString(){return"0x"+this.toBuffer().toString("hex")}toShortString(){const e=this.toString();return`${e.slice(0,10)}...${e.slice(-4)}`}equals(e){return this.x.equals(e.x)&&this.y.equals(e.y)}}Pr.ZERO=new Pr(Wr.ZERO,Wr.ZERO),Pr.SIZE_IN_BYTES=2*Wr.SIZE_IN_BYTES;var Ir=r(816).Buffer;class Rr{constructor(e){this.fields=e}toFields(){return this.fields}static random(){return this.fromField(Wr.random())}toFieldsBuffer(){return Ir.concat([this.fields[0].toBuffer(),this.fields[1].toBuffer()])}toBuffer(){const e=this.fields[0].toBuffer(),t=this.fields[1].toBuffer();return e[0]=t[31],e}equals(e){return this.toBigInt()===e.toBigInt()}toBigInt(){return hr(this.toBuffer())}static fromBuffer(e){if(32!=e.length)throw new Error("Invalid size of coordinate buffer");const t=Ir.alloc(32);e.copy(t,0,0,32);const r=Ir.alloc(32);return r[31]=t[0],t[0]=0,new Rr([Wr.fromBuffer(t),Wr.fromBuffer(r)])}static fromField(e){const t=e.toBuffer(),r=Ir.alloc(32);return r[31]=t[0],t[0]=0,new Rr([Wr.fromBuffer(t),Wr.fromBuffer(r)])}}Rr.ZERO=new Rr([Wr.ZERO,Wr.ZERO]);var Ar=r(816).Buffer;class Hr{constructor(e){if(this.value=e,e>Hr.MAX_VALUE)throw new Error(`GrumpkinScalar out of range ${e}.`)}get low(){return new Wr(this.value&Hr.LOW_MASK)}get high(){return new Wr(this.value>>Hr.HIGH_SHIFT)}static fromHighLow(e,t){return new Hr((e.value<<Hr.HIGH_SHIFT)+t.value)}static random(){return new this(hr(Er(64))%Hr.MODULUS)}static fromBuffer(e){return new this(hr(Cr.asReader(e).readBytes(this.SIZE_IN_BYTES)))}static fromBufferWithReduction(e){const t=hr(Cr.asReader(e).readBytes(Hr.SIZE_IN_BYTES))%Hr.MODULUS;return new Hr(t)}static fromString(e){return Hr.fromBuffer(Ar.from(e.replace(/^0x/i,""),"hex"))}toBuffer(){return br(this.value,Hr.SIZE_IN_BYTES)}toString(e=!1){return pr(this.value,e)}isZero(){return 0n===this.value}toFriendlyJSON(){return this.toString()}}Hr.MODULUS=0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47n,Hr.MAX_VALUE=Hr.MODULUS-1n,Hr.SIZE_IN_BYTES=32,Hr.HIGH_SHIFT=BigInt(Hr.SIZE_IN_BYTES/2*8),Hr.LOW_MASK=(1n<<Hr.HIGH_SHIFT)-1n;var Yr=r(816).Buffer;class Zr{constructor(e,t){this.abi=e,this.args=t,this.flattened=[]}encodeArgument(e,t,r){if(void 0===t||null==t)throw new Error(`Undefined argument ${r??"unnamed"} of type ${e.kind}`);switch(e.kind){case"field":if("number"==typeof t)this.flattened.push(new Wr(BigInt(t)));else if("bigint"==typeof t)this.flattened.push(new Wr(t));else if("boolean"==typeof t)this.flattened.push(new Wr(t?1:0));else{if("object"!=typeof t)throw new Error(`Invalid argument "${t}" of type ${e.kind}`);if(Yr.isBuffer(t))this.flattened.push(Wr.fromBuffer(t));else if("function"==typeof t.toField)this.flattened.push(t.toField());else{if(!(t instanceof Wr))throw new Error(`Argument for ${r} cannot be serialised to a field`);this.flattened.push(t)}}break;case"boolean":this.flattened.push(new Wr(t?1n:0n));break;case"array":for(let n=0;n<e.length;n+=1)this.encodeArgument(e.type,t[n],`${r}[${n}]`);break;case"struct":for(const n of e.fields)this.encodeArgument(n.type,t[n.name],`${r}.${n.name}`);break;case"integer":this.flattened.push(new Wr(t));break;default:throw new Error(`Unsupported type: ${e.kind}`)}}encode(){for(let e=0;e<this.abi.parameters.length;e+=1){const t=this.abi.parameters[e];this.encodeArgument(t.type,this.args[e],t.name)}return this.flattened}}function Mr(e,t){return new Zr(e,t).encode()}class jr{constructor(e,t,r=!1){this.name=e,this.parameters=t,this.includeNames=r,this.separator=r?", ":","}getParameterType(e){switch(e.kind){case"field":return"Field";case"integer":if("signed"===e.sign)throw new Error("Unsupported type: signed integer");return`u${e.width}`;case"boolean":return"bool";case"array":return`[${this.getParameterType(e.type)};${e.length}]`;case"struct":return`(${e.fields.map((e=>`${this.decodeParameter(e)}`)).join(this.separator)})`;default:throw new Error(`Unsupported type: ${e.kind}`)}}decodeParameter(e){const t=this.getParameterType(e.type);return this.includeNames?`${e.name}: ${t}`:t}decode(){return`${this.name}(${this.parameters.map((e=>this.decodeParameter(e))).join(this.separator)})`}}var Xr=r(816).Buffer;function Dr(e,t=4){const r=Xr.alloc(t);return r.writeUInt32BE(e,t-4),r}function Fr(e,t=4){const r=Xr.alloc(t);return r.writeInt32BE(e,t-4),r}function Ur(e){const t=Xr.alloc(4);return t.writeUInt32BE(e.length,0),Xr.concat([t,e])}function Qr(e,t){return e.map(t)}r(816).Buffer;var Kr=r(816).Buffer;class Nr{constructor(e){if(this.value=e,e>2**(8*Nr.SIZE)-1)throw new Error(`Function selector must fit in ${Nr.SIZE} bytes.`)}isEmpty(){return 0===this.value}toBuffer(){return br(BigInt(this.value),Nr.SIZE)}toString(){return this.toBuffer().toString("hex")}equals(e){return this.value===e.value}static fromBuffer(e){const t=Cr.asReader(e),r=Number(hr(t.readBytes(Nr.SIZE)));return new Nr(r)}toField(){return new Wr(this.value)}static fromField(e){return new Nr(Number(e.value))}static fromSignature(e){return Nr.fromBuffer(mr(Kr.from(e)).subarray(0,Nr.SIZE))}static fromNameAndParameters(e,t){const r=function(e,t){return new jr(e,t).decode()}(e,t);return Nr.fromSignature(r)}static empty(){return new Nr(0)}}Nr.SIZE=4;var Gr=r(816).Buffer;function Vr(e,t=4){const r=Gr.alloc(t);return r.writeUInt32BE(e,t-4),r}function qr(e){return!!e.toBuffer32}function _r(...e){let t=[];for(const n of e)Array.isArray(n)?t=[...t,..._r(...n)]:Gr.isBuffer(n)?t.push(n):"boolean"==typeof n?t.push((r=n,Gr.from([r?1:0]))):"number"==typeof n?t.push(Vr(n)):"string"==typeof n?(t.push(Vr(n.length)),t.push(Gr.from(n))):qr(n)?t.push(n.toBuffer32()):t.push(n.toBuffer());var r;return t}function $r(...e){return Gr.concat(_r(...e))}class en{constructor(e,t,r,n){this.chainId=e,this.version=t,this.blockNumber=r,this.timestamp=n}static from(e){return new en(...en.getFields(e))}static empty(){return new en(Wr.zero(),Wr.zero(),Wr.zero(),Wr.zero())}static fromBuffer(e){const t=Cr.asReader(e);return new en(t.readFr(),t.readFr(),t.readFr(),t.readFr())}static getFields(e){return[e.chainId,e.version,e.blockNumber,e.timestamp]}toBuffer(){return $r(...en.getFields(this))}}class tn{constructor(e,t){this.root=e,this.nextAvailableLeafIndex=t}toBuffer(){return $r(this.root,this.nextAvailableLeafIndex)}static fromBuffer(e){const t=Cr.asReader(e);return new tn(t.readFr(),t.readNumber())}static empty(){return new tn(Wr.ZERO,0)}}var rn,nn,an,sn,cn=r(3545);class on{constructor(e){this.items=e}toBuffer(){return $r(this.items.length,this.items)}toFriendlyJSON(){return this.items}}(sn=rn||(rn={}))[sn.STANDARD=0]="STANDARD",sn[sn.TURBO=1]="TURBO",sn[sn.ULTRA=2]="ULTRA",(an=nn||(nn={}))[an.Base=0]="Base",an[an.Merge=1]="Merge",an[an.Root=2]="Root";class fn{constructor(e,t){this.x="bigint"==typeof e?new Br(e):e,this.y="bigint"==typeof t?new Br(t):t}toBuffer(){return $r(this.x,this.y)}static fromBuffer(e){const t=Cr.asReader(e);return new fn(t.readFr(),t.readFr())}}class ln{constructor(e,t,r,n,a=!1){this.p0=e,this.p1=t,this.publicInputs=r,this.proofWitnessIndices=n,this.hasData=a}toBuffer(){return $r(this.p0,this.p1,new on(this.publicInputs),new on(this.proofWitnessIndices),this.hasData)}static fromBuffer(e){const t=Cr.asReader(e);return new ln(t.readObject(fn),t.readObject(fn),t.readVector(Wr),t.readNumberVector(),t.readBoolean())}static makeFake(){return new ln(new fn(new Br(1n),new Br(2n)),new fn(new Br(1n),new Br(2n)),[],cn(16,(e=>3027+e)),!1)}}r(816).Buffer;const dn=64,un=64;var hn,bn,pn,yn;!function(e){e[e.COMMITMENT=1]="COMMITMENT",e[e.COMMITMENT_NONCE=2]="COMMITMENT_NONCE",e[e.UNIQUE_COMMITMENT=3]="UNIQUE_COMMITMENT",e[e.SILOED_COMMITMENT=4]="SILOED_COMMITMENT",e[e.NULLIFIER=5]="NULLIFIER",e[e.INITIALISATION_NULLIFIER=6]="INITIALISATION_NULLIFIER",e[e.OUTER_NULLIFIER=7]="OUTER_NULLIFIER",e[e.PUBLIC_DATA_READ=8]="PUBLIC_DATA_READ",e[e.PUBLIC_DATA_UPDATE_REQUEST=9]="PUBLIC_DATA_UPDATE_REQUEST",e[e.FUNCTION_DATA=10]="FUNCTION_DATA",e[e.FUNCTION_LEAF=11]="FUNCTION_LEAF",e[e.CONTRACT_DEPLOYMENT_DATA=12]="CONTRACT_DEPLOYMENT_DATA",e[e.CONSTRUCTOR=13]="CONSTRUCTOR",e[e.CONSTRUCTOR_ARGS=14]="CONSTRUCTOR_ARGS",e[e.CONTRACT_ADDRESS=15]="CONTRACT_ADDRESS",e[e.CONTRACT_LEAF=16]="CONTRACT_LEAF",e[e.CALL_CONTEXT=17]="CALL_CONTEXT",e[e.CALL_STACK_ITEM=18]="CALL_STACK_ITEM",e[e.CALL_STACK_ITEM_2=19]="CALL_STACK_ITEM_2",e[e.L1_TO_L2_MESSAGE_SECRET=20]="L1_TO_L2_MESSAGE_SECRET",e[e.L2_TO_L1_MSG=21]="L2_TO_L1_MSG",e[e.TX_CONTEXT=22]="TX_CONTEXT",e[e.PUBLIC_LEAF_INDEX=23]="PUBLIC_LEAF_INDEX",e[e.PUBLIC_DATA_LEAF=24]="PUBLIC_DATA_LEAF",e[e.SIGNED_TX_REQUEST=25]="SIGNED_TX_REQUEST",e[e.GLOBAL_VARIABLES=26]="GLOBAL_VARIABLES",e[e.PARTIAL_ADDRESS=27]="PARTIAL_ADDRESS",e[e.TX_REQUEST=33]="TX_REQUEST",e[e.SIGNATURE_PAYLOAD=34]="SIGNATURE_PAYLOAD",e[e.VK=41]="VK",e[e.PRIVATE_CIRCUIT_PUBLIC_INPUTS=42]="PRIVATE_CIRCUIT_PUBLIC_INPUTS",e[e.PUBLIC_CIRCUIT_PUBLIC_INPUTS=43]="PUBLIC_CIRCUIT_PUBLIC_INPUTS",e[e.FUNCTION_ARGS=44]="FUNCTION_ARGS"}(hn||(hn={})),function(e){e[e.BASE_SLOT=0]="BASE_SLOT",e[e.MAPPING_SLOT=1]="MAPPING_SLOT",e[e.MAPPING_SLOT_PLACEHOLDER=2]="MAPPING_SLOT_PLACEHOLDER"}(bn||(bn={})),function(e){e[e.VALUE=1]="VALUE",e[e.OWNER=2]="OWNER",e[e.CREATOR=3]="CREATOR",e[e.SALT=4]="SALT",e[e.NONCE=5]="NONCE",e[e.MEMO=6]="MEMO",e[e.IS_DUMMY=7]="IS_DUMMY"}(pn||(pn={})),function(e){e[e.PARTITIONED=1]="PARTITIONED",e[e.WHOLE=2]="WHOLE"}(yn||(yn={}));var mn=r(816).Buffer;class gn{constructor(e){this.buffer=e;const t=hr(e);if(t>gn.MAX_VALUE)throw new Error(`AztecAddress out of range ${t}.`)}static random(){return new gn(br(Wr.random().value,gn.SIZE_IN_BYTES))}static fromBuffer(e){return new this(Cr.asReader(e).readBytes(this.SIZE_IN_BYTES))}static fromString(e){const t=mn.from(e.replace(/^0x/i,""),"hex");if(t.length!==gn.SIZE_IN_BYTES)throw new Error(`Invalid length ${t.length}.`);return new gn(t)}static fromBigInt(e){return new gn(br(e,gn.SIZE_IN_BYTES))}toBuffer(){return this.buffer}toString(){return`0x${this.buffer.toString("hex")}`}toShortString(){const e=this.toString();return`${e.slice(0,10)}...${e.slice(-4)}`}static fromField(e){return new gn(br(e.value,gn.SIZE_IN_BYTES))}toField(){return Wr.fromBuffer(this.toBuffer())}toBigInt(){return hr(this.buffer)}equals(e){return this.buffer.equals(e.buffer)}isZero(){return this.equals(gn.ZERO)}toFriendlyJSON(){return this.toString()}}gn.SIZE_IN_BYTES=32,gn.ZERO=new gn(mn.alloc(gn.SIZE_IN_BYTES)),gn.MODULUS=0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001n,gn.MAX_VALUE=gn.MODULUS-1n;var Sn=r(816).Buffer;class Ln{constructor(e){if(this.buffer=e,32===e.length){if(!e.slice(0,12).equals(Sn.alloc(12)))throw new Error(`Invalid address buffer: ${e.toString("hex")}`);this.buffer=e.slice(12)}else if(e.length!==Ln.SIZE_IN_BYTES)throw new Error(`Expect buffer size to be ${Ln.SIZE_IN_BYTES}. Got ${e.length}.`)}static fromString(e){if(!Ln.isAddress(e))throw new Error(`Invalid address string: ${e}`);return new Ln(Sn.from(e.replace(/^0x/i,""),"hex"))}static random(){return new Ln(Er(20))}static isAddress(e){return!!/^(0x)?[0-9a-f]{40}$/i.test(e)&&(!(!/^(0x|0X)?[0-9a-f]{40}$/.test(e)&&!/^(0x|0X)?[0-9A-F]{40}$/.test(e))||Ln.checkAddressChecksum(e))}isZero(){return this.equals(Ln.ZERO)}static checkAddressChecksum(e){const t=gr((e=e.replace(/^0x/i,"")).toLowerCase());for(let r=0;r<40;r++)if(parseInt(t[r],16)>7&&e[r].toUpperCase()!==e[r]||parseInt(t[r],16)<=7&&e[r].toLowerCase()!==e[r])return!1;return!0}static toChecksumAddress(e){if(!Ln.isAddress(e))throw new Error("Invalid address string.");const t=gr(e=e.toLowerCase().replace(/^0x/i,""));let r="0x";for(let n=0;n<e.length;n++)parseInt(t[n],16)>7?r+=e[n].toUpperCase():r+=e[n];return r}equals(e){return this.buffer.equals(e.buffer)}toString(){return`0x${this.buffer.toString("hex")}`}toChecksumString(){return Ln.toChecksumAddress(this.buffer.toString("hex"))}toBuffer(){return this.toBuffer32()}toBuffer20(){return this.buffer}toBuffer32(){const e=Sn.alloc(32);return this.buffer.copy(e,12),e}toField(){return Wr.fromBuffer(this.toBuffer32())}static fromField(e){return new Ln(e.toBuffer().slice(-Ln.SIZE_IN_BYTES))}static fromBuffer(e){const t=Cr.asReader(e);return new Ln(t.readBuffer())}toFriendlyJSON(){return this.toString()}}Ln.SIZE_IN_BYTES=20,Ln.ZERO=new Ln(Sn.alloc(Ln.SIZE_IN_BYTES));class wn{constructor(e,t,r,n,a,i){this.msgSender=e,this.storageContractAddress=t,this.isDelegateCall=n,this.isStaticCall=a,this.isContractDeployment=i,this.portalContractAddress=r instanceof Ln?r:Ln.fromField(r)}static empty(){return new wn(gn.ZERO,gn.ZERO,Wr.ZERO,!1,!1,!1)}isEmpty(){return this.msgSender.isZero()&&this.storageContractAddress.isZero()&&this.portalContractAddress.isZero()}static from(e){return new wn(...wn.getFields(e))}static getFields(e){return[e.msgSender,e.storageContractAddress,e.portalContractAddress,e.isDelegateCall,e.isStaticCall,e.isContractDeployment]}toBuffer(){return $r(...wn.getFields(this))}static fromBuffer(e){const t=Cr.asReader(e);return new wn(new gn(t.readBytes(32)),new gn(t.readBytes(32)),new Ln(t.readBytes(32)),t.readBoolean(),t.readBoolean(),t.readBoolean())}}class vn{constructor(e,t,r,n){this.selector=e,this.isInternal=t,this.isPrivate=r,this.isConstructor=n}static fromAbi(e){return new vn(Nr.fromNameAndParameters(e.name,e.parameters),e.isInternal,e.functionType===lr.SECRET,"constructor"===e.name)}toBuffer(){return $r(this.selector,this.isInternal,this.isPrivate,this.isConstructor)}isEmpty(){return this.selector.isEmpty()}static empty(e){return new vn(Nr.empty(),e?.isInternal??!1,e?.isPrivate??!1,e?.isConstructor??!1)}static fromBuffer(e){const t=Cr.asReader(e);return new vn(t.readObject(Nr),t.readBoolean(),t.readBoolean(),t.readBoolean())}}var En=r(816).Buffer;class xn{constructor(e,t,r){this.contractAddress=e,this.functionTreeRoot=r,this.portalContractAddress=new Ln(t.toBuffer())}toBuffer(){return $r(this.contractAddress,this.portalContractAddress,this.functionTreeRoot)}static fromBuffer(e){const t=Cr.asReader(e);return new xn(t.readObject(gn),new Ln(t.readBytes(32)),t.readFr())}static empty(){return new xn(gn.ZERO,Ln.ZERO,Wr.ZERO)}}class kn{constructor(e,t,r,n,a,i,s,c){this.callStackItemHash=e,this.functionData=t,this.vkHash=r,this.payFeeFromL1=a,this.payFeeFromPublicL2=i,this.calledFromL1=s,this.calledFromPublicL2=c,this.portalContractAddress=Ln.fromField(n.toField())}toBuffer(){return $r(this.callStackItemHash,this.functionData,this.vkHash,this.portalContractAddress,this.payFeeFromL1,this.payFeeFromPublicL2,this.calledFromL1,this.calledFromPublicL2)}static fromBuffer(e){const t=Cr.asReader(e);return new kn(t.readFr(),t.readObject(vn),t.readFr(),new Ln(t.readBytes(32)),t.readBoolean(),t.readBoolean(),t.readBoolean(),t.readBoolean())}static empty(){return new kn(Wr.ZERO,vn.empty(),Wr.ZERO,Ln.ZERO,!1,!1,!1,!1)}}class Jn{constructor(e,t,r,n,a,i,s,c,o,f,l,d,u){this.aggregationObject=e,this.newCommitments=t,this.newNullifiers=r,this.nullifiedCommitments=n,this.privateCallStack=a,this.publicCallStack=i,this.newL2ToL1Msgs=s,this.encryptedLogsHash=c,this.unencryptedLogsHash=o,this.encryptedLogPreimagesLength=f,this.unencryptedLogPreimagesLength=l,this.newContracts=d,this.optionallyRevealedData=u}toBuffer(){return $r(this.aggregationObject,this.newCommitments,this.newNullifiers,this.nullifiedCommitments,this.privateCallStack,this.publicCallStack,this.newL2ToL1Msgs,this.encryptedLogsHash,this.unencryptedLogsHash,this.encryptedLogPreimagesLength,this.unencryptedLogPreimagesLength,this.newContracts,this.optionallyRevealedData)}toString(){return this.toBuffer().toString()}static fromBuffer(e){const t=Cr.asReader(e);return new Jn(t.readObject(ln),t.readArray(dn,Wr),t.readArray(un,Wr),t.readArray(un,Wr),t.readArray(8,Wr),t.readArray(8,Wr),t.readArray(2,Wr),t.readArray(2,Wr),t.readArray(2,Wr),t.readFr(),t.readFr(),t.readArray(1,xn),t.readArray(4,kn))}static fromString(e){return Jn.fromBuffer(En.from(e,"hex"))}static empty(){return new Jn(ln.makeFake(),An(dn,Wr.zero),An(un,Wr.zero),An(un,Wr.zero),An(8,Wr.zero),An(8,Wr.zero),An(2,Wr.zero),An(2,Wr.zero),An(2,Wr.zero),Wr.zero(),Wr.zero(),An(1,xn.empty),An(4,kn.empty))}}class On{constructor(e,t,r,n,a){this.deployerPublicKey=e,this.constructorVkHash=t,this.functionTreeRoot=r,this.contractAddressSalt=n,this.portalContractAddress=Ln.fromField(a.toField())}toBuffer(){return $r(this.deployerPublicKey,this.constructorVkHash,this.functionTreeRoot,this.contractAddressSalt,this.portalContractAddress)}static empty(){return new On(Pr.ZERO,Wr.ZERO,Wr.ZERO,Wr.ZERO,Ln.ZERO)}static fromBuffer(e){const t=Cr.asReader(e);return new On(t.readObject(Pr),t.readFr(),t.readFr(),t.readFr(),new Ln(t.readBytes(32)))}}class Cn{constructor(e,t,r,n,a,i){this.isFeePaymentTx=e,this.isRebatePaymentTx=t,this.isContractDeploymentTx=r,this.contractDeploymentData=n,this.chainId=a,this.version=i}toBuffer(){return $r(this.isFeePaymentTx,this.isRebatePaymentTx,this.isContractDeploymentTx,this.contractDeploymentData,this.chainId,this.version)}static fromBuffer(e){const t=Cr.asReader(e);return new Cn(t.readBoolean(),t.readBoolean(),t.readBoolean(),t.readObject(On),t.readFr(),t.readFr())}static empty(e=0,t=0){return new Cn(!1,!1,!1,On.empty(),new Wr(e),new Wr(t))}static from(e){return new Cn(...Cn.getFields(e))}static getFields(e){return[e.isFeePaymentTx,e.isRebatePaymentTx,e.isContractDeploymentTx,e.contractDeploymentData,e.chainId,e.version]}}class Tn{constructor(e,t,r,n,a,i,s,c){this.privateDataTreeRoot=e,this.nullifierTreeRoot=t,this.contractTreeRoot=r,this.l1ToL2MessagesTreeRoot=n,this.blocksTreeRoot=a,this.privateKernelVkTreeRoot=i,this.publicDataTreeRoot=s,this.globalVariablesHash=c}static from(e){return new Tn(...Tn.getFields(e))}static random(){return new Tn(Wr.random(),Wr.random(),Wr.random(),Wr.random(),Wr.random(),Wr.random(),Wr.random(),Wr.random())}static getFields(e){return[e.privateDataTreeRoot,e.nullifierTreeRoot,e.contractTreeRoot,e.l1ToL2MessagesTreeRoot,e.blocksTreeRoot,e.privateKernelVkTreeRoot,e.publicDataTreeRoot,e.globalVariablesHash]}toBuffer(){return $r(...Tn.getFields(this))}toString(){return this.toBuffer().toString()}toArray(){return[this.privateDataTreeRoot,this.nullifierTreeRoot,this.contractTreeRoot,this.l1ToL2MessagesTreeRoot,this.blocksTreeRoot,this.publicDataTreeRoot,this.globalVariablesHash]}static fromBuffer(e){const t=Cr.asReader(e);return new Tn(t.readFr(),t.readFr(),t.readFr(),t.readFr(),t.readFr(),t.readFr(),t.readFr(),t.readFr())}isEmpty(){return this.privateDataTreeRoot.isZero()&&this.nullifierTreeRoot.isZero()&&this.contractTreeRoot.isZero()&&this.l1ToL2MessagesTreeRoot.isZero()&&this.blocksTreeRoot.isZero()&&this.privateKernelVkTreeRoot.isZero()&&this.publicDataTreeRoot.isZero()&&this.globalVariablesHash.isZero()}static empty(){return new Tn(Wr.ZERO,Wr.ZERO,Wr.ZERO,Wr.ZERO,Wr.ZERO,Wr.ZERO,Wr.ZERO,Wr.ZERO)}}class Wn{constructor(e,t){this.blockData=e,this.txContext=t}toBuffer(){return $r(this.blockData,this.txContext)}static fromBuffer(e){const t=Cr.asReader(e);return new Wn(t.readObject(Tn),t.readObject(Cn))}static empty(){return new Wn(Tn.empty(),Cn.empty())}}r(1328),r(816).Buffer,r(816).Buffer,r(816).Buffer;class Bn{constructor(e){this.buffer=e}static fromMsgpackBuffer(e){return new Bn(e)}static fromBuffer(e){const t=Cr.asReader(e),r=t.readNumber(),n=t.readBytes(r);return new Bn(n)}toMsgpackBuffer(){return this.buffer}toBuffer(){return $r(this.buffer.length,this.buffer)}}class zn{constructor(e,t,r){this.end=e,this.constants=t,this.isPrivate=r}toBuffer(){return $r(this.end,this.constants,this.isPrivate)}static fromBuffer(e){const t=Cr.asReader(e);return new zn(t.readObject(Jn),t.readObject(Wn),t.readBoolean())}static empty(){return new zn(Jn.empty(),Wn.empty(),!0)}}class Pn extends zn{constructor(e,t){super(e,t,!0)}}function In(e,t,r){if(e.length>r)throw new Error("Array size exceeds target length");return[...e,...Array(r-e.length).fill(t)]}function Rn(e,t){for(const r of e)if(!t(r))return!1;return!0}function An(e,t,r=0){return Array.from({length:e},((e,n)=>t(n+r)))}class Hn{constructor(e,t,r){this.storageSlot=e,this.currentValue=t,this.sideEffectCounter=r}static from(e){return new Hn(e.storageSlot,e.currentValue,e.sideEffectCounter)}toBuffer(){return $r(this.storageSlot,this.currentValue)}static fromBuffer(e){const t=Cr.asReader(e);return new Hn(t.readFr(),t.readFr())}static empty(){return new Hn(Wr.ZERO,Wr.ZERO)}isEmpty(){return this.storageSlot.isZero()&&this.currentValue.isZero()}toFriendlyJSON(){return`Slot=${this.storageSlot.toFriendlyJSON()}: ${this.currentValue.toFriendlyJSON()}`}}class Yn{constructor(e,t,r,n){this.storageSlot=e,this.oldValue=t,this.newValue=r,this.sideEffectCounter=n}toBuffer(){return $r(this.storageSlot,this.oldValue,this.newValue)}static fromBuffer(e){const t=Cr.asReader(e);return new Yn(t.readFr(),t.readFr(),t.readFr())}static from(e){return new Yn(...Yn.getFields(e))}static getFields(e){return[e.storageSlot,e.oldValue,e.newValue,e.sideEffectCounter]}static empty(){return new Yn(Wr.ZERO,Wr.ZERO,Wr.ZERO)}isEmpty(){return this.storageSlot.isZero()&&this.oldValue.isZero()&&this.newValue.isZero()}toFriendlyJSON(){return`Slot=${this.storageSlot.toFriendlyJSON()}: ${this.oldValue.toFriendlyJSON()} => ${this.newValue.toFriendlyJSON()}`}}class Zn{constructor(e,t,r,n,a,i,s,c,o,f,l,d,u){this.callContext=e,this.argsHash=t,this.returnValues=r,this.contractStorageUpdateRequests=n,this.contractStorageReads=a,this.publicCallStack=i,this.newCommitments=s,this.newNullifiers=c,this.newL2ToL1Msgs=o,this.unencryptedLogsHash=f,this.unencryptedLogPreimagesLength=l,this.historicBlockData=d,this.proverAddress=u}static from(e){return new Zn(...Zn.getFields(e))}static empty(){return new Zn(wn.empty(),Wr.ZERO,An(4,Wr.zero),An(16,Yn.empty),An(16,Hn.empty),An(4,Wr.zero),An(16,Wr.zero),An(16,Wr.zero),An(2,Wr.zero),An(2,Wr.zero),Wr.ZERO,Tn.empty(),gn.ZERO)}isEmpty(){const e=e=>Rn(e,(e=>e.isZero()));return this.callContext.isEmpty()&&this.argsHash.isZero()&&e(this.returnValues)&&Rn(this.contractStorageUpdateRequests,(e=>e.isEmpty()))&&Rn(this.contractStorageReads,(e=>e.isEmpty()))&&e(this.publicCallStack)&&e(this.newCommitments)&&e(this.newNullifiers)&&e(this.newL2ToL1Msgs)&&e(this.unencryptedLogsHash)&&this.unencryptedLogPreimagesLength.isZero()&&this.historicBlockData.isEmpty()&&this.proverAddress.isZero()}static getFields(e){return[e.callContext,e.argsHash,e.returnValues,e.contractStorageUpdateRequests,e.contractStorageReads,e.publicCallStack,e.newCommitments,e.newNullifiers,e.newL2ToL1Msgs,e.unencryptedLogsHash,e.unencryptedLogPreimagesLength,e.historicBlockData,e.proverAddress]}toBuffer(){return $r(...Zn.getFields(this))}}var Mn=r(816),jn=r(3261);function Xn(e,t,r,n){const a=r instanceof Mn.Buffer?r:r.toBuffer(),i=e.call("bbmalloc",n),s=e.call("bbmalloc",a.length);e.writeMemory(s,a),e.call(t,s,i);const c=Mn.Buffer.from(e.getMemorySlice(i,i+n));return e.call("bbfree",i),e.call("bbfree",s),c}function Dn(e,t,r,n){const a=[],i=r.reduce(((e,t)=>(a.push(e),e+t.length)),0),s=e.call("bbmalloc",n),c=e.call("bbmalloc",i);e.writeMemory(c,Mn.Buffer.concat(r));const o=a.map((e=>c+e));e.call(t,...o,s);const f=Mn.Buffer.from(e.getMemorySlice(s,s+n));return e.call("bbfree",c),e.call("bbfree",s),f}function Fn(e,t){return e.call("pedersen__init"),Wr.fromBuffer(Xn(e,"abis__compute_function_leaf",t,32))}function Un(e,t,r){e.call("pedersen__init");const n=Dn(e,"abis__compute_contract_address_from_partial",[t.toBuffer(),r.toBuffer()],32);return new gn(n)}const Qn=32,Kn=16;function Nn(e,t){if(0===t.length)return Promise.resolve(Wr.ZERO);if(t.length>Qn*Kn)throw new Error(`Cannot hash more than ${Qn*Kn} arguments`);e.call("pedersen__init");const r=t=>Wr.fromBuffer(Xn(e,"abis__compute_var_args_hash",new on(t),32));let n=jn(t,Qn).map((e=>(e.length<Qn&&(e=In(e,Wr.ZERO,Qn)),r(e))));return n.length<Kn&&(n=In(n,Wr.ZERO,Kn)),Promise.resolve(r(n))}class Gn{constructor(e,t,r,n){this.contractAddress=e,this.functionData=t,this.publicInputs=r,this.isExecutionRequest=n}toBuffer(){return $r(this.contractAddress,this.functionData,this.publicInputs,this.isExecutionRequest)}static empty(){return new Gn(gn.ZERO,vn.empty({isPrivate:!1}),Zn.empty(),!1)}isEmpty(){return this.contractAddress.isZero()&&this.functionData.isEmpty()&&this.publicInputs.isEmpty()}async hash(){return function(e,t){e.call("pedersen__init");const r=Xn(e,"abis__compute_public_call_stack_item_hash",t,32);return Wr.fromBuffer(r)}(await Oa.get(),this)}}class Vn{constructor(e,t,r,n){this.origin=e,this.functionData=t,this.argsHash=r,this.txContext=n}static getFields(e){return[e.origin,e.functionData,e.argsHash,e.txContext]}static from(e){return new Vn(...Vn.getFields(e))}toBuffer(){return $r([...Vn.getFields(this)])}static fromBuffer(e){const t=Cr.asReader(e);return new Vn(t.readObject(gn),t.readObject(vn),t.readFr(),t.readObject(Cn))}}class qn{constructor(e,t,r,n,a){this.functionSelector=e,this.isInternal=t,this.isPrivate=r,this.vkHash=n,this.acirHash=a}toBuffer(){return $r(this.functionSelector,this.isInternal,this.isPrivate,this.vkHash,this.acirHash)}static fromBuffer(e){const t=Cr.asReader(e);return new qn(t.readObject(Nr),t.readBoolean(),t.readBoolean(),t.readFr(),t.readFr())}}class _n{constructor(e,t,r,n,a){this.contractAddress=e,this.functionData=t,this.callContext=r,this.args=n,this.sideEffectCounter=a}toBuffer(){return $r(this.contractAddress,this.functionData,this.callContext,new on(this.args))}static fromBuffer(e){const t=Cr.asReader(e);return new _n(new gn(t.readBytes(32)),vn.fromBuffer(t),wn.fromBuffer(t),t.readVector(Wr))}static from(e){return new _n(..._n.getFields(e))}static getFields(e){return[e.contractAddress,e.functionData,e.callContext,e.args,e.sideEffectCounter]}async toPublicCallStackItem(){const e=Zn.empty();return e.callContext=this.callContext,e.argsHash=await this.getArgsHash(),new Gn(this.contractAddress,this.functionData,e,!0)}async getArgsHash(){return Nn(await Oa.get(),this.args)}}var $n=r(5860);function ea(e){if("string"!=typeof e||e.length<=7||"file://"!==e.substring(0,7))throw new TypeError("must pass in a file:// URI to convert to a file path");const t=decodeURI(e.substring(7)),r=t.indexOf("/");let n=t.substring(0,r),a=t.substring(r+1);return"localhost"===n&&(n=""),n&&(n=$n.sep+$n.sep+n),a=a.replace(/^(.+)\|/,"$1:"),"\\"===$n.sep&&(a=a.replace(/\//g,"\\")),/^.+:/.test(a)||(a=$n.sep+a),n+a}var ta=r(6292);let ra;function na(e){const t=ta(e);return(...e)=>function(e,...t){ta.enabled(e.namespace)&&(ra&&ra(e.namespace,...t),e(...t))}(t,...e)}var aa=r(3118);const ia=["silent","error","warn","info","verbose","debug"],sa={NODE_ENV:"production"}.LOG_LEVEL?.toLowerCase(),ca=ia.includes(sa)?sa:"info";function oa(e){const t=ta(e);"debug"===ca&&(t.enabled=!0);const r={silent:()=>{},error:(...e)=>la(t,"error",e),warn:(...e)=>la(t,"warn",e),info:(...e)=>la(t,"info",e),verbose:(...e)=>la(t,"verbose",e),debug:(...e)=>la(t,"debug",e)};return Object.assign(((...e)=>la(t,"debug",e)),r)}const fa=[];function la(e,t,r){for(const n of fa)n(t,e.namespace,r);e.enabled?e(r[0],...r.slice(1)):ia.indexOf(t)<=ia.indexOf(ca)&&function(e){console.error(...e)}([da(e,t),...r])}function da(e,t){const r=ca!==t?` ${t.toUpperCase()}`:"",n=`${e.namespace.replace(/^aztec:/,"")}${r}`;if(!Lr||!(0,aa.VB)(process.stderr.fd))return n;const a=ta.selectColor(e.namespace);return`  ${"[3"+(a<8?a:"8;5;"+a)};1m${n}[0m`}new class{constructor(){this.logs=[]}enable(){ra=(...e)=>{this.logs.push([(new Date).toISOString(),...e])}}getLogs(e=0){return e?this.logs.slice(-e):this.logs}clear(e=this.logs.length){this.logs=this.logs.slice(e)}};class ua{constructor(e=oa("aztec:foundation:memory_fifo")){this.log=e,this.waiting=[],this.items=[],this.flushing=!1}length(){return this.items.length}get(e){return this.items.length?Promise.resolve(this.items.shift()):0===this.items.length&&this.flushing?Promise.resolve(null):new Promise(((t,r)=>{this.waiting.push(t),e&&setTimeout((()=>{const e=this.waiting.findIndex((e=>e===t));if(e>-1){this.waiting.splice(e,1);const t=new Error("Timeout getting item from queue.");r(t)}}),1e3*e)}))}put(e){this.flushing||(this.waiting.length?this.waiting.shift()(e):this.items.push(e))}end(){this.flushing=!0,this.waiting.forEach((e=>e(null)))}cancel(){this.flushing=!0,this.items=[],this.waiting.forEach((e=>e(null)))}async process(e){try{for(;;){const t=await this.get();if(null===t)break;await e(t)}}catch(e){this.log.error("Queue handler exception:",e)}}}const ha=(e=na("wasm:empty_wasi_sdk"))=>({clock_time_get(){e("clock_time_get")},environ_get(){e("environ_get")},environ_sizes_get(){e("environ_sizes_get")},fd_close(){e("fd_close")},fd_read(){e("fd_read")},fd_write(){e("fd_write")},fd_seek(){e("fd_seek")},fd_fdstat_get(){e("fd_fdstat_get")},fd_fdstat_set_flags(){e("fd_fdstat_set_flags")},fd_prestat_get:()=>(e("fd_prestat_get"),8),fd_prestat_dir_name:()=>(e("fd_prestat_dir_name"),28),path_open(){e("path_open")},path_filestat_get(){e("path_filestat_get")},proc_exit:()=>(e("proc_exit"),52),random_get:()=>(e("random_get"),1)});class ba{constructor(e,t,r="aztec:wasm"){this.module=e,this.importFn=t,this.mutexQ=new ua,this.debug=na(r),this.mutexQ.put(!0)}getModule(){return this.module}async init(e=30,t=8192,r="_initialize"){this.debug(`initial mem: ${e} pages, ${65536*e/1048576}mb. max mem: ${t} pages, ${65536*t/1048576}mb`),this.memory=new WebAssembly.Memory({initial:e,maximum:t}),this.heap=new Uint8Array(this.memory.buffer);const n={wasi_snapshot_preview1:{...ha(this.debug),random_get:(e,t)=>{e>>>=0;const r=this.getMemory(),n=Er(t);for(let a=e;a<e+t;++a)r[a]=n[a-e]}},env:this.importFn(this)};if(this.module instanceof WebAssembly.Module)this.instance=await WebAssembly.instantiate(this.module,n);else{const{instance:e}=await WebAssembly.instantiate(this.module,n);this.instance=e}r&&this.call(r)}exports(){if(!this.instance)throw new Error("WasmModule: not initialized!");return this.instance.exports}getLogger(){return this.debug}addLogger(e){const t=this.debug;this.debug=(...r)=>{e(...r),t(...r)}}call(e,...t){if(!this.exports()[e])throw new Error(`WASM function ${e} not found.`);try{return this.exports()[e](...t)>>>0}catch(t){const r=`WASM function ${e} aborted, error: ${t}\n${t.stack}`;throw new Error(r)}}getRawMemory(){return this.memory}getMemory(){return 0===this.heap.length&&(this.heap=new Uint8Array(this.memory.buffer)),this.heap}memSize(){return this.getMemory().length}getMemorySlice(e,t){return this.getMemory().slice(e,t)}writeMemory(e,t){const r=this.getMemory();for(let n=0;n<t.length;n++)r[n+e]=t[n]}getMemoryAsString(e){e>>>=0;const t=this.getMemory();let r=e;for(;0!==t[r];++r);return Mn.Buffer.from(t.slice(e,r)).toString("ascii")}async acquire(){await this.mutexQ.get()}release(){if(0!==this.mutexQ.length())throw new Error("Release called but not acquired.");this.mutexQ.put(!0)}}var pa=r(9190),ya=r(3240),ma=r(1856),ga=r(6014),Sa=r(717),La=r(816).Buffer;class wa{constructor(e){this.numPoints=e}async init(){const e=28+64*this.numPoints-1,t=await fetch("https://aztec-ignition.s3.amazonaws.com/MAIN%20IGNITION/monomial/transcript00.dat",{headers:{Range:`bytes=28-${e}`}});this.data=new Uint8Array(await t.arrayBuffer()),await this.downloadG2Data()}async downloadG2Data(){const e=await fetch("https://aztec-ignition.s3.amazonaws.com/MAIN%20IGNITION/monomial/transcript00.dat",{headers:{Range:"bytes=322560092-322560219"}});this.g2Data=new Uint8Array(await e.arrayBuffer())}getG1Data(){return this.data}getG2Data(){return this.g2Data}}class va{constructor(e,t){this.numPoints=e,this.path=t}async init(){const e=64*this.numPoints,t=await(0,ga.open)(this.path,"r");try{this.data=La.alloc(e),await t.read(this.data,0,e,28),this.g2Data=La.alloc(128),await t.read(this.g2Data,0,128,322560092)}finally{await t.close()}}getG1Data(){return this.data}getG2Data(){return this.g2Data}}class Ea{constructor(e){if(this.numPoints=e,Lr){const t=(0,Sa.dirname)(ea("file:///usr/src/yarn-project/circuits.js/dest/crs/index.js"))+"/../../../../barretenberg/cpp/srs_db/ignition/monomial/transcript00.dat";this.crs=(0,ma.existsSync)(t)?new va(e,t):new wa(e)}else this.crs=new wa(e)}async init(){await this.crs.init()}getG1Data(){return this.crs.getG1Data()}getG2Data(){return this.crs.getG2Data()}}var xa=r(816).Buffer;const ka="/aztec3-circuits",Ja=Lr?(0,ya.join)((0,ya.dirname)(ea("file:///usr/src/yarn-project/circuits.js/dest/wasm/circuits_wasm.js")),`../../resources/${ka}.wasm`):`${ka}.wasm`;class Oa{constructor(e){this.wasm=e}static get(){return this.instance||(this.instance=Oa.new()),this.instance}static async new(e=30,t=8192,r="aztec:wasm"){const n=new ba(await async function(e){if(Lr)return await(0,pa.readFile)(e);{const t=await fetch(e);return xa.from(await t.arrayBuffer())}}(Ja),(e=>({logstr(e){const t=`${n.getMemoryAsString(e)} (mem: ${(n.getMemory().length/1048576).toFixed(2)}MB)`;(t.startsWith("abort: ")||t.startsWith("important: "))&&console.log(t),n.getLogger()(t)},memory:e.getRawMemory(),set_data:()=>{n.getLogger()("set_data: NYI")},get_data:()=>{throw new Error("NOT YET IMPLEMENTED - needed for proofs, plan is to use barretenberg.js from NPM for proofs. See https://github.com/AztecProtocol/aztec-packages/issues/781")}})),r);return await n.init(e,t),await Oa.initializeSrs(n),new Oa(n)}static async initializeSrs(e){const t=new Ea(5e4);await t.init();const r=e.call("bbmalloc",t.getG1Data().length);e.writeMemory(r,t.getG1Data());const n=e.call("bbmalloc",4);e.writeMemory(n,Dr(t.numPoints));const a=e.call("bbmalloc",t.getG2Data().length);e.writeMemory(a,t.getG2Data()),e.call("srs_init_srs",r,n,a),e.call("bbfree",r),e.call("bbfree",n),e.call("bbfree",a)}exports(){return this.wasm.exports()}getMemorySlice(e,t){return this.wasm.getMemorySlice(e,t)}writeMemory(e,t){this.wasm.writeMemory(e,t)}getMemoryAsString(e){return this.wasm.getMemoryAsString(e)}call(e,...t){return this.wasm.call(e,...t)}}var Ca=r(816).Buffer;function Ta(e,t){return function(e,t){return e.call("pedersen__init"),Xn(e,"abis__hash_vk",t,32)}(t,Ca.from(e,"hex"))}function Wa({name:e}){return"constructor"===e}function Ba({name:e,functionType:t}){return t!==lr.UNCONSTRAINED&&!Wa({name:e})}async function za(e,t,r,n){const a=e.functions.find(Wa);if(!a)throw new Error("Cannot find constructor in the ABI.");if(!a.verificationKey)throw new Error("Missing verification key for the constructor.");const i=await Oa.get(),s=Ta(a.verificationKey,i),c=Wr.fromBuffer(s),o=function(e,t){const r=e.filter(Ba),n=[];for(let e=0;e<r.length;e++){const a=r[e],i=Nr.fromNameAndParameters(a.name,a.parameters),s=a.isInternal,c=a.functionType===lr.SECRET,o=Ta(a.verificationKey,t),f=Ca.alloc(32,0),l=Fn(t,new qn(i,s,c,Wr.fromBuffer(o),Wr.fromBuffer(f)));n.push(l)}return n}(e.functions.map((e=>({...e,selector:Nr.fromNameAndParameters(e.name,e.parameters)}))),i),f=function(e,t){const r=function(e){const t=Gr.alloc(4);return t.writeUInt32BE(e.length,0),Gr.concat([t,...e])}(t.map((e=>e.toBuffer())));e.call("pedersen__init");const n=Xn(e,"abis__compute_function_tree_root",r,32);return Wr.fromBuffer(n)}(i,o),l=vn.fromAbi(a),d=Mr(a,t),u=function(e,t,r,n){e.call("pedersen__init");const a=Dn(e,"abis__hash_constructor",[t.toBuffer(),r.toBuffer(),n],32);return Wr.fromBuffer(a)}(i,l,await Nn(i,d),c.toBuffer()),h=function(e,t,r,n){e.call("pedersen__init");const a=Dn(e,"abis__compute_partial_address",[t.toBuffer(),r.toBuffer(),n.toBuffer()],32);return Wr.fromBuffer(a)}(i,r,f,u),b=function(e,t,r,n,a){e.call("pedersen__init");const i=Dn(e,"abis__compute_contract_address",[t.toBuffer(),r.toBuffer(),n.toBuffer(),a.toBuffer()],32);return new gn(i)}(i,n,r,f,u);return{completeAddress:await Na.create(b,n,h),constructorHash:c,functionTreeRoot:f}}var Pa=r(816).Buffer;class Ia{static async new(){return new this(await Oa.get())}constructor(e){this.wasm=e}generator(){return Ia.generator}mul(e,t){return this.wasm.writeMemory(0,e.toBuffer()),this.wasm.writeMemory(64,t.toBuffer()),this.wasm.call("ecc_grumpkin__mul",0,64,96),Pr.fromBuffer(Pa.from(this.wasm.getMemorySlice(96,160)))}batchMul(e,t){const r=Pa.concat(e.map((e=>e.toBuffer()))),n=e.length*Pr.SIZE_IN_BYTES,a=this.wasm.call("bbmalloc",2*n);this.wasm.writeMemory(a,r),this.wasm.writeMemory(0,t.toBuffer()),this.wasm.call("ecc_grumpkin__batch_mul",a,0,e.length,a+n);const i=Pa.from(this.wasm.getMemorySlice(a+n,a+n+n));this.wasm.call("bbfree",a);const s=[];for(let e=0;e<n;e+=64)s.push(Pr.fromBuffer(i.slice(e,e+64)));return s}getRandomFr(){return this.wasm.call("ecc_grumpkin__get_random_scalar_mod_circuit_modulus",0),Wr.fromBuffer(Pa.from(this.wasm.getMemorySlice(0,32)))}reduce512BufferToFr(e){return this.wasm.writeMemory(0,e),this.wasm.call("ecc_grumpkin__reduce512_buffer_mod_circuit_modulus",0,64),Wr.fromBuffer(Pa.from(this.wasm.getMemorySlice(64,96)))}}function Ra(e){const t=Mn.Buffer.alloc(4);return t.writeUInt32BE(e.length,0),Mn.Buffer.concat([t,...e])}Ia.generator=Pr.fromBuffer(Pa.from([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,207,19,94,117,6,164,93,99,45,39,13,69,241,24,18,148,131,63,196,141,130,63,39,44]));var Aa=r(6534),Ha=r(816).Buffer;class Ya{constructor(e,t,r){if(this.r=e,this.s=t,this.v=r,32!=e.length)throw new Error("Invalid length of 'r' in ECDSA signature");if(32!=t.length)throw new Error("Invalid length of 's' in ECDSA signature");if(1!=r.length)throw new Error("Invalid length of '1' in ECDSA signature")}toBuffer(){return Ha.concat([this.r,this.s,this.v])}static fromBuffer(e){return new Ya(e.subarray(0,32),e.subarray(32,64),e.subarray(64,65))}static fromBigInts(e,t,r){return new Ya(br(e,32),br(t,32),Ha.from([r]))}static random(){return new Ya((0,Aa.randomBytes)(32),(0,Aa.randomBytes)(32),Ha.from([27]))}toString(){return`0x${this.toBuffer().toString("hex")}`}toFields(e=!1){const t=this.toBuffer(),r=Ha.alloc(32),n=Ha.alloc(32),a=Ha.alloc(32);return t.copy(r,1,0,31),t.copy(n,1,31,62),t.copy(a,1,62,e?65:64),Qr([r,n,a],Wr.fromBuffer)}}var Za=r(816).Buffer;class Ma{static async new(){return new this(await Oa.get())}constructor(e){this.wasm=e}computePublicKey(e){return this.wasm.writeMemory(0,e),this.wasm.call("ecdsa__compute_public_key",0,32),Za.from(this.wasm.getMemorySlice(32,96))}constructSignature(e,t){const r=this.wasm.call("bbmalloc",e.length);return this.wasm.writeMemory(0,t),this.wasm.writeMemory(r,e),this.wasm.call("ecdsa__construct_signature",r,e.length,0,32,64,96),new Ya(Za.from(this.wasm.getMemorySlice(32,64)),Za.from(this.wasm.getMemorySlice(64,96)),Za.from(this.wasm.getMemorySlice(96,97)))}recoverPublicKey(e,t){const r=this.wasm.call("bbmalloc",e.length);return this.wasm.writeMemory(0,t.r),this.wasm.writeMemory(32,t.s),this.wasm.writeMemory(64,t.v),this.wasm.writeMemory(r,e),this.wasm.call("ecdsa__recover_public_key_from_signature",r,e.length,0,32,64,65),Za.from(this.wasm.getMemorySlice(65,129))}verifySignature(e,t,r){const n=this.wasm.call("bbmalloc",e.length);return this.wasm.writeMemory(0,t),this.wasm.writeMemory(64,r.r),this.wasm.writeMemory(96,r.s),this.wasm.writeMemory(128,r.v),this.wasm.writeMemory(n,e),!!this.wasm.call("ecdsa__verify_signature",n,e.length,0,64,96,128)}}var ja=r(816).Buffer;class Xa{static async new(){return new this(await Oa.get())}constructor(e){this.wasm=e}generator(){return Xa.generator}mul(e,t){return this.wasm.writeMemory(0,e),this.wasm.writeMemory(64,t),this.wasm.call("ecc_secp256k1__mul",0,64,96),ja.from(this.wasm.getMemorySlice(96,160))}getRandomFr(){return this.wasm.call("ecc_secp256k1__get_random_scalar_mod_circuit_modulus",0),ja.from(this.wasm.getMemorySlice(0,32))}reduce512BufferToFr(e){return this.wasm.writeMemory(0,e),this.wasm.call("ecc_secp256k1__reduce512_buffer_mod_circuit_modulus",0,64),ja.from(this.wasm.getMemorySlice(64,96))}}Xa.generator=ja.from([121,190,102,126,249,220,187,172,85,160,98,149,206,135,11,7,2,155,252,219,45,206,40,217,89,242,129,91,22,248,23,152,72,58,218,119,38,163,196,101,93,164,251,252,14,17,8,168,253,23,180,72,166,133,84,25,156,71,208,143,251,16,212,184]);var Da=r(816).Buffer;class Fa{constructor(e){if(this.buffer=e,e.length!==Fa.SIZE)throw new Error(`Invalid signature buffer of length ${e.length}.`)}static isSignature(e){return/^(0x)?[0-9a-f]{128}$/i.test(e)}static fromString(e){if(!Fa.isSignature(e))throw new Error(`Invalid signature string: ${e}`);return new Fa(Da.from(e.replace(/^0x/i,""),"hex"))}static random(){return new Fa(Er(64))}get s(){return this.buffer.subarray(0,32)}get e(){return this.buffer.subarray(32)}toBuffer(){return this.buffer}static fromBuffer(e){const t=Cr.asReader(e);return new Fa(t.readBytes(Fa.SIZE))}toString(){return`0x${this.buffer.toString("hex")}`}toFields(){const e=this.toBuffer(),t=Da.alloc(32),r=Da.alloc(32),n=Da.alloc(32);return e.copy(t,1,0,31),e.copy(r,1,31,62),e.copy(n,1,62,64),Qr([t,r,n],Wr.fromBuffer)}}Fa.SIZE=64,Fa.EMPTY=new Fa(Da.alloc(64));var Ua=r(816).Buffer;class Qa{static async new(){return new this(await Oa.get())}constructor(e){this.wasm=e}computePublicKey(e){return this.wasm.writeMemory(0,e.toBuffer()),this.wasm.call("schnorr_compute_public_key",0,32),Pr.fromBuffer(Ua.from(this.wasm.getMemorySlice(32,96)))}constructSignature(e,t){const r=this.wasm.call("bbmalloc",e.length+4);return this.wasm.writeMemory(0,t.toBuffer()),this.wasm.writeMemory(r,Ua.concat([Dr(e.length),e])),this.wasm.call("schnorr_construct_signature",r,0,32,64),new Fa(Ua.from(this.wasm.getMemorySlice(32,96)))}verifySignature(e,t,r){const n=this.wasm.call("bbmalloc",e.length+4);this.wasm.writeMemory(0,t.toBuffer()),this.wasm.writeMemory(64,r.s),this.wasm.writeMemory(96,r.e),this.wasm.writeMemory(n,Ua.concat([Dr(e.length),e])),this.wasm.call("schnorr_verify_signature",n,0,64,96,128);const a=this.wasm.getMemorySlice(128,129);return!Ua.alloc(1,0).equals(a)}}var Ka=r(816).Buffer;class Na{constructor(e,t,r){this.address=e,this.publicKey=t,this.partialAddress=r}static async create(e,t,r){const n=Un(await Oa.get(),t,r);if(!n.equals(e))throw new Error(`Address cannot be derived from pubkey and partial address (received ${e.toString()}, derived ${n.toString()})`);return new Na(e,t,r)}static async random(){const e=Wr.random(),t=Pr.random(),r=Un(await Oa.get(),t,e);return new Na(r,t,e)}static async fromPrivateKeyAndPartialAddress(e,t){const r=await Oa.get(),n=new Ia(r).mul(Ia.generator,e),a=Un(r,n,t);return new Na(a,n,t)}toReadableString(){return` Address: ${this.address.toString()}\n Public Key: ${this.publicKey.toString()}\n Partial Address: ${this.partialAddress.toString()}\n`}equals(e){return this.address.equals(e.address)&&this.publicKey.equals(e.publicKey)&&this.partialAddress.equals(e.partialAddress)}toBuffer(){return Ka.concat([this.address.toBuffer(),this.publicKey.toBuffer(),this.partialAddress.toBuffer()])}static fromBuffer(e){const t=Cr.asReader(e);return new this(t.readObject(gn),t.readObject(Pr),t.readObject(Wr))}static fromString(e){return this.fromBuffer(Ka.from(e.replace(/^0x/i,""),"hex"))}toString(){return`0x${this.toBuffer().toString("hex")}`}}function Ga(e){return new Promise((t=>setTimeout(t,e)))}class Va{constructor(){this.start=(new Date).getTime()}ms(){return(new Date).getTime()-this.start}s(){return((new Date).getTime()-this.start)/1e3}}class qa extends Error{}async function _a(e,t="",r=0,n=1){const a=new Va;for(;;){const i=await e();if(i)return i;if(await Ga(1e3*n),r&&a.s()>r)throw new Error(t?`Timeout awaiting ${t}`:"Timeout")}}var $a=r(816).Buffer;class ei{constructor(e,t,r){this.selector=e,this.isInternal=t,this.bytecode=r}toBuffer(){const e=$a.concat([Fr(this.bytecode.length),this.bytecode]);return $r(this.selector,this.isInternal,e)}static fromBuffer(e){const t=Cr.asReader(e),r=Nr.fromBuffer(t.readBytes(4)),n=t.readBoolean();return new ei(r,n,t.readBuffer())}static random(){return new ei(Nr.fromBuffer(Er(4)),!1,Er(64))}}class ti{constructor(e,t,r,n){this.contractData=e,this.publicFunctions=t,this.partialAddress=r,this.publicKey=n,this.bytecode=function(e){const t=Xr.alloc(4);return t.writeUInt32BE(e.length,0),Xr.concat([t,...e])}(t.map((e=>e.toBuffer())))}getPublicFunction(e){return this.publicFunctions.find((t=>t.selector.equals(e)))}toBuffer(){return $r(this.contractData.toBuffer(),this.bytecode,this.partialAddress,this.publicKey)}toString(){return this.toBuffer().toString("hex")}getCompleteAddress(){return new Na(this.contractData.contractAddress,this.publicKey,this.partialAddress)}static fromBuffer(e){const t=Cr.asReader(e),r=t.readObject(ri),n=t.readVector(ei),a=t.readObject(Wr),i=t.readObject(Pr);return new ti(r,n,a,i)}static fromString(e){return ti.fromBuffer($a.from(e,"hex"))}static random(){return new ti(ri.random(),[ei.random(),ei.random()],Wr.random(),Pr.random())}}class ri{constructor(e,t){this.contractAddress=e,this.portalContractAddress=t}toBuffer(){return $r(this.contractAddress,this.portalContractAddress.toBuffer20())}toString(){return this.toBuffer().toString("hex")}static fromBuffer(e){const t=Cr.asReader(e),r=gn.fromBuffer(t),n=new Ln(t.readBytes(Ln.SIZE_IN_BYTES));return new ri(r,n)}static fromString(e){return ri.fromBuffer($a.from(e,"hex"))}static random(){return new ri(gn.random(),Ln.random())}}function ni(){return{to:gn.ZERO,functionData:vn.empty(),args:[]}}function ai(e=1,t=void 0){return new en(si(e),si(e+1),si(void 0!==t?t:e+2),si(e+3))}function ii(e=1){return new tn(si(e),e)}function si(e){return new Wr(BigInt(e))}r(816).Buffer,r(816).Buffer;var ci=r(8517),oi=r(816).Buffer;class fi{constructor(e){this.logs=e}toBuffer(){const e=this.logs.map((e=>Ur(e)));return Ur(oi.concat(e))}getSerializedLength(){return this.logs.reduce(((e,t)=>e+t.length+4),0)+4}hash(){const e=this.toBuffer().subarray(4);return Jr(e)}static fromBuffer(e,t=!0){const r=new Cr(e,0),n=t?r.readNumber():-1,a=r.readBufferArray(n);return new fi(a)}static random(e){const t=[];for(let r=0;r<e;r++){const e=Pr.random(),r=(0,ci.randomBytes)(144-Pr.SIZE_IN_BYTES);t.push(oi.concat([r,e.toBuffer()]))}return new fi(t)}static empty(){return new fi([])}toJSON(){return{logs:this.logs.map((e=>e.toString("hex")))}}static fromJSON(e){const t=e.logs.map((e=>oi.from(e,"hex")));return new fi(t)}}var li=r(816).Buffer;class di{constructor(e){this.functionLogs=e}toBuffer(){const e=this.functionLogs.map((e=>e.toBuffer()));return Ur(li.concat(e))}getSerializedLength(){return this.functionLogs.reduce(((e,t)=>e+t.getSerializedLength()),0)+4}addFunctionLogs(e){this.functionLogs.push(...e)}static fromBuffer(e,t=!0){const r=Cr.asReader(e),n=t?r.readNumber():-1,a=r.readBufferArray(n).map((e=>fi.fromBuffer(e,!1)));return new di(a)}static random(e,t){const r=[];for(let n=0;n<e;n++)r.push(fi.random(t));return new di(r)}toJSON(){return{functionLogs:this.functionLogs.map((e=>e.toJSON()))}}static fromJSON(e){const t=e.functionLogs.map((e=>fi.fromJSON(e)));return new di(t)}}var ui=r(816).Buffer;class hi{constructor(e){this.txLogs=e}toBuffer(){const e=this.txLogs.map((e=>e.toBuffer()));return Ur(ui.concat(e))}getSerializedLength(){return this.txLogs.reduce(((e,t)=>e+t.getSerializedLength()),0)+4}static fromBuffer(e){const t=Cr.asReader(e),r=t.readNumber(),n=t.readBufferArray(r).map((e=>di.fromBuffer(e,!1)));return new hi(n)}static random(e,t,r){const n=[];for(let a=0;a<e;a++)n.push(di.random(t,r));return new hi(n)}static unrollLogs(e){const t=[];for(const r of e)for(const e of r.txLogs)for(const r of e.functionLogs)t.push(...r.logs);return t}toJSON(){return{txLogs:this.txLogs.map((e=>e.toJSON()))}}static fromJSON(e){const t=e.txLogs.map((e=>di.fromJSON(e)));return new hi(t)}}var bi=r(816).Buffer;class pi{constructor(e,t,r,n,a,i,s,c=tn.empty(),o,f,l,d,u,h,b,p,y,m,g,S,L=[],w,v,E){if(this.number=e,this.globalVariables=t,this.startPrivateDataTreeSnapshot=r,this.startNullifierTreeSnapshot=n,this.startContractTreeSnapshot=a,this.startPublicDataTreeRoot=i,this.startL1ToL2MessagesTreeSnapshot=s,this.startHistoricBlocksTreeSnapshot=c,this.endPrivateDataTreeSnapshot=o,this.endNullifierTreeSnapshot=f,this.endContractTreeSnapshot=l,this.endPublicDataTreeRoot=d,this.endL1ToL2MessagesTreeSnapshot=u,this.endHistoricBlocksTreeSnapshot=h,this.newCommitments=b,this.newNullifiers=p,this.newPublicDataWrites=y,this.newL2ToL1Msgs=m,this.newContracts=g,this.newContractData=S,this.newL1ToL2Messages=L,this.blockHash=E,b.length%dn!=0)throw new Error("The number of new commitments must be a multiple of 64.");w&&this.attachLogs(w,mi.ENCRYPTED),v&&this.attachLogs(v,mi.UNENCRYPTED),this.numberOfTxs=Math.floor(this.newCommitments.length/dn)}static random(e,t=4,r=2,n=3,a=2,i=1){const s=cn(un*t,Wr.random),c=cn(dn*t,Wr.random),o=cn(1*t,Wr.random),f=cn(1*t,ri.random),l=cn(16*t,yi.random),d=cn(16,Wr.random),u=cn(2,Wr.random),h=hi.random(t,r,a),b=hi.random(t,n,i);return pi.fromFields({number:e,globalVariables:ai(0,e),startPrivateDataTreeSnapshot:ii(0),startNullifierTreeSnapshot:ii(0),startContractTreeSnapshot:ii(0),startPublicDataTreeRoot:Wr.random(),startL1ToL2MessagesTreeSnapshot:ii(0),startHistoricBlocksTreeSnapshot:ii(0),endPrivateDataTreeSnapshot:ii(c.length),endNullifierTreeSnapshot:ii(s.length),endContractTreeSnapshot:ii(o.length),endPublicDataTreeRoot:Wr.random(),endL1ToL2MessagesTreeSnapshot:ii(1),endHistoricBlocksTreeSnapshot:ii(1),newCommitments:c,newNullifiers:s,newContracts:o,newContractData:f,newPublicDataWrites:l,newL1ToL2Messages:d,newL2ToL1Msgs:u,newEncryptedLogs:h,newUnencryptedLogs:b})}static fromFields(e,t){return new this(e.number,e.globalVariables,e.startPrivateDataTreeSnapshot,e.startNullifierTreeSnapshot,e.startContractTreeSnapshot,e.startPublicDataTreeRoot,e.startL1ToL2MessagesTreeSnapshot,e.startHistoricBlocksTreeSnapshot,e.endPrivateDataTreeSnapshot,e.endNullifierTreeSnapshot,e.endContractTreeSnapshot,e.endPublicDataTreeRoot,e.endL1ToL2MessagesTreeSnapshot,e.endHistoricBlocksTreeSnapshot,e.newCommitments,e.newNullifiers,e.newPublicDataWrites,e.newL2ToL1Msgs,e.newContracts,e.newContractData,e.newL1ToL2Messages,e.newEncryptedLogs,e.newUnencryptedLogs,t)}encode(){if(void 0===this.newEncryptedLogs||void 0===this.newUnencryptedLogs)throw new Error("newEncryptedLogs and newUnencryptedLogs must be defined when encoding L2BlockData");return $r(this.globalVariables,this.startPrivateDataTreeSnapshot,this.startNullifierTreeSnapshot,this.startContractTreeSnapshot,this.startPublicDataTreeRoot,this.startL1ToL2MessagesTreeSnapshot,this.startHistoricBlocksTreeSnapshot,this.endPrivateDataTreeSnapshot,this.endNullifierTreeSnapshot,this.endContractTreeSnapshot,this.endPublicDataTreeRoot,this.endL1ToL2MessagesTreeSnapshot,this.endHistoricBlocksTreeSnapshot,this.newCommitments.length,this.newCommitments,this.newNullifiers.length,this.newNullifiers,this.newPublicDataWrites.length,this.newPublicDataWrites,this.newL2ToL1Msgs.length,this.newL2ToL1Msgs,this.newContracts.length,this.newContracts,this.newContractData,this.newL1ToL2Messages.length,this.newL1ToL2Messages,this.newEncryptedLogs,this.newUnencryptedLogs)}toBuffer(){return this.encode()}static decode(e){const t=Cr.asReader(e),r=t.readObject(en),n=Number(r.blockNumber.value),a=t.readObject(tn),i=t.readObject(tn),s=t.readObject(tn),c=t.readObject(Wr),o=t.readObject(tn),f=t.readObject(tn),l=t.readObject(tn),d=t.readObject(tn),u=t.readObject(tn),h=t.readObject(Wr),b=t.readObject(tn),p=t.readObject(tn),y=t.readVector(Wr),m=t.readVector(Wr),g=t.readVector(yi),S=t.readVector(Wr),L=t.readVector(Wr),w=t.readArray(L.length,ri),v=t.readVector(Wr),E=t.readObject(hi),x=t.readObject(hi);return pi.fromFields({number:n,globalVariables:r,startPrivateDataTreeSnapshot:a,startNullifierTreeSnapshot:i,startContractTreeSnapshot:s,startPublicDataTreeRoot:c,startL1ToL2MessagesTreeSnapshot:o,startHistoricBlocksTreeSnapshot:f,endPrivateDataTreeSnapshot:l,endNullifierTreeSnapshot:d,endContractTreeSnapshot:u,endPublicDataTreeRoot:h,endL1ToL2MessagesTreeSnapshot:b,endHistoricBlocksTreeSnapshot:p,newCommitments:y,newNullifiers:m,newPublicDataWrites:g,newL2ToL1Msgs:S,newContracts:L,newContractData:w,newL1ToL2Messages:v,newEncryptedLogs:E,newUnencryptedLogs:x})}attachLogs(e,t){const r=t===mi.ENCRYPTED?"newEncryptedLogs":"newUnencryptedLogs";if(this[r]){if(this[r]===e)return void pi.logger(`${r} logs already attached`);throw new Error(`Trying to attach different ${r} logs to block ${this.number}.`)}pi.logger(`Attaching ${r} logs`);const n=this.newCommitments.length/dn;if(n!==e.txLogs.length)throw new Error(`Number of txLogs within ${r} does not match number of transactions. Expected: ${n} Got: ${e.txLogs.length}`);this[r]=e}getBlockHash(){return this.blockHash||(this.blockHash=mr(this.encode())),this.blockHash}getPublicInputsHash(){return e=$r(this.globalVariables,this.startPrivateDataTreeSnapshot,this.startNullifierTreeSnapshot,this.startContractTreeSnapshot,this.startPublicDataTreeRoot,this.startL1ToL2MessagesTreeSnapshot,this.startHistoricBlocksTreeSnapshot,this.endPrivateDataTreeSnapshot,this.endNullifierTreeSnapshot,this.endContractTreeSnapshot,this.endPublicDataTreeRoot,this.endL1ToL2MessagesTreeSnapshot,this.endHistoricBlocksTreeSnapshot,this.getCalldataHash(),this.getL1ToL2MessagesHash()),Wr.fromBuffer(br(hr(Jr(e))%Wr.MODULUS,32));var e}getStartStateHash(){const e=$r(new Wr(this.number-1),this.startPrivateDataTreeSnapshot,this.startNullifierTreeSnapshot,this.startContractTreeSnapshot,this.startPublicDataTreeRoot,this.startL1ToL2MessagesTreeSnapshot,this.startHistoricBlocksTreeSnapshot);return Jr(e)}getEndStateHash(){const e=$r(this.globalVariables.blockNumber,this.endPrivateDataTreeSnapshot,this.endNullifierTreeSnapshot,this.endContractTreeSnapshot,this.endPublicDataTreeRoot,this.endL1ToL2MessagesTreeSnapshot,this.endHistoricBlocksTreeSnapshot);return Jr(e)}getCalldataHash(){if(void 0===this.newEncryptedLogs)throw new Error('Encrypted logs has to be attached before calling "getCalldataHash"');if(void 0===this.newUnencryptedLogs)throw new Error('Unencrypted logs has to be attached before calling "getCalldataHash"');const e=this.newCommitments.length/128,t=[];for(let r=0;r<e;r++){const e=128,n=128,a=32,i=4,s=bi.concat(this.newCommitments.slice(r*e,(r+1)*e).map((e=>e.toBuffer()))),c=bi.concat(this.newNullifiers.slice(r*n,(r+1)*n).map((e=>e.toBuffer()))),o=bi.concat(this.newPublicDataWrites.slice(r*a,(r+1)*a).map((e=>e.toBuffer()))),f=bi.concat(this.newL2ToL1Msgs.slice(r*i,(r+1)*i).map((e=>e.toBuffer()))),l=pi.computeKernelLogsHash(this.newEncryptedLogs.txLogs[2*r]),d=pi.computeKernelLogsHash(this.newEncryptedLogs.txLogs[2*r+1]),u=pi.computeKernelLogsHash(this.newUnencryptedLogs.txLogs[2*r]),h=pi.computeKernelLogsHash(this.newUnencryptedLogs.txLogs[2*r+1]),b=bi.concat([s,c,o,f,this.newContracts[2*r].toBuffer(),this.newContracts[2*r+1].toBuffer(),this.newContractData[2*r].contractAddress.toBuffer(),this.newContractData[2*r].portalContractAddress.toBuffer32(),this.newContractData[2*r+1].contractAddress.toBuffer(),this.newContractData[2*r+1].portalContractAddress.toBuffer32(),l,d,u,h]);t.push(Jr(b))}return(e=>{const t=[e];let r=0;for(;t[r].length>1;){const e=[],n=t[r].length;for(let a=0;a<n;a+=2){const n=t[r][a],i=t[r][a+1];e.push(Jr(bi.concat([n,i])))}t.push(e),r++}return t[t.length-1][0]})(t)}getL1ToL2MessagesHash(){const e=bi.concat(this.newL1ToL2Messages.map((e=>e.toBuffer())));return Jr(e)}getTx(e){if(e>=this.numberOfTxs)throw new Error(`Failed to get tx ${e}. Block ${this.globalVariables.blockNumber} only has ${this.numberOfTxs} txs.`);const t=this.newCommitments.slice(dn*e,dn*(e+1)),r=this.newNullifiers.slice(un*e,un*(e+1)),n=this.newPublicDataWrites.slice(16*e,16*(e+1)),a=this.newL2ToL1Msgs.slice(2*e,2*(e+1)),i=this.newContracts.slice(1*e,1*(e+1)),s=this.newContractData.slice(1*e,1*(e+1));return new Li(t,r,n,a,i,s,this.getBlockHash(),this.number)}getTxs(){return Array(this.numberOfTxs).fill(0).map(((e,t)=>this.getTx(t)))}inspect(e=4){const t=t=>`0x${t.toBuffer().subarray(0,e).toString("hex")}`,r=(e,t)=>"["+e.map(t).join(", ")+"]",n=e=>`(${e.nextAvailableLeafIndex}, ${t(e.root)})`,a=e=>r(e,t),i=e=>r(e,(e=>`(${t(e.leafIndex)}, ${t(e.newValue)})`));return["L2Block",`number: ${this.number}`,"globalVariables: "+(c=this.globalVariables,`(${c.chainId}, ${c.version}, ${c.blockNumber}, ${c.timestamp}))`),`startPrivateDataTreeSnapshot: ${n(this.startPrivateDataTreeSnapshot)}`,`startNullifierTreeSnapshot: ${n(this.startNullifierTreeSnapshot)}`,`startContractTreeSnapshot: ${n(this.startContractTreeSnapshot)}`,`startPublicDataTreeRoot: ${this.startPublicDataTreeRoot.toString()}`,`startL1ToL2MessagesTreeSnapshot: ${n(this.startL1ToL2MessagesTreeSnapshot)}`,`startHistoricBlocksTreeSnapshot: ${n(this.startHistoricBlocksTreeSnapshot)}`,`endPrivateDataTreeSnapshot: ${n(this.endPrivateDataTreeSnapshot)}`,`endNullifierTreeSnapshot: ${n(this.endNullifierTreeSnapshot)}`,`endContractTreeSnapshot: ${n(this.endContractTreeSnapshot)}`,`endPublicDataTreeRoot: ${this.endPublicDataTreeRoot.toString()}`,`endPublicDataTreeRoot: ${this.endPublicDataTreeRoot.toString()}`,`endL1ToL2MessagesTreeSnapshot: ${n(this.endL1ToL2MessagesTreeSnapshot)}`,`endHistoricBlocksTreeSnapshot: ${n(this.endHistoricBlocksTreeSnapshot)}`,`newCommitments: ${a(this.newCommitments)}`,`newNullifiers: ${a(this.newNullifiers)}`,`newPublicDataWrite: ${i(this.newPublicDataWrites)}`,`newL2ToL1Msgs: ${a(this.newL2ToL1Msgs)}`,`newContracts: ${a(this.newContracts)}`,`newContractData: ${s=this.newContractData,r(s,(e=>`(${t(e.contractAddress)}, ${t(e.portalContractAddress)})`))}`,`newPublicDataWrite: ${i(this.newPublicDataWrites)}`,`newL1ToL2Messages: ${a(this.newL1ToL2Messages)}`].join("\n");var s,c}static computeKernelLogsHash(e){const t=[bi.alloc(32),bi.alloc(32)];let r=bi.alloc(32);for(const n of e.functionLogs)t[0]=r,t[1]=n.hash(),r=Jr(bi.concat(t));return r}}pi.logger=oa("aztec:l2_block"),oa("aztec:l2_block_downloader");class yi{constructor(e,t){this.leafIndex=e,this.newValue=t}static from(e){return new yi(e.leafIndex,e.newValue)}toBuffer(){return $r(this.leafIndex,this.newValue)}isEmpty(){return this.leafIndex.isZero()&&this.newValue.isZero()}static fromBuffer(e){const t=Cr.asReader(e);return new yi(t.readFr(),t.readFr())}static empty(){return new yi(Wr.ZERO,Wr.ZERO)}static random(){return new yi(Wr.random(),Wr.random())}}var mi,gi=r(816).Buffer;class Si{constructor(e){this.buffer=e,function(e,t,r){if(e[t].length!==r)throw new Error(`Expected ${t} to have length ${r} but was ${e[t].length}`)}(this,"buffer",Si.SIZE)}equals(e){return this.buffer.equals(e.buffer)}isZero(){return this.buffer.equals(gi.alloc(32,0))}toString(){return this.buffer.toString("hex")}toBigInt(){return function(e,t=0,r=32){return{elem:hr(e.subarray(t,t+r)),adv:r}}(this.buffer,0,Si.SIZE).elem}static fromBigInt(e){return new Si(function(e,t=32){return br(e,t)}(e,Si.SIZE))}static fromBuffer28(e){if(28!=e.length)throw new Error("Expected TxHash input buffer to be 28 bytes");const t=gi.concat([gi.alloc(this.SIZE-28),e]);return new Si(t)}static fromString(e){return new Si(gi.from(e,"hex"))}}Si.SIZE=32,Si.ZERO=new Si(gi.alloc(Si.SIZE));class Li{constructor(e,t,r,n,a,i,s,c){this.newCommitments=e,this.newNullifiers=t,this.newPublicDataWrites=r,this.newL2ToL1Msgs=n,this.newContracts=a,this.newContractData=i,this.blockHash=s,this.blockNumber=c,this.txHash=new Si(this.newNullifiers[0].toBuffer())}static fromBuffer(e){const t=Cr.asReader(e);return new Li(t.readArray(dn,Wr),t.readArray(un,Wr),t.readArray(16,yi),t.readArray(2,Wr),t.readArray(1,Wr),t.readArray(1,ri),t.readBytes(32),t.readNumber())}toBuffer(){return $r([this.newCommitments,this.newNullifiers,this.newPublicDataWrites,this.newL2ToL1Msgs,this.newContracts,this.newContractData,this.blockHash,Dr(this.blockNumber)])}static random(){return new Li(cn(dn,Wr.random),cn(un,Wr.random),cn(16,yi.random),cn(2,Wr.random),cn(1,Wr.random),cn(1,ri.random),Wr.random().toBuffer(),123)}}!function(e){e[e.ENCRYPTED=0]="ENCRYPTED",e[e.UNENCRYPTED=1]="UNENCRYPTED"}(mi||(mi={})),r(1240),r(816).Buffer;var wi,vi=r(816).Buffer;class Ei extends on{static fromBuffer(e){const t=Cr.asReader(e);return new Ei(t.readVector(Wr))}static random(){const e=Math.floor(10*Math.random())+1,t=Array.from({length:e},(()=>Wr.random()));return new Ei(t)}toString(){return"0x"+this.toBuffer().toString("hex")}static fromString(e){const t=e.replace(/^0x/,"");return Ei.fromBuffer(vi.from(t,"hex"))}}!function(e){e[e.CONTRACT_TREE=0]="CONTRACT_TREE",e[e.NULLIFIER_TREE=1]="NULLIFIER_TREE",e[e.PRIVATE_DATA_TREE=2]="PRIVATE_DATA_TREE",e[e.PUBLIC_DATA_TREE=3]="PUBLIC_DATA_TREE",e[e.L1_TO_L2_MESSAGES_TREE=4]="L1_TO_L2_MESSAGES_TREE",e[e.BLOCKS_TREE=5]="BLOCKS_TREE"}(wi||(wi={}));var xi=r(816).Buffer;class ki{constructor(e,t,r,n,a,i){if(this.data=e,this.proof=t,this.encryptedLogs=r,this.unencryptedLogs=n,this.enqueuedPublicFunctionCalls=a,this.newContracts=i,this.unencryptedLogs.functionLogs.length<this.encryptedLogs.functionLogs.length)throw new Error(`Number of function logs in unencrypted logs (${this.unencryptedLogs.functionLogs.length}) has to be equal\n        or larger than number function logs in encrypted logs (${this.encryptedLogs.functionLogs.length})`);const s=e?.end.publicCallStack&&(c=e.end.publicCallStack,o=e=>e.isZero(),c.reduce(((e,t)=>o(t)?e:e+1),0));var c,o;if(s&&s>(a?.length??0))throw new Error(`Missing preimages for enqueued public function calls in kernel circuit public inputs (expected\n          ${s}, got ${a?.length})`)}static fromBuffer(e){const t=Cr.asReader(e);return new ki(t.readObject(Pn),t.readObject(Bn),t.readObject(di),t.readObject(di),t.readArray(8,_n),t.readArray(1,ti))}toBuffer(){return $r([this.data,this.proof,this.encryptedLogs,this.unencryptedLogs,this.enqueuedPublicFunctionCalls,this.newContracts])}toJSON(){return{data:this.data.toBuffer().toString("hex"),encryptedLogs:this.encryptedLogs.toBuffer().toString("hex"),unencryptedLogs:this.unencryptedLogs.toBuffer().toString("hex"),proof:this.proof.toBuffer().toString("hex"),enqueuedPublicFunctions:this.enqueuedPublicFunctionCalls.map((e=>e.toBuffer().toString("hex")))??[],newContracts:this.newContracts.map((e=>e.toBuffer().toString("hex")))}}static fromJSON(e){const t=Pn.fromBuffer(xi.from(e.data,"hex")),r=di.fromBuffer(xi.from(e.encryptedLogs,"hex")),n=di.fromBuffer(xi.from(e.unencryptedLogs,"hex")),a=xi.from(e.proof,"hex"),i=e.enqueuedPublicFunctions?e.enqueuedPublicFunctions.map((e=>_n.fromBuffer(xi.from(e,"hex")))):[],s=e.newContracts.map((e=>ti.fromBuffer(xi.from(e,"hex"))));return new ki(t,Bn.fromBuffer(a),r,n,i,s)}getTxHash(){const e=this.data?.end.newNullifiers[0];if(!e)throw new Error("Cannot get tx hash since first nullifier is missing");return Promise.resolve(new Si(e.toBuffer()))}static async getHashes(e){return await Promise.all(e.map((e=>e.getTxHash())))}static clone(e){const t=Pn.fromBuffer(e.data.toBuffer()),r=Bn.fromBuffer(e.proof.toBuffer()),n=di.fromBuffer(e.encryptedLogs.toBuffer()),a=di.fromBuffer(e.unencryptedLogs.toBuffer()),i=e.enqueuedPublicFunctionCalls.map((e=>_n.fromBuffer(e.toBuffer()))),s=e.newContracts.map((e=>ti.fromBuffer(e.toBuffer())));return new ki(t,r,n,a,i,s)}}var Ji,Oi=r(816).Buffer;!function(e){e.DROPPED="dropped",e.MINED="mined",e.PENDING="pending"}(Ji||(Ji={}));class Ci{constructor(e,t,r,n,a,i){this.txHash=e,this.status=t,this.error=r,this.blockHash=n,this.blockNumber=a,this.contractAddress=i}toJSON(){return{txHash:this.txHash.toString(),status:this.status.toString(),error:this.error,blockHash:this.blockHash?.toString("hex"),blockNumber:this.blockNumber,contractAddress:this.contractAddress?.toString()}}static fromJSON(e){const t=Si.fromString(e.txHash),r=e.status,n=e.error,a=e.blockHash?Oi.from(e.blockHash,"hex"):void 0,i=e.blockNumber?Number(e.blockNumber):void 0,s=e.contractAddress?gn.fromString(e.contractAddress):void 0;return new Ci(t,r,n,a,i,s)}}r(816).Buffer;var Ti=r(816).Buffer;class Wi{constructor(e,t){this.requestHash=e,this.witness=t.map((e=>new Wr(e)))}toBuffer(){return $r(this.requestHash,new on(this.witness))}static fromBuffer(e){const t=Cr.asReader(e);return new Wi(t.readFr(),t.readVector(Wr))}toString(){return"0x"+this.toBuffer().toString("hex")}static fromString(e){const t=e.replace(/^0x/,"");return Wi.fromBuffer(Ti.from(t,"hex"))}}class Bi{constructor(e,t){this.args=e,this.hash=t}static getFields(e){return[e.args,e.hash]}static from(e){return new Bi(...Bi.getFields(e))}static async fromArgs(e,t){return new Bi(e,await Nn(t??await Oa.get(),e))}toBuffer(){return $r(new on(this.args),this.hash)}static fromBuffer(e){const t=Cr.asReader(e);return new Bi(t.readVector(Wr),t.readFr())}}var zi=r(816).Buffer;class Pi{constructor(e,t,r,n,a,i){this.origin=e,this.functionData=t,this.argsHash=r,this.txContext=n,this.packedArguments=a,this.authWitnesses=i}toTxRequest(){return new Vn(this.origin,this.functionData,this.argsHash,this.txContext)}static getFields(e){return[e.origin,e.functionData,e.argsHash,e.txContext,e.packedArguments,e.authWitnesses]}static from(e){return new Pi(...Pi.getFields(e))}toBuffer(){return $r(this.origin,this.functionData,this.argsHash,this.txContext,new on(this.packedArguments),new on(this.authWitnesses))}toString(){return this.toBuffer().toString("hex")}static fromBuffer(e){const t=Cr.asReader(e);return new Pi(t.readObject(gn),t.readObject(vn),t.readFr(),t.readObject(Cn),t.readVector(Bi),t.readVector(Wi))}static fromString(e){return Pi.fromBuffer(zi.from(e,"hex"))}}r(816).Buffer;var Ii=r(9467),Ri=r.n(Ii);class Ai{constructor(e,t){this.arc=e,this.txHashPromise=t}async getTxHash(){return await this.txHashPromise}async getReceipt(){const e=await this.getTxHash();return await this.arc.getTxReceipt(e)}async wait(e){const t=await this.waitForReceipt(e);if(t.status!==Ji.MINED)throw new Error(`Transaction ${await this.getTxHash()} was ${t.status}`);return t}async isMined(e){return(await this.waitForReceipt(e)).status===Ji.MINED}async waitForReceipt(e){const t=await this.getTxHash();return await _a((async()=>{const r=await this.arc.getTxReceipt(t);if(r.status===Ji.PENDING)return;if(r.status===Ji.DROPPED)return r;if(!(e?.waitForNotesSync??true))return r;const{blocks:n,notes:a}=await this.arc.getSyncStatus(),i=r.blockNumber;return n>=i&&Ri()(a,(e=>e>=i))?r:void 0}),"isMined",e?.timeout??60,e?.interval??1)}}class Hi{constructor(e){this.rpc=e}async simulate(e={}){const t=this.txRequest??await this.create(e);return this.tx=await this.rpc.simulateTx(t,!e.skipPublicSimulation),this.tx}send(e={}){const t=(async()=>{const t=this.tx??await this.simulate(e);return this.rpc.sendTx(t)})();return new Ai(this.rpc,t)}}class Yi extends Hi{constructor(e,t,r,n){if(super(e),this.wallet=e,this.contractAddress=t,this.functionDao=r,this.args=n,n.some((e=>null==e)))throw new Error("All function interaction arguments must be defined and not null. Received: "+n)}async create(){if(this.functionDao.functionType===lr.UNCONSTRAINED)throw new Error("Can't call `create` on an unconstrained function.");return this.txRequest||(this.txRequest=await this.wallet.createTxExecutionRequest([this.request()])),this.txRequest}request(){return{args:Mr(this.functionDao,this.args),functionData:vn.fromAbi(this.functionDao),to:this.contractAddress}}view(e={}){if(this.functionDao.functionType!==lr.UNCONSTRAINED)throw new Error("Can only call `view` on an unconstrained function.");const{from:t}=e;return this.wallet.viewTx(this.functionDao.name,this.args,this.contractAddress,t)}}class Zi{constructor(e,t,r){this.completeAddress=e,this.abi=t,this.wallet=r,this.methods={},t.functions.forEach((e=>{this.methods[e.name]=Object.assign(((...t)=>new Yi(this.wallet,this.completeAddress.address,e,t)),{get selector(){return Nr.fromNameAndParameters(e.name,e.parameters)}})}))}get address(){return this.completeAddress.address}withWallet(e){return new Zi(this.completeAddress,this.abi,e)}attach(e,t=[]){const r={abi:this.abi,completeAddress:this.completeAddress,portalContract:e};return this.wallet.addContracts([r,...t])}}class Mi extends Zi{static async at(e,t,r){const n=await r.getExtendedContractData(e);if(void 0===n)throw new Error("Contract "+e.toString()+" is not deployed");return new Mi(n.getCompleteAddress(),t,r)}static deploy(e,t,r){return new Di(Pr.ZERO,e,t,r)}static deployWithPublicKey(e,t,r,n){return new Di(e,t,r,n)}}class ji extends Hi{constructor(e,t){super(e),this.wallet=e,this.calls=t}async create(){return this.txRequest||(this.txRequest=await this.wallet.createTxExecutionRequest(this.calls)),this.txRequest}}class Xi extends Ai{constructor(e,t,r){super(t,r),this.abi=e}async deployed(e){return(await this.wait(e)).contract}async wait(e){const t=await super.wait(e),r=await this.getContractInstance(e?.wallet,t.contractAddress);return{...t,contract:r}}getContractInstance(e,t){const r=e??(!!this.arc.createTxExecutionRequest&&this.arc);if(!r)throw new Error("A wallet is required for creating a contract instance");if(!t)throw new Error("Contract address is missing from transaction receipt");return Mi.at(t,this.abi,r)}}class Di extends Hi{constructor(e,t,r,n=[]){super(t),this.publicKey=e,this.arc=t,this.abi=r,this.args=n,this.completeAddress=void 0;const a=r.functions.find((e=>"constructor"===e.name));if(!a)throw new Error("Cannot find constructor in the ABI.");this.constructorAbi=a}async create(e={}){const t=e.portalContract??Ln.ZERO,r=e.contractAddressSalt??Wr.random(),{chainId:n,protocolVersion:a}=await this.rpc.getNodeInfo(),{completeAddress:i,constructorHash:s,functionTreeRoot:c}=await za(this.abi,this.args,r,this.publicKey),o=new On(this.publicKey,s,c,r,t),f=new Cn(!1,!1,!0,o,new Wr(n),new Wr(a)),l={args:Mr(this.constructorAbi,this.args),functionData:vn.fromAbi(this.constructorAbi),to:i.address},d=await Bi.fromArgs(l.args),u=Pi.from({origin:l.to,functionData:l.functionData,argsHash:d.hash,txContext:f,packedArguments:[d],authWitnesses:[]});return this.txRequest=u,this.completeAddress=i,await this.rpc.addContracts([{abi:this.abi,completeAddress:i,portalContract:t}]),this.txRequest}send(e={}){const t=super.send(e).getTxHash();return new Xi(this.abi,this.arc,t)}simulate(e){return super.simulate(e)}}class Fi{constructor(e,t,r){this.abi=e,this.arc=t,this.publicKey=r}deploy(...e){return new Di(this.publicKey??Pr.ZERO,this.arc,this.abi,e)}}async function Ui(e){return function(e,t){e.call("pedersen__init");const r=Xn(e,"abis__compute_message_secret_hash",t,32);return Wr.fromBuffer(r)}(await Oa.get(),e)}function Qi(e){return Is(e,Hr.random(),Hr.random()).waitDeploy()}async function Ki(e){const t=await Na.random();return await e.registerRecipient(t),t}async function Ni(e,t=1){const r=[];for(let n=0;n<t;++n){const t=Is(e,Hr.random(),Hr.random());await t.getDeployMethod().then((e=>e.simulate({contractAddressSalt:t.salt}))),r.push(t)}const n=await Promise.all(r.map((e=>e.deploy())));return await Promise.all(n.map((e=>e.wait({interval:.1})))),Promise.all(r.map((e=>e.getWallet())))}async function Gi(e){const t=await Ia.new();return t.mul(t.generator(),e)}const Vi=async e=>{const t=new URL(`${e}/api/l1-contract-addresses`),r=await _a((async()=>{try{return await(await fetch(t.toString())).json()}catch(e){}}),"isSandboxReady",120,1);return Object.fromEntries(Object.entries(r).map((([e,t])=>[e,Ln.fromString(t)])))};async function qi(e,t){return!!await e.getContractData(t)}var _i=r(233),$i=r.n(_i),es=r(816).Buffer;class ts{constructor(e,t){this.eth=e,this.aztec=t}static async create(e,t){const r=new rs(e),n=new ns(t,await Oa.get(),r);return new ts(r,n)}}class rs{constructor(e,t=oa("aztec:cheat_codes:eth")){this.rpcUrl=e,this.logger=t}async rpcCall(e,t){const r={body:`{"jsonrpc":"2.0", "method": "${e}", "params": ${JSON.stringify(t)}, "id": 1}`,method:"POST",headers:{"Content-Type":"application/json"}};return await(await fetch(this.rpcUrl,r)).json()}async blockNumber(){const e=await this.rpcCall("eth_blockNumber",[]);return parseInt(e.result,16)}async chainId(){const e=await this.rpcCall("eth_chainId",[]);return parseInt(e.result,16)}async timestamp(){const e=await this.rpcCall("eth_getBlockByNumber",["latest",!0]);return parseInt(e.result.timestamp,16)}async mine(e=1){const t=await this.rpcCall("hardhat_mine",[e]);if(t.error)throw new Error(`Error mining: ${t.error.message}`);this.logger(`Mined ${e} blocks`)}async setNextBlockTimestamp(e){const t=await this.rpcCall("evm_setNextBlockTimestamp",[e]);if(t.error)throw new Error(`Error setting next block timestamp: ${t.error.message}`);this.logger(`Set next block timestamp to ${e}`)}async dumpChainState(e){const t=await this.rpcCall("hardhat_dumpState",[]);if(t.error)throw new Error(`Error dumping state: ${t.error.message}`);const r=JSON.stringify(t.result);$i().writeFileSync(`${e}.json`,r,"utf8"),this.logger(`Dumped state to ${e}`)}async loadChainState(e){const t=JSON.parse($i().readFileSync(`${e}.json`,"utf8")),r=await this.rpcCall("hardhat_loadState",[t]);if(r.error)throw new Error(`Error loading state: ${r.error.message}`);this.logger(`Loaded state from ${e}`)}async load(e,t){const r=await this.rpcCall("eth_getStorageAt",[e.toString(),pr(t),"latest"]);return BigInt(r.result)}async store(e,t,r){const n=await this.rpcCall("hardhat_setStorageAt",[e.toString(),pr(t),pr(r,!0)]);if(n.error)throw new Error(`Error setting storage for contract ${e} at ${t}: ${n.error.message}`);this.logger(`Set storage for contract ${e} at ${t} to ${r}`)}keccak256(e,t){const r=pr(t,!0).substring(2)+pr(e,!0).substring(2);return hr(mr(es.from(r,"hex")))}async startImpersonating(e){const t=await this.rpcCall("hardhat_impersonateAccount",[e.toString()]);if(t.error)throw new Error(`Error impersonating ${e}: ${t.error.message}`);this.logger(`Impersonating ${e}`)}async stopImpersonating(e){const t=await this.rpcCall("hardhat_stopImpersonatingAccount",[e.toString()]);if(t.error)throw new Error(`Error when stopping the impersonation of ${e}: ${t.error.message}`);this.logger(`Stopped impersonating ${e}`)}async etch(e,t){const r=await this.rpcCall("hardhat_setCode",[e.toString(),t]);if(r.error)throw new Error(`Error setting bytecode for ${e}: ${r.error.message}`);this.logger(`Set bytecode for ${e} to ${t}`)}async getBytecode(e){return(await this.rpcCall("eth_getCode",[e.toString(),"latest"])).result}}class ns{constructor(e,t,r,n=oa("aztec:cheat_codes:aztec")){this.aztecRpc=e,this.wasm=t,this.eth=r,this.logger=n}computeSlotInMap(e,t){return Wr.fromBuffer(function(e,t){e.call("pedersen__init");const r=Ra(t);return e.writeMemory(0,r),e.call("pedersen_plookup_commit",0,0),Mn.Buffer.from(e.getMemorySlice(0,32))}(this.wasm,[new Wr(e),new Wr(t)].map((e=>e.toBuffer()))))}async blockNumber(){return await this.aztecRpc.getBlockNumber()}async warp(e){const t=(await this.aztecRpc.getNodeInfo()).rollupAddress;await this.eth.setNextBlockTimestamp(e),await this.eth.store(t,1n,BigInt(e)),await this.eth.store(t,2n,BigInt(e))}async loadPublic(e,t){const r=await this.aztecRpc.getPublicStorageAt(e,new Wr(t));if(void 0===r)throw new Error(`Storage slot ${t} not found`);return Wr.fromBuffer(r)}loadPrivate(e,t,r){return this.aztecRpc.getPrivateStorageAt(e,t,new Wr(r))}}const as=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);function is(e,t){if(!e)throw new Error(t)}class ss{constructor(e,t){if(this.toClass=new Map,this.toName=new Map,e)for(const t of Object.keys(e))this.register(t,e[t],"string");if(t)for(const e of Object.keys(t))this.register(e,t[e],"object")}register(e,t,r){is("Buffer"!==e,"'Buffer' handling is hardcoded. Cannot use as name."),is(as(t.prototype,"toString")||as(t.prototype,"toJSON"),`Class ${e} must define a toString() OR toJSON() method.`),is(t.fromString||t.fromJSON,`Class ${e} must define a fromString() OR fromJSON() static method.`),this.toName.set(t,[e,r]),this.toClass.set(e,[t,r])}isRegisteredClassName(e){return this.toClass.has(e)}isRegisteredClass(e){const t=e.prototype.constructor.name;return this.toName.has(e)||this.isRegisteredClassName(t)}toClassObj(e){const t=this.toClass.get(e.type);is(t,"Could not find type in lookup.");const[r,n]=t;return"string"===n&&"string"==typeof e.data?r.fromString(e.data):r.fromJSON(e.data)}toJsonObj(e){const{type:t,encoding:r}=this.lookupObject(e);return{type:t,data:"string"===r?e.toString():e.toJSON()}}lookupObject(e){const t=this.toName.get(e.constructor);if(t)return{type:t[0],encoding:t[1]};const r=this.toClass.get(e.constructor.name);if(r)return{type:e.constructor.name,encoding:r[1]};throw new Error(`Could not find class ${e.constructor.name} in lookup.`)}}function cs(e,t){return JSON.stringify(e,((e,t)=>"bigint"==typeof t?JSON.stringify({type:"bigint",data:t.toString()}):t),t?2:0)}function os(e,t){if(null!==t){if(!t)return t;if("Buffer"===t.type&&"string"==typeof t.data)return Mn.Buffer.from(t.data,"base64");if("bigint"===t.type&&"string"==typeof t.data)return BigInt(t.data);if("string"==typeof t.type){if(e.isRegisteredClassName(t.type))return e.toClassObj(t);throw new Error(`Object ${t.type} not registered for serialisation FROM JSON`)}if(Array.isArray(t))return t.map((t=>os(e,t)));if("object"==typeof t){const r={};for(const n of Object.keys(t))r[n]=os(e,t[n]);return r}return t}}function fs(e,t){if("bigint"==typeof t)return{type:"bigint",data:t.toString()};if(!t)return t;if(t instanceof Mn.Buffer)return{type:"Buffer",data:t.toString("base64")};if(e.isRegisteredClass(t.constructor))return e.toJsonObj(t);if(Array.isArray(t))return t.map((t=>fs(e,t)));if("object"==typeof t){if(function(e){if(null===e)return!1;let t=e,r=0;for(;null!==Object.getPrototypeOf(t);){if(r>=1e3)return!1;t=Object.getPrototypeOf(t),r++}return Object.getPrototypeOf(e)===t}(t)){const r={};for(const n of Object.keys(t))r[n]=fs(e,t[n]);return r}throw new Error(`Object ${t.constructor.name} not registered for serialisation TO JSON`)}return t}r(7902);const ls=oa("json-rpc:json_rpc_client");async function ds(e,t,r,n,a=!1){let i,s;ls("JsonRpcClient.fetch",e,t,"->",r),i=n?await fetch(`${e}/${t}`,{method:"POST",body:cs(r),headers:{"content-type":"application/json"}}):await fetch(e,{method:"POST",body:cs({...r,method:t}),headers:{"content-type":"application/json"}});try{s=await i.json()}catch(e){if(!i.ok)throw new Error(i.statusText);throw new Error(`Failed to parse body as JSON: ${i.text()}`)}if(!i.ok)throw a?new qa(s.error):new Error(s.error);return s}function us(e,t,r){return async(n,a,i,s)=>await async function(e,t="Operation",r=function*(){const e=[1,1,1,2,4,8,16,32,64];let t=0;for(;;)yield e[Math.min(t++,e.length-1)]}(),n=oa("aztec:foundation:retry"),a=!1){for(;;)try{return await e()}catch(e){if(e instanceof qa)throw e;const i=r.next().value;if(void 0===i)throw e;n(`${t} failed. Will retry in ${i}s...`),!a&&n.error(e),await Ga(1e3*i);continue}}((()=>ds(n,a,i,s,t)),"JsonRpcClient request",function*(e){for(const t of e)yield t}(e),r,!0)}function hs(e,t,r,n,a=ds){const i=new ss(t,r);let s=0;const c=async(t,r)=>{const c={jsonrpc:"2.0",id:s++,method:t,params:r.map((e=>fs(i,e)))};ls("JsonRpcClient.request",t,"<-",r);const o=await a(e,t,c,n);if(ls("JsonRpcClient.result",t,"->",o),o.error)throw o.error;if(![null,void 0,"null","undefined"].includes(o.result))return os(i,o.result)};return new Proxy({},{get:(e,t)=>["then","catch"].includes(t)?Reflect.get(e,t):(...e)=>(ls("JsonRpcClient.constructor","proxy",t,"<-",e),c(t,e))})}const bs=(e,t=us([1,2,3],!0))=>hs(e,{CompleteAddress:Na,AztecAddress:gn,TxExecutionRequest:Pi,ContractData:ri,ExtendedContractData:ti,TxHash:Si,EthAddress:Ln,Point:Pr,Fr:Wr,GrumpkinScalar:Hr,NotePreimage:Ei,AuthWitness:Wi},{Tx:ki,TxReceipt:Ci,L2BlockL2Logs:hi},!1,t),ps=JSON.parse('{"name":"EcdsaAccount","functions":[{"name":"compute_note_hash_and_nullifier","functionType":"unconstrained","isInternal":false,"parameters":[{"name":"contract_address","type":{"kind":"field"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"storage_slot","type":{"kind":"field"},"visibility":"private"},{"name":"preimage","type":{"kind":"array","length":5,"type":{"kind":"field"}},"visibility":"private"}],"returnTypes":[{"kind":"array","length":4,"type":{"kind":"field"}}],"bytecode":"","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"constructor","functionType":"secret","isInternal":false,"parameters":[{"name":"signing_pub_key_x","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},{"name":"signing_pub_key_y","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"}],"returnTypes":[],"bytecode":"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","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"entrypoint","functionType":"secret","isInternal":false,"parameters":[{"name":"payload","type":{"kind":"struct","path":"aztec::entrypoint::EntrypointPayload","fields":[{"name":"function_calls","type":{"kind":"array","length":4,"type":{"kind":"struct","path":"aztec::entrypoint::FunctionCall","fields":[{"name":"args_hash","type":{"kind":"field"}},{"name":"function_selector","type":{"kind":"field"}},{"name":"target_address","type":{"kind":"field"}},{"name":"is_public","type":{"kind":"boolean"}}]}}},{"name":"nonce","type":{"kind":"field"}}]},"visibility":"public"}],"returnTypes":[],"bytecode":"","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"is_valid","functionType":"secret","isInternal":false,"parameters":[{"name":"message_hash","type":{"kind":"field"},"visibility":"private"}],"returnTypes":[],"bytecode":"","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"is_valid_public","functionType":"open","isInternal":false,"parameters":[{"name":"message_hash","type":{"kind":"field"},"visibility":"private"}],"returnTypes":[{"kind":"struct","path":"aztec::abi::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::abi::CallContext","fields":[{"name":"msg_sender","type":{"kind":"field"}},{"name":"storage_contract_address","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"field"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_read","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"value","type":{"kind":"field"}}]}}},{"name":"public_call_stack","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"block_data","type":{"kind":"struct","path":"aztec::abi::HistoricBlockData","fields":[{"name":"private_data_tree_root","type":{"kind":"field"}},{"name":"nullifier_tree_root","type":{"kind":"field"}},{"name":"contract_tree_root","type":{"kind":"field"}},{"name":"l1_to_l2_messages_tree_root","type":{"kind":"field"}},{"name":"blocks_tree_root","type":{"kind":"field"}},{"name":"public_data_tree_root","type":{"kind":"field"}},{"name":"global_variables_hash","type":{"kind":"field"}}]}},{"name":"prover_address","type":{"kind":"field"}}]}],"bytecode":"","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"set_is_valid_storage","functionType":"open","isInternal":true,"parameters":[{"name":"message_hash","type":{"kind":"field"},"visibility":"private"},{"name":"value","type":{"kind":"boolean"},"visibility":"private"}],"returnTypes":[{"kind":"struct","path":"aztec::abi::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::abi::CallContext","fields":[{"name":"msg_sender","type":{"kind":"field"}},{"name":"storage_contract_address","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"field"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_read","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"value","type":{"kind":"field"}}]}}},{"name":"public_call_stack","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"block_data","type":{"kind":"struct","path":"aztec::abi::HistoricBlockData","fields":[{"name":"private_data_tree_root","type":{"kind":"field"}},{"name":"nullifier_tree_root","type":{"kind":"field"}},{"name":"contract_tree_root","type":{"kind":"field"}},{"name":"l1_to_l2_messages_tree_root","type":{"kind":"field"}},{"name":"blocks_tree_root","type":{"kind":"field"}},{"name":"public_data_tree_root","type":{"kind":"field"}},{"name":"global_variables_hash","type":{"kind":"field"}}]}},{"name":"prover_address","type":{"kind":"field"}}]}],"bytecode":"","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"}]}'),ys=4;async function ms(e){const t=Wr.random(),r=In(e,ni(),ys),n=[];for(const e of r)n.push(await Bi.fromArgs(e.args));return{payload:{function_calls:r.map(((e,t)=>({args_hash:n[t].hash,function_selector:e.functionData.selector.toField(),target_address:e.to.toField(),is_public:!e.functionData.isPrivate}))),nonce:t},packedArguments:n}}async function gs(e){return function(e,t,r){e.call("pedersen__init");const n=Ra(t);return e.writeMemory(0,n),e.call("pedersen_plookup_compress_with_hash_index",0,0,r),Mn.Buffer.from(e.getMemorySlice(0,32))}(await Oa.get(),Ss(e).map((e=>e.toBuffer())),hn.SIGNATURE_PAYLOAD)}function Ss(e){return[...e.function_calls.flatMap((e=>[e.args_hash,e.function_selector,e.target_address,new Wr(e.is_public)])),e.nonce]}class Ls{constructor(e,t,r=31337,n=1){this.address=e,this.auth=t,this.chainId=r,this.version=n}async createTxExecutionRequest(e){const{payload:t,packedArguments:r}=await ms(e),n=this.getEntrypointAbi(),a=await Bi.fromArgs(Mr(n,[t])),i=Wr.fromBuffer(await gs(t)),s=await this.auth.createAuthWitness(i);return Pi.from({argsHash:a.hash,origin:this.address,functionData:vn.fromAbi(n),txContext:Cn.empty(this.chainId,this.version),packedArguments:[...r,a],authWitnesses:[s]})}getEntrypointAbi(){return{name:"entrypoint",functionType:"secret",isInternal:!1,parameters:[{name:"payload",type:{kind:"struct",path:"aztec::entrypoint::EntrypointPayload",fields:[{name:"function_calls",type:{kind:"array",length:4,type:{kind:"struct",path:"aztec::entrypoint::FunctionCall",fields:[{name:"args_hash",type:{kind:"field"}},{name:"function_selector",type:{kind:"field"}},{name:"target_address",type:{kind:"field"}},{name:"is_public",type:{kind:"boolean"}}]}}},{name:"nonce",type:{kind:"field"}}]},visibility:"public"}],returnTypes:[]}}}class ws{constructor(e,t,r){this.authWitnessProvider=e,this.address=t,this.entrypoint=new Ls(t.address,e,r.chainId,r.protocolVersion)}createTxExecutionRequest(e){return this.entrypoint.createTxExecutionRequest(e)}createAuthWitness(e){return this.authWitnessProvider.createAuthWitness(e)}getCompleteAddress(){return this.address}}class vs{constructor(e){this.abi=e}getContractAbi(){return this.abi}getInterface(e,t){return Promise.resolve(new ws(this.getAuthWitnessProvider(e),e,t))}}class Es extends vs{constructor(e){super(ps),this.signingPrivateKey=e}async getDeploymentArgs(){const e=await Ma.new().then((e=>e.computePublicKey(this.signingPrivateKey)));return[e.subarray(0,32),e.subarray(32,64)]}getAuthWitnessProvider(e){return new xs(this.signingPrivateKey)}}class xs{constructor(e){this.signingPrivateKey=e}async createAuthWitness(e){const t=(await Ma.new()).constructSignature(e.toBuffer(),this.signingPrivateKey);return new Wi(e,[...t.r,...t.s])}}const ks=JSON.parse('{"name":"SchnorrAccount","functions":[{"name":"compute_note_hash_and_nullifier","functionType":"unconstrained","isInternal":false,"parameters":[{"name":"contract_address","type":{"kind":"field"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"storage_slot","type":{"kind":"field"},"visibility":"private"},{"name":"preimage","type":{"kind":"array","length":3,"type":{"kind":"field"}},"visibility":"private"}],"returnTypes":[{"kind":"array","length":4,"type":{"kind":"field"}}],"bytecode":"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","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"constructor","functionType":"secret","isInternal":false,"parameters":[{"name":"signing_pub_key_x","type":{"kind":"field"},"visibility":"public"},{"name":"signing_pub_key_y","type":{"kind":"field"},"visibility":"public"}],"returnTypes":[],"bytecode":"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","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"entrypoint","functionType":"secret","isInternal":false,"parameters":[{"name":"payload","type":{"kind":"struct","path":"aztec::entrypoint::EntrypointPayload","fields":[{"name":"function_calls","type":{"kind":"array","length":4,"type":{"kind":"struct","path":"aztec::entrypoint::FunctionCall","fields":[{"name":"args_hash","type":{"kind":"field"}},{"name":"function_selector","type":{"kind":"field"}},{"name":"target_address","type":{"kind":"field"}},{"name":"is_public","type":{"kind":"boolean"}}]}}},{"name":"nonce","type":{"kind":"field"}}]},"visibility":"public"}],"returnTypes":[],"bytecode":"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","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"is_valid","functionType":"secret","isInternal":false,"parameters":[{"name":"message_hash","type":{"kind":"field"},"visibility":"private"}],"returnTypes":[],"bytecode":"","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"is_valid_public","functionType":"open","isInternal":false,"parameters":[{"name":"message_hash","type":{"kind":"field"},"visibility":"private"}],"returnTypes":[{"kind":"struct","path":"aztec::abi::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::abi::CallContext","fields":[{"name":"msg_sender","type":{"kind":"field"}},{"name":"storage_contract_address","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"field"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_read","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"value","type":{"kind":"field"}}]}}},{"name":"public_call_stack","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"block_data","type":{"kind":"struct","path":"aztec::abi::HistoricBlockData","fields":[{"name":"private_data_tree_root","type":{"kind":"field"}},{"name":"nullifier_tree_root","type":{"kind":"field"}},{"name":"contract_tree_root","type":{"kind":"field"}},{"name":"l1_to_l2_messages_tree_root","type":{"kind":"field"}},{"name":"blocks_tree_root","type":{"kind":"field"}},{"name":"public_data_tree_root","type":{"kind":"field"}},{"name":"global_variables_hash","type":{"kind":"field"}}]}},{"name":"prover_address","type":{"kind":"field"}}]}],"bytecode":"","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"set_is_valid_storage","functionType":"open","isInternal":true,"parameters":[{"name":"message_hash","type":{"kind":"field"},"visibility":"private"},{"name":"value","type":{"kind":"boolean"},"visibility":"private"}],"returnTypes":[{"kind":"struct","path":"aztec::abi::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::abi::CallContext","fields":[{"name":"msg_sender","type":{"kind":"field"}},{"name":"storage_contract_address","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"field"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_read","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"value","type":{"kind":"field"}}]}}},{"name":"public_call_stack","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"block_data","type":{"kind":"struct","path":"aztec::abi::HistoricBlockData","fields":[{"name":"private_data_tree_root","type":{"kind":"field"}},{"name":"nullifier_tree_root","type":{"kind":"field"}},{"name":"contract_tree_root","type":{"kind":"field"}},{"name":"l1_to_l2_messages_tree_root","type":{"kind":"field"}},{"name":"blocks_tree_root","type":{"kind":"field"}},{"name":"public_data_tree_root","type":{"kind":"field"}},{"name":"global_variables_hash","type":{"kind":"field"}}]}},{"name":"prover_address","type":{"kind":"field"}}]}],"bytecode":"","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"}]}');class Js extends vs{constructor(e){super(ks),this.signingPrivateKey=e}async getDeploymentArgs(){const e=await Qa.new().then((e=>e.computePublicKey(this.signingPrivateKey)));return[e.x,e.y]}getAuthWitnessProvider(e){return new Os(this.signingPrivateKey)}}class Os{constructor(e){this.signingPrivateKey=e}async createAuthWitness(e){const t=(await Qa.new()).constructSignature(e.toBuffer(),this.signingPrivateKey).toBuffer();return new Wi(e,[...t])}}const Cs=JSON.parse('{"name":"SchnorrSingleKeyAccount","functions":[{"name":"constructor","functionType":"secret","isInternal":false,"parameters":[],"returnTypes":[],"bytecode":"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","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"entrypoint","functionType":"secret","isInternal":false,"parameters":[{"name":"payload","type":{"kind":"struct","path":"aztec::entrypoint::EntrypointPayload","fields":[{"name":"function_calls","type":{"kind":"array","length":4,"type":{"kind":"struct","path":"aztec::entrypoint::FunctionCall","fields":[{"name":"args_hash","type":{"kind":"field"}},{"name":"function_selector","type":{"kind":"field"}},{"name":"target_address","type":{"kind":"field"}},{"name":"is_public","type":{"kind":"boolean"}}]}}},{"name":"nonce","type":{"kind":"field"}}]},"visibility":"public"}],"returnTypes":[],"bytecode":"","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"is_valid","functionType":"secret","isInternal":false,"parameters":[{"name":"message_hash","type":{"kind":"field"},"visibility":"private"}],"returnTypes":[],"bytecode":"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","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"is_valid_public","functionType":"open","isInternal":false,"parameters":[{"name":"message_hash","type":{"kind":"field"},"visibility":"private"}],"returnTypes":[{"kind":"struct","path":"aztec::abi::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::abi::CallContext","fields":[{"name":"msg_sender","type":{"kind":"field"}},{"name":"storage_contract_address","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"field"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_read","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"value","type":{"kind":"field"}}]}}},{"name":"public_call_stack","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"block_data","type":{"kind":"struct","path":"aztec::abi::HistoricBlockData","fields":[{"name":"private_data_tree_root","type":{"kind":"field"}},{"name":"nullifier_tree_root","type":{"kind":"field"}},{"name":"contract_tree_root","type":{"kind":"field"}},{"name":"l1_to_l2_messages_tree_root","type":{"kind":"field"}},{"name":"blocks_tree_root","type":{"kind":"field"}},{"name":"public_data_tree_root","type":{"kind":"field"}},{"name":"global_variables_hash","type":{"kind":"field"}}]}},{"name":"prover_address","type":{"kind":"field"}}]}],"bytecode":"","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"},{"name":"set_is_valid_storage","functionType":"open","isInternal":true,"parameters":[{"name":"message_hash","type":{"kind":"field"},"visibility":"private"},{"name":"value","type":{"kind":"boolean"},"visibility":"private"}],"returnTypes":[{"kind":"struct","path":"aztec::abi::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::abi::CallContext","fields":[{"name":"msg_sender","type":{"kind":"field"}},{"name":"storage_contract_address","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"field"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_read","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::abi::ContractStorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"value","type":{"kind":"field"}}]}}},{"name":"public_call_stack","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"block_data","type":{"kind":"struct","path":"aztec::abi::HistoricBlockData","fields":[{"name":"private_data_tree_root","type":{"kind":"field"}},{"name":"nullifier_tree_root","type":{"kind":"field"}},{"name":"contract_tree_root","type":{"kind":"field"}},{"name":"l1_to_l2_messages_tree_root","type":{"kind":"field"}},{"name":"blocks_tree_root","type":{"kind":"field"}},{"name":"public_data_tree_root","type":{"kind":"field"}},{"name":"global_variables_hash","type":{"kind":"field"}}]}},{"name":"prover_address","type":{"kind":"field"}}]}],"bytecode":"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","verificationKey":"0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"}]}');class Ts extends vs{constructor(e){super(Cs),this.encryptionPrivateKey=e}getDeploymentArgs(){return Promise.resolve([])}getAuthWitnessProvider({partialAddress:e}){return new Ws(this.encryptionPrivateKey,e)}}class Ws{constructor(e,t){this.privateKey=e,this.partialAddress=t}async createAuthWitness(e){const t=(await Qa.new()).constructSignature(e.toBuffer(),this.privateKey),r=[...(await Gi(this.privateKey)).toFields(),...t.toBuffer(),this.partialAddress];return new Wi(e,r)}}class Bs extends Ai{constructor(e,t){super(e,t),this.wallet=e}async getWallet(e){return(await this.wait(e)).wallet}async wait(e){return{...await super.wait(e),wallet:this.wallet}}}class zs{constructor(e,t,r,n){this.rpc=e,this.encryptionPrivateKey=t,this.accountContract=r,n instanceof Na?this.completeAddress=n:this.salt=n?new Wr(n):Wr.random()}async getEncryptionPublicKey(){return this.encryptionPublicKey||(this.encryptionPublicKey=await Gi(this.encryptionPrivateKey)),this.encryptionPublicKey}async getAccount(){const e=await this.rpc.getNodeInfo(),t=await this.getCompleteAddress();return this.accountContract.getInterface(t,e)}async getCompleteAddress(){if(!this.completeAddress){const e=await Gi(this.encryptionPrivateKey),t=await za(this.accountContract.getContractAbi(),await this.accountContract.getDeploymentArgs(),this.salt,e);this.completeAddress=t.completeAddress}return this.completeAddress}async getWallet(){const e=await this.getAccount();return new Vs(this.rpc,e)}async register(){const e=await this.getCompleteAddress();return await this.rpc.registerAccount(this.encryptionPrivateKey,e.partialAddress),this.getWallet()}async getDeployMethod(){if(!this.deployMethod){if(!this.salt)throw new Error("Cannot deploy account contract without known salt.");await this.register();const e=await this.getEncryptionPublicKey(),t=new Fi(this.accountContract.getContractAbi(),this.rpc,e),r=await this.accountContract.getDeploymentArgs();this.deployMethod=t.deploy(...r)}return this.deployMethod}async deploy(){const e=await this.getDeployMethod(),t=await this.getWallet(),r=e.send({contractAddressSalt:this.salt});return new Bs(t,r.getTxHash())}async waitDeploy(e={}){return await this.deploy().then((t=>t.wait(e))),this.getWallet()}}function Ps(e,t,r,n){return new zs(e,t,new Es(r),n)}function Is(e,t,r,n){return new zs(e,t,new Js(r),n)}function Rs(e,t,r){return new zs(e,t,new Ts(t),r)}function As(e,t,r){return Hs(e,t,new Ts(r))}async function Hs(e,t,r){const n=await e.getRegisteredAccount(t);if(!n)throw new Error(`Account ${t} not found`);const a=await e.getNodeInfo(),i=await r.getInterface(n,a);return new Vs(e,i)}var Ys=r(5465),Zs=r.n(Ys);const Ms=[Hr.fromString("2153536ff6628eee01cf4024889ff977a18d9fa61d0e414422f7681cf085c281"),Hr.fromString("aebd1b4be76efa44f5ee655c20bf9ea60f7ae44b9a7fd1fd9f189c7a0b0cdae"),Hr.fromString("0f6addf0da06c33293df974a565b03d1ab096090d907d98055a8b7f4954e120c")],js=Ms,Xs=[Wr.ZERO,Wr.ZERO,Wr.ZERO],Ds=ks,{SANDBOX_URL:Fs="http://localhost:8080"}={};function Us(e){return Promise.all(Zs()(Ms,js,Xs).map((([t,r,n])=>Is(e,t,r,n).getWallet())))}async function Qs(e){const t=Ms.map(((t,r)=>({account:Is(e,t,js[r],Xs[r]),privateKey:t}))),r=(await Promise.all(t.map((async e=>{const t=await e.account.getDeployMethod();return await t.create({contractAddressSalt:e.account.salt}),await t.simulate({}),t})))).map((e=>e.send()));return await Promise.all(r.map((async(e,r)=>{const n=await t[r].account.getWallet();return e.wait({wallet:n})}))),t}async function Ks(e){for(e=e??bs(Fs);;)try{await e.getNodeInfo();break}catch(e){await Ga(1e3)}}class Ns{constructor(e){this.rpc=e}registerAccount(e,t){return this.rpc.registerAccount(e,t)}registerRecipient(e){return this.rpc.registerRecipient(e)}getRegisteredAccounts(){return this.rpc.getRegisteredAccounts()}getRegisteredAccount(e){return this.rpc.getRegisteredAccount(e)}getRecipients(){return this.rpc.getRecipients()}getRecipient(e){return this.rpc.getRecipient(e)}addContracts(e){return this.rpc.addContracts(e)}getContracts(){return this.rpc.getContracts()}simulateTx(e,t){return this.rpc.simulateTx(e,t)}sendTx(e){return this.rpc.sendTx(e)}getTxReceipt(e){return this.rpc.getTxReceipt(e)}getPrivateStorageAt(e,t,r){return this.rpc.getPrivateStorageAt(e,t,r)}getPublicStorageAt(e,t){return this.rpc.getPublicStorageAt(e,t)}getNoteNonces(e,t,r,n){return this.rpc.getNoteNonces(e,t,r,n)}viewTx(e,t,r,n){return this.rpc.viewTx(e,t,r,n)}getExtendedContractData(e){return this.rpc.getExtendedContractData(e)}getContractData(e){return this.rpc.getContractData(e)}getUnencryptedLogs(e,t){return this.rpc.getUnencryptedLogs(e,t)}getBlockNumber(){return this.rpc.getBlockNumber()}getNodeInfo(){return this.rpc.getNodeInfo()}isGlobalStateSynchronised(){return this.rpc.isGlobalStateSynchronised()}isAccountStateSynchronised(e){return this.rpc.isAccountStateSynchronised(e)}getSyncStatus(){return this.rpc.getSyncStatus()}addAuthWitness(e){return this.rpc.addAuthWitness(e)}}var Gs=r(816).Buffer;class Vs extends Ns{constructor(e,t){super(e),this.account=t}createTxExecutionRequest(e){return this.account.createTxExecutionRequest(e)}async createAuthWitness(e){e=Gs.isBuffer(e)?Wr.fromBuffer(e):e;const t=await this.account.createAuthWitness(e);return await this.rpc.addAuthWitness(t),t}setPublicAuth(e,t){const r=[e,t];return new Yi(this,this.getAddress(),this.getSetIsValidStorageAbi(),r)}getCompleteAddress(){return this.account.getCompleteAddress()}getAddress(){return this.getCompleteAddress().address}getSetIsValidStorageAbi(){return{name:"set_is_valid_storage",functionType:"open",isInternal:!0,parameters:[{name:"message_hash",type:{kind:"field"},visibility:"private"},{name:"value",type:{kind:"boolean"},visibility:"private"}],returnTypes:[]}}}class qs extends Ns{async createTxExecutionRequest(e){if(1!==e.length)throw new Error(`Unexpected number of executions. Expected 1 but received ${e.length}).`);const[t]=e,r=await Oa.get(),n=await Bi.fromArgs(t.args,r),{chainId:a,protocolVersion:i}=await this.rpc.getNodeInfo(),s=Cn.empty(a,i);return Promise.resolve(new Pi(t.to,t.functionData,n.hash,s,[n],[]))}getCompleteAddress(){throw new Error("Method not implemented.")}createAuthWitness(e){throw new Error("Method not implemented.")}}})();var a=n.ge,i=n.Uk,s=n.bG,c=n.xz,o=n.EB,f=n.b7,l=n.cC,d=n.C3,u=n.QT,h=n.ug,b=n.CH,p=n.xq,y=n.vp,m=n.Ag,g=n.g2,S=n.cu,L=n.ed,w=n.Y8,v=n.gB,E=n.jF,x=n.Wi,k=n.W7,J=n.Fr,O=n.mr,C=n.E7,T=n.ah,W=n.N0,B=n.rL,z=n.$h,P=n.pP,I=n.E9,R=n.uG,A=n.lW,H=n.a5,Y=n.GR,Z=n.x6,M=n.Tx,j=n.qd,X=n.f1,D=n.EY,F=n.bH,U=n.N4,Q=n.qx,K=n.o1,N=n.ig,G=n._$,V=n.g$,q=n.Dx,_=n.sn,$=n.es,ee=n.XN,te=n.MA,re=n.ir,ne=n.o2,ae=n.nW,ie=n.C2,se=n.IQ,ce=n.JA,oe=n.FV,fe=n.iL,le=n.kZ,de=n.dH,ue=n.Jz,he=n._v,be=n.qW;export{a as ACCOUNT_MAX_CALLS,i as AccountManager,s as AccountWallet,c as AztecAddress,o as AztecCheatCodes,f as BaseAccountContract,l as BaseWallet,d as BatchCall,u as CheatCodes,h as CompleteAddress,b as Contract,p as ContractBase,y as ContractData,m as ContractDeployer,g as ContractFunctionInteraction,S as DefaultAccountEntrypoint,L as DefaultAccountInterface,w as DeployMethod,v as EcdsaAccountContract,E as EthAddress,x as EthCheatCodes,k as ExtendedContractData,J as Fr,O as GrumpkinScalar,C as INITIAL_SANDBOX_ACCOUNT_CONTRACT_ABI,T as INITIAL_SANDBOX_ENCRYPTION_KEYS,W as INITIAL_SANDBOX_SALTS,B as INITIAL_SANDBOX_SIGNING_KEYS,z as L2BlockL2Logs,P as PackedArguments,I as Point,R as SANDBOX_URL,A as SchnorrAccountContract,H as SentTx,Y as SignerlessWallet,Z as SingleKeyAccountContract,M as Tx,j as TxExecutionRequest,X as TxHash,D as TxReceipt,F as TxStatus,U as buildPayload,Q as computeMessageSecretHash,K as createAccount,N as createAccounts,G as createAztecRpcClient,V as createDebugLogger,q as createRecipient,_ as deployInitialSandboxAccounts,$ as emptyFunctionCall,ee as fileURLToPath,te as flattenPayload,re as generatePublicKey,ne as getEcdsaAccount,ae as getL1ContractAddresses,ie as getSandboxAccountsWallets,se as getSchnorrAccount,ce as getUnsafeSchnorrAccount,oe as getUnsafeSchnorrWallet,fe as getWallet,le as hashPayload,de as isContractDeployed,ue as makeFetch,he as sleep,be as waitForSandbox};