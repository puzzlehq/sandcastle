/* Autogenerated file, do not edit! */
/* eslint-disable */
import { ContractBase, DeployMethod, } from '@aztec/aztec.js';
import { Point } from '@aztec/foundation/fields';
import PrivateTokenAirdropContractAbiJson from '../artifacts/private_token_airdrop_contract.json' assert { type: 'json' };
export const PrivateTokenAirdropContractAbi = PrivateTokenAirdropContractAbiJson;
/**
 * Type-safe interface for contract PrivateTokenAirdrop;
 */
export class PrivateTokenAirdropContract extends ContractBase {
    constructor(
    /** The deployed contract's complete address. */
    completeAddress, 
    /** The wallet. */
    wallet) {
        super(completeAddress, PrivateTokenAirdropContractAbi, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(
    /** The deployed contract's address. */
    address, 
    /** The wallet. */
    wallet) {
        const extendedContractData = await wallet.getExtendedContractData(address);
        if (extendedContractData === undefined) {
            throw new Error('Contract ' + address.toString() + ' is not deployed');
        }
        return new PrivateTokenAirdropContract(extendedContractData.getCompleteAddress(), wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(rpc, initial_supply, owner) {
        return new DeployMethod(Point.ZERO, rpc, PrivateTokenAirdropContractAbi, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public key to derive the address.
     */
    static deployWithPublicKey(rpc, publicKey, initial_supply, owner) {
        return new DeployMethod(publicKey, rpc, PrivateTokenAirdropContractAbi, Array.from(arguments).slice(2));
    }
    /**
     * Returns this contract's ABI.
     */
    static get abi() {
        return PrivateTokenAirdropContractAbi;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpdmF0ZV90b2tlbl9haXJkcm9wLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3R5cGVzL3ByaXZhdGVfdG9rZW5fYWlyZHJvcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBc0M7QUFFdEMsb0JBQW9CO0FBQ3BCLE9BQU8sRUFHTCxZQUFZLEVBR1osWUFBWSxHQUdiLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyxFQUFNLEtBQUssRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBR3JELE9BQU8sa0NBQWtDLE1BQU0sa0RBQWtELENBQUMsU0FBUyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFFMUgsTUFBTSxDQUFDLE1BQU0sOEJBQThCLEdBQUcsa0NBQWlELENBQUM7QUFFaEc7O0dBRUc7QUFDSCxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsWUFBWTtJQUMzRDtJQUNFLGdEQUFnRDtJQUNoRCxlQUFnQztJQUNoQyxrQkFBa0I7SUFDbEIsTUFBYztRQUVkLEtBQUssQ0FBQyxlQUFlLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDakUsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFO0lBQ3BCLHVDQUF1QztJQUN2QyxPQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsTUFBYztRQUVkLE1BQU0sb0JBQW9CLEdBQUcsTUFBTSxNQUFNLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDM0UsSUFBSSxvQkFBb0IsS0FBSyxTQUFTLEVBQUU7WUFDdEMsTUFBTSxJQUFJLEtBQUssQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFFBQVEsRUFBRSxHQUFHLGtCQUFrQixDQUFDLENBQUM7U0FDeEU7UUFDRCxPQUFPLElBQUksMkJBQTJCLENBQUMsb0JBQW9CLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM1RixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQWEsRUFBRSxjQUF5QixFQUFFLEtBQWdCO1FBQzdFLE9BQU8sSUFBSSxZQUFZLENBQ3JCLEtBQUssQ0FBQyxJQUFJLEVBQ1YsR0FBRyxFQUNILDhCQUE4QixFQUM5QixLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FDL0IsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxHQUFhLEVBQUUsU0FBb0IsRUFBRSxjQUF5QixFQUFFLEtBQWdCO1FBQ2hILE9BQU8sSUFBSSxZQUFZLENBQ3JCLFNBQVMsRUFDVCxHQUFHLEVBQ0gsOEJBQThCLEVBQzlCLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxLQUFLLEdBQUc7UUFDbkIsT0FBTyw4QkFBOEIsQ0FBQztJQUN4QyxDQUFDO0NBMkNGIn0=