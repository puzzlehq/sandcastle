/* Autogenerated file, do not edit! */
/* eslint-disable */
import { ContractBase, DeployMethod, } from '@aztec/aztec.js';
import { Point } from '@aztec/foundation/fields';
import SchnorrAccountContractAbiJson from '../artifacts/schnorr_account_contract.json' assert { type: 'json' };
export const SchnorrAccountContractAbi = SchnorrAccountContractAbiJson;
/**
 * Type-safe interface for contract SchnorrAccount;
 */
export class SchnorrAccountContract extends ContractBase {
    constructor(
    /** The deployed contract's complete address. */
    completeAddress, 
    /** The wallet. */
    wallet) {
        super(completeAddress, SchnorrAccountContractAbi, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(
    /** The deployed contract's address. */
    address, 
    /** The wallet. */
    wallet) {
        const extendedContractData = await wallet.getExtendedContractData(address);
        if (extendedContractData === undefined) {
            throw new Error('Contract ' + address.toString() + ' is not deployed');
        }
        return new SchnorrAccountContract(extendedContractData.getCompleteAddress(), wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(rpc, signing_pub_key_x, signing_pub_key_y) {
        return new DeployMethod(Point.ZERO, rpc, SchnorrAccountContractAbi, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public key to derive the address.
     */
    static deployWithPublicKey(rpc, publicKey, signing_pub_key_x, signing_pub_key_y) {
        return new DeployMethod(publicKey, rpc, SchnorrAccountContractAbi, Array.from(arguments).slice(2));
    }
    /**
     * Returns this contract's ABI.
     */
    static get abi() {
        return SchnorrAccountContractAbi;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nobm9ycl9hY2NvdW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3R5cGVzL3NjaG5vcnJfYWNjb3VudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBc0M7QUFFdEMsb0JBQW9CO0FBQ3BCLE9BQU8sRUFHTCxZQUFZLEVBR1osWUFBWSxHQUdiLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyxFQUFNLEtBQUssRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBR3JELE9BQU8sNkJBQTZCLE1BQU0sNENBQTRDLENBQUMsU0FBUyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFFL0csTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsNkJBQTRDLENBQUM7QUFFdEY7O0dBRUc7QUFDSCxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsWUFBWTtJQUN0RDtJQUNFLGdEQUFnRDtJQUNoRCxlQUFnQztJQUNoQyxrQkFBa0I7SUFDbEIsTUFBYztRQUVkLEtBQUssQ0FBQyxlQUFlLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFO0lBQ3BCLHVDQUF1QztJQUN2QyxPQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsTUFBYztRQUVkLE1BQU0sb0JBQW9CLEdBQUcsTUFBTSxNQUFNLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDM0UsSUFBSSxvQkFBb0IsS0FBSyxTQUFTLEVBQUU7WUFDdEMsTUFBTSxJQUFJLEtBQUssQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFFBQVEsRUFBRSxHQUFHLGtCQUFrQixDQUFDLENBQUM7U0FDeEU7UUFDRCxPQUFPLElBQUksc0JBQXNCLENBQUMsb0JBQW9CLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN2RixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQWEsRUFBRSxpQkFBNEIsRUFBRSxpQkFBNEI7UUFDNUYsT0FBTyxJQUFJLFlBQVksQ0FDckIsS0FBSyxDQUFDLElBQUksRUFDVixHQUFHLEVBQ0gseUJBQXlCLEVBQ3pCLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLG1CQUFtQixDQUMvQixHQUFhLEVBQ2IsU0FBb0IsRUFDcEIsaUJBQTRCLEVBQzVCLGlCQUE0QjtRQUU1QixPQUFPLElBQUksWUFBWSxDQUNyQixTQUFTLEVBQ1QsR0FBRyxFQUNILHlCQUF5QixFQUN6QixLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FDL0IsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sS0FBSyxHQUFHO1FBQ25CLE9BQU8seUJBQXlCLENBQUM7SUFDbkMsQ0FBQztDQW1DRiJ9