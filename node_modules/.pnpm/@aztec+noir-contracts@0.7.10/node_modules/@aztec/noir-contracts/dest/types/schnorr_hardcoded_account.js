/* Autogenerated file, do not edit! */
/* eslint-disable */
import { ContractBase, DeployMethod, } from '@aztec/aztec.js';
import { Point } from '@aztec/foundation/fields';
import SchnorrHardcodedAccountContractAbiJson from '../artifacts/schnorr_hardcoded_account_contract.json' assert { type: 'json' };
export const SchnorrHardcodedAccountContractAbi = SchnorrHardcodedAccountContractAbiJson;
/**
 * Type-safe interface for contract SchnorrHardcodedAccount;
 */
export class SchnorrHardcodedAccountContract extends ContractBase {
    constructor(
    /** The deployed contract's complete address. */
    completeAddress, 
    /** The wallet. */
    wallet) {
        super(completeAddress, SchnorrHardcodedAccountContractAbi, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(
    /** The deployed contract's address. */
    address, 
    /** The wallet. */
    wallet) {
        const extendedContractData = await wallet.getExtendedContractData(address);
        if (extendedContractData === undefined) {
            throw new Error('Contract ' + address.toString() + ' is not deployed');
        }
        return new SchnorrHardcodedAccountContract(extendedContractData.getCompleteAddress(), wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(rpc) {
        return new DeployMethod(Point.ZERO, rpc, SchnorrHardcodedAccountContractAbi, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public key to derive the address.
     */
    static deployWithPublicKey(rpc, publicKey) {
        return new DeployMethod(publicKey, rpc, SchnorrHardcodedAccountContractAbi, Array.from(arguments).slice(2));
    }
    /**
     * Returns this contract's ABI.
     */
    static get abi() {
        return SchnorrHardcodedAccountContractAbi;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nobm9ycl9oYXJkY29kZWRfYWNjb3VudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eXBlcy9zY2hub3JyX2hhcmRjb2RlZF9hY2NvdW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNDQUFzQztBQUV0QyxvQkFBb0I7QUFDcEIsT0FBTyxFQUdMLFlBQVksRUFHWixZQUFZLEdBR2IsTUFBTSxpQkFBaUIsQ0FBQztBQUV6QixPQUFPLEVBQU0sS0FBSyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFHckQsT0FBTyxzQ0FBc0MsTUFBTSxzREFBc0QsQ0FBQyxTQUFTLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztBQUVsSSxNQUFNLENBQUMsTUFBTSxrQ0FBa0MsR0FBRyxzQ0FBcUQsQ0FBQztBQUV4Rzs7R0FFRztBQUNILE1BQU0sT0FBTywrQkFBZ0MsU0FBUSxZQUFZO0lBQy9EO0lBQ0UsZ0RBQWdEO0lBQ2hELGVBQWdDO0lBQ2hDLGtCQUFrQjtJQUNsQixNQUFjO1FBRWQsS0FBSyxDQUFDLGVBQWUsRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUU7SUFDcEIsdUNBQXVDO0lBQ3ZDLE9BQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixNQUFjO1FBRWQsTUFBTSxvQkFBb0IsR0FBRyxNQUFNLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMzRSxJQUFJLG9CQUFvQixLQUFLLFNBQVMsRUFBRTtZQUN0QyxNQUFNLElBQUksS0FBSyxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsUUFBUSxFQUFFLEdBQUcsa0JBQWtCLENBQUMsQ0FBQztTQUN4RTtRQUNELE9BQU8sSUFBSSwrQkFBK0IsQ0FBQyxvQkFBb0IsQ0FBQyxrQkFBa0IsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2hHLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBYTtRQUNoQyxPQUFPLElBQUksWUFBWSxDQUNyQixLQUFLLENBQUMsSUFBSSxFQUNWLEdBQUcsRUFDSCxrQ0FBa0MsRUFDbEMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQy9CLENBQUM7SUFDSixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsbUJBQW1CLENBQUMsR0FBYSxFQUFFLFNBQW9CO1FBQ25FLE9BQU8sSUFBSSxZQUFZLENBQ3JCLFNBQVMsRUFDVCxHQUFHLEVBQ0gsa0NBQWtDLEVBQ2xDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxLQUFLLEdBQUc7UUFDbkIsT0FBTyxrQ0FBa0MsQ0FBQztJQUM1QyxDQUFDO0NBMEJGIn0=