import CardGameJson from './card_game_contract.json' assert { type: 'json' };
export const CardGameContractAbi = CardGameJson;
import ChildJson from './child_contract.json' assert { type: 'json' };
export const ChildContractAbi = ChildJson;
import DocsExampleJson from './docs_example_contract.json' assert { type: 'json' };
export const DocsExampleContractAbi = DocsExampleJson;
import EasyPrivateTokenJson from './easy_private_token_contract.json' assert { type: 'json' };
export const EasyPrivateTokenContractAbi = EasyPrivateTokenJson;
import EcdsaAccountJson from './ecdsa_account_contract.json' assert { type: 'json' };
export const EcdsaAccountContractAbi = EcdsaAccountJson;
import EscrowJson from './escrow_contract.json' assert { type: 'json' };
export const EscrowContractAbi = EscrowJson;
import ImportTestJson from './import_test_contract.json' assert { type: 'json' };
export const ImportTestContractAbi = ImportTestJson;
import LendingJson from './lending_contract.json' assert { type: 'json' };
export const LendingContractAbi = LendingJson;
import MultiTransferJson from './multi_transfer_contract.json' assert { type: 'json' };
export const MultiTransferContractAbi = MultiTransferJson;
import NonNativeTokenJson from './non_native_token_contract.json' assert { type: 'json' };
export const NonNativeTokenContractAbi = NonNativeTokenJson;
import ParentJson from './parent_contract.json' assert { type: 'json' };
export const ParentContractAbi = ParentJson;
import PendingCommitmentsJson from './pending_commitments_contract.json' assert { type: 'json' };
export const PendingCommitmentsContractAbi = PendingCommitmentsJson;
import PokeableTokenJson from './pokeable_token_contract.json' assert { type: 'json' };
export const PokeableTokenContractAbi = PokeableTokenJson;
import PriceFeedJson from './price_feed_contract.json' assert { type: 'json' };
export const PriceFeedContractAbi = PriceFeedJson;
import PrivateTokenAirdropJson from './private_token_airdrop_contract.json' assert { type: 'json' };
export const PrivateTokenAirdropContractAbi = PrivateTokenAirdropJson;
import PrivateTokenJson from './private_token_contract.json' assert { type: 'json' };
export const PrivateTokenContractAbi = PrivateTokenJson;
import PublicTokenJson from './public_token_contract.json' assert { type: 'json' };
export const PublicTokenContractAbi = PublicTokenJson;
import SchnorrAccountJson from './schnorr_account_contract.json' assert { type: 'json' };
export const SchnorrAccountContractAbi = SchnorrAccountJson;
import SchnorrHardcodedAccountJson from './schnorr_hardcoded_account_contract.json' assert { type: 'json' };
export const SchnorrHardcodedAccountContractAbi = SchnorrHardcodedAccountJson;
import SchnorrSingleKeyAccountJson from './schnorr_single_key_account_contract.json' assert { type: 'json' };
export const SchnorrSingleKeyAccountContractAbi = SchnorrSingleKeyAccountJson;
import StatefulTestJson from './stateful_test_contract.json' assert { type: 'json' };
export const StatefulTestContractAbi = StatefulTestJson;
import TestJson from './test_contract.json' assert { type: 'json' };
export const TestContractAbi = TestJson;
import TokenBridgeJson from './token_bridge_contract.json' assert { type: 'json' };
export const TokenBridgeContractAbi = TokenBridgeJson;
import TokenJson from './token_contract.json' assert { type: 'json' };
export const TokenContractAbi = TokenJson;
import UniswapJson from './uniswap_contract.json' assert { type: 'json' };
export const UniswapContractAbi = UniswapJson;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXJ0aWZhY3RzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sWUFBWSxNQUFNLDJCQUEyQixDQUFDLFNBQVMsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDO0FBQzdFLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLFlBQTJCLENBQUM7QUFDL0QsT0FBTyxTQUFTLE1BQU0sdUJBQXVCLENBQUMsU0FBUyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFDdEUsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsU0FBd0IsQ0FBQztBQUN6RCxPQUFPLGVBQWUsTUFBTSw4QkFBOEIsQ0FBQyxTQUFTLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztBQUNuRixNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRyxlQUE4QixDQUFDO0FBQ3JFLE9BQU8sb0JBQW9CLE1BQU0sb0NBQW9DLENBQUMsU0FBUyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFDOUYsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUcsb0JBQW1DLENBQUM7QUFDL0UsT0FBTyxnQkFBZ0IsTUFBTSwrQkFBK0IsQ0FBQyxTQUFTLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztBQUNyRixNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyxnQkFBK0IsQ0FBQztBQUN2RSxPQUFPLFVBQVUsTUFBTSx3QkFBd0IsQ0FBQyxTQUFTLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztBQUN4RSxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxVQUF5QixDQUFDO0FBQzNELE9BQU8sY0FBYyxNQUFNLDZCQUE2QixDQUFDLFNBQVMsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDO0FBQ2pGLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLGNBQTZCLENBQUM7QUFDbkUsT0FBTyxXQUFXLE1BQU0seUJBQXlCLENBQUMs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