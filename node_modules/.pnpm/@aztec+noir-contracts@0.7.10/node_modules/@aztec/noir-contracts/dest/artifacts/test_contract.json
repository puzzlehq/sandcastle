{
    "name": "Test",
    "functions": [
        {
            "name": "constructor",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [],
            "returnTypes": [],
            "bytecode": "H4sIAAAAAAAA/9XdVXQUZxyG8U0K1L3B3Z2dlewsGtzdnSzZ4O6pUepO3VtK3al7S6m7u1HqbvS+8x6WQw63vFw8e84ckpuc5wdkd3bnm//3XywW2xHb9SiKjuLoqFH4evf3Nff6vlbh6+qP3d+XFf5MxktTqXwmkQ+SQXk8kc2F6XgqnSsNgzBIh+mKRJhM5sNUmMnmspl4Nkgl80FlOpusjO961K72s+L7+NifnXUgnXUhnfUgnfUhnQ0gnQ0hnY0gnY0hnU0gnU0hnc0gnc0hnS0gnS0hna0gna0hnW0gnW0hne0gne0hnR0gnR0hnZ0gnZ0hnV0gnXFIZwDpTEA6k5DOFKQzDekshXRmIJ0hpDML6ewK6ewG6ewO6ewB6ewJ6ewF6SyDdPaGdPaBdPaFdPaDdPaHdA6AdA6EdA6CdA6GdA6BdA6FdA6DdA6HdI6AdI6EdI6CdI6GdI6BdI6FdI6DdI6HdE6AdE6EdE6CdE6GdE6BdE6FdE6DdE6HdM6AdM6EdM6CdJZDOnOQztmQzgpIZx7SWQnpnAPpnAvpnAfpnA/pXADpXAjpXATpXAzpXALpXArpXAbpXA7pXAHpXAnpXAXpXA3pXAPpXAvpXAfprNpPncV7dcb37REUGc3HQ8zFRvMJEPMBRvOJEHMNo/kkiLmm0XwyxFzLaF4PMdc2mk+BmOsYzRsg5rpG86kQcz2j+TSIub7RfDrE3MBoPgNibmg0nwkxNzKaz4KYGxvNZ0PMTYzmcyDmpkbzuRBzM6P5PIi5udF8PsTcwmi+AGJuaTRfCDG3Mpo3QsytjeaLIOY2RvPFEHNbo/kSiLmd0XwpxNzeaL4MYu5gNF8OMXc0mq+AmDsZzVdCzJ2N5qsg5i5G89UQc9xovgZiDozmayHmhNF8HcScNJqvh5hTRvMNEHPaaN4EMZcazTdCzBmjeTPEHBrNN0HMWaP5Zoi5q9F8C8TczWi+FWLubjTfBjH3MJpvh5h7Gs13QMy9jOY7IeYyo/kuiLm30Xw3xNzHaL4HYu5rNN8LMfczmu+DmPsbzVsg5gFG8/0Q80Cj+QGIeZDR/CDEPNhofghiHmI0PwwxDzWaH4GYhxnNj0LMw43mxyDmEUbz4xDzSKP5CYh5lNH8JMQ82mh+CmIeYzQ/DTGPNZqfgZjHGc3PQszjjeatEPMEo/k5iHmi0bwNYp5kND8PMU82ml+AmKcYzS9CzFON5pcg5mlG88sQ83Sj+RWIeYbR/CrEPNNofg1inmU0vw4xlxvNb0DMOaP5TYh5ttH8FsRcYTS/DTHnjeZ3IOZKo/ldiHmO0fwexDzXaH4fYp5nNH8AMc83mj+EmBcYzR9BzAuN5o8h5kVG8ycQ82Kj+VOIeYnR/BnEvNRo/hxiXmY0fwExLzeav4SYVxjNX0HMK43mryHmVUbzdoh5tdH8DcS8xmjeATGvNZq/hZjXGc3fQcxVRvP3EPOBRvMPEPNBRvOPEPPBRvNPEPMhRvPPEPOhRvMvEPNhRvOvEPPhRvNvEPMRRvPvEPORRvMfEPNRRvOfEPPRRvNfEPMxRvPfEPOxRvM/EPNxRvO/EHOJ0bzTaC4p/Jyigll7QmqPRO0ZqD309H5Q74/0fkHnzzqf1PmVzjf0+qvXIz0/6/lKv7/6/6x/35Jqf5dVhT+1F6j2xtRekdo7UXsJro8O7TW3ITq0F5n25tJeVdq7SXsZaW8f7XWjvV+0F4r2BtFeGdo7QnspbIwOzdrX7HnNYtdscs3q1uxqzXLWbGPN+tXsW82C1WxUzQrV7EzNktwUHZo1uDk6NItOs9k0q0yzuzTLSrOdNOtIs380C0ezYTQrRbNDNEtjS3Ro1oJmD+hefN2brnu1de+y7uXVva2611P3PupeQN0bp3vFdO+U7iXaGh2612RbdOheBK3N11p1rd3WWmat7dVaV6391FpIrQ3UWjmtHdNaKq0t0lobrT3RWgytTdC1el271rVcXdvUtT5d+9K1IF0b0bUCfXauz5K3R4c+a9Rnb/osSp/N6LMKvXfXe1m9t9N7HZ3761xY54Y6V9K5g15L9dqi51o99+h3cWdsz+N/E52hWii5AAA=",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "createL2ToL1MessagePublic",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "secretHash",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "private_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "createNullifierPublic",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "secretHash",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "private_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "emit_unencrypted",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "value",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "private_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "getPortalContractAddress",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "aztec_address",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "H4sIAAAAAAAA/+2dZXBUVxiGNwGCtKW0pcFd67sR2FRDqSt1l4QEKhRKCO7u7u4OLXVvgbpT9xaoO3WH7jucHXYo/3j58cz0zpx5dwNz8zy7m73n3nvOd5qnRSJVE02bIj3RyobHyefldnueER6nbsnn+SGzoy1ycopbZhXHsmMF0ay8wnhuNCe3sEU8Fo/lxnOLsuLZ2cXxnHjLvMK8ltG8WE52caxdbl52u+jOrVrKvqJ7ue1LzuoQzhoQzpoQzloQztoQzjoQzroQznoQzvoQzgYQzoYQzkYQzsYQziYQzqYQzmYQzuYQzsMgnIdDOI+AcB4J4TwKwnk0hPMYCGcUwhmDcGZBOLMhnDkQzlwjp9h0jbF+2F9mom1PtGohq4esEbJmyFoha4esE7JuyHoh64dsELJhyEYhG4dsErJpyGYhm4c8LOThIY8IeWTIo0IeHfKYkNGQsZBZIbND5oTMTdlfi0RrGdl5LVZbesjkz/flexuPMD6DeRDOYyGcx0E4j4dwngDhPBHCeRKEMx/C2QrCeTKEszWE8xQI56kQztMi/r5wlbA/9ffUJ4yHzAt5bMjjQh4f8oSQJ4Y8KWR+yFYhTw7ZOuQpIU8NeVpkV1/09EQ7I7JrXECyL5r8eZnIf8cH7Ol1ju7dFsuMeF/n5HZmyuNKISumeCa3jJTH+SaODP/rFC2XwloxhTnpUznRKkR2nldpa19c2qZTSWlBh9adOpaWFLQtbVVUVFLcpUvqa1Rmt/c0dX/6HWV3+3+pr1/y38pH9vA5yfdIx+gfwrNSHv//IYR+CFP36T7KnB1hHA3PgXCeC+E8D8J5PoSzDYTzAgjnhRDOiyCcF0M4L4FwXgrhvAzCeTmE8woI55UQzqsgnFdDOK+BcF4L4bwOwnk9hLMAwlkI4WwL4SyCcBZDONtBONtDOG+AcN4I4bwJwnkzhLMDhPMWCGdHCGcnCOetEM7OEM4SCGcXCGcphLMrhLMbhLM7hLMHhLMnhLMXhLM3hLMPhLMvhLMfhLM/hHMAhHMghHMQhHMwhHMIhHMohHMYhHM4hHMEhHMkhHMUhHM0hHMMhHMshHMchHM8hHMChHMihHMShHMyhHMKhHMqhHMahHM6hHMGhHMmhHMWhHM2hHMOhHMuhHMehHM+hHMBhHMhhHMRhHMxhHMJhHMphHMZhHM5hHMFhHMlhHMVhHM1hHMNhHPtPuJM340zundbLM3ofBvEOd3ofDvEuYzReR3EuazR+Q6Iczmj850Q5wyj810Q59ONzndDnM8yOt8DcT7b6HwvxPkco/N9EOdzjc73Q5zPMzo/AHE+3+j8IMS5jdH5IYjzBUbnhyHOFxqdH4E4X2R0fhTifLHR+TGI8yVG5/UQ50uNzhsgzpcZnTdCnC83Oj8Ocb7C6PwExPlKo/OTEOerjM5PQZyvNjo/DXG+xuj8DMT5WqPzsxDn64zOz0Gcrzc6Pw9xLjA6vwBxLjQ6vwhxbmt0fgniXGR0fhniXGx03gRxbmd0fgXi3N7o/CrE+Qaj82sQ5xuNzq9DnG8yOr8Bcb7Z6PwmxLmD0fktiPMtRue3Ic4djc7vQJw7GZ3fhTjfanR+D+Lc2ej8PsS5xOj8AcS5i9H5Q4hzqdH5I4hzV6PzZohzN6PzFohzd6PzVohzD6PzxxDnnkbnTyDOvYzOn0KcexudP4M49zE6fw5x7mt0/gLi3M/o/CXEub/R+SuI8wCj89cQ54FG528gzoOMzt9CnAcbnb+DOA8xOn8PcR5qdN4GcR5mdP4B4jzc6PwjxHmE0fkniPNIo/PPEOdRRudfIM6jjc6/QpzHGJ1/gziPNTr/DnEeZ3T+A+I83uj8J8R5gtH5L4jzRKPz3xDnSUbnfyDOk43O2yHOU4zOOyDOU43OKrZHcJ5mdE6DOE83OqdDnGcYnctAnGcanctCnGcZnctBnGcbnTMgznOMzuUhznONzhUgzvOMzhUhzvONzpUgzguMzvtBnBcanfeHOC8yOh8AcV5sdK4McV5idD4Q4rzU6FwF4rzM6HwQxHm50flgiPMKo/MhEOeVRueqEOdVRudDIc6rjc6ZEOc1RudqEOe1RufqEOfyRucaEOcKRueaEOeKRudaEOdKRufaEOf9jM51IM77G53rQpwPMDrXgzhXNjrXhzgfaHRuAHGuYnRuCHE+yOjcCOJ8sNG5McT5EKNzE4hzVaNzU4jzoUbnZkbnzLCftOCsNSG1RqLWDNQaejof1PmRzhfUf1Z/Uv0r9Td0/NXxSN/P+r7S368+z3p/5ZuZ8nr2Cqn1QLU+5rpE0/qJWk9Q6+tpvTmtv6b1yLQ+l9ar0vpNWs9I6/tovRut/6L1ULQ+yPpE25BoGxNN6wuo3r7qz6seu+qTq1636lernrPqG6ver+rfqh6s6qNuSjTVz1Q9SdVXVL1B1d9TPTrVZ1O9MtXvUj0r1XdSvSPV/1E9HNWH2ZxoWxJta6KpvoTqLaj+gObja3665mtr/rLm82p+q+Z7av6j5gNqfty2RNP8Kc0n0vwazTfR/AvNR9D4fI1X1/htjWfW+F6Nd9X4T42H3BHeMI0f03gqjS/SeBuNP9F4DI1P0P163b/W/Vzd39T9Pt3/0v0g3R/R/QJdP9f1ZF1f1fVGXX/T9Shdn9H1Cp2/63xW53c631H/X/1h9Q/VX1L/QcdTHV/0favvH/09Nkvb9b7/C2NxqFH+3AAA",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "getPublicKey",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "address",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "getRandom",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [
                {
                    "name": "kindaSeed",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "field"
                }
            ],
            "bytecode": "H4sIAAAAAAAA/81USw4CIQwtn2GsJl7AhVfAG7DyAN7AZCbGxM/G+8chA+aJdTVM9CWkpQX6WgqGiBSNMKAjsi0k6adhp+qd5ZGvBn2bJBf2CAd6qMTD1a+Tb4ArC3muh7ES7HGPmeHOSKgbQSzkon7Mhemzl2M9N+C39F43hv1WWIc5NTPkhHECzHOsJXCwf8BFF1zQr8GPd+KKdfg+s68dxoLG/o449Y/D8dbdr/tzf+m+vfh8mil8LDBpSfjpQpJ+Gl7tiQGUQPgJCsBC+3sFAAA=",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "getThisAddress",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "getThisPortalAddress",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "isTimeEqual",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "time",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "private_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "H4sIAAAAAAAA/+2diZcURdbFM2m2JAERFFBQEvcN7U5wX2j3fVcWFVABERABFVABV9xFBRH3hcYFZ0B0nGHmm29WcWb+rXmRFXf6VpjmOX18MU2deXHOPRVLV9z7e5Fd3RRZ8GmSJGnSal2i8clPG9Z7/WP3L2s9qd5e3TFzDumQnF0dknNoh+Qc1iE5h3dIzhEdknNkh+TMOiTnqA7JmXdIztEdknNMh+Qc2yE5D+uQnOM6JOfhHZJzvGLOyZRzgn88wj8e6R8n+sdJ/hHPOcqzDfXjo0VTRFNFx/g1FOJY0TRRIZouOk50vOgE0Ymik0Qni04RnSo6TXS66AzRDNGZorP8fj2iUjRTNEt0tugc0bmi80Tniy4QXSi6SHSx6BLRbF+3S0WXiS4XXSG6UnSV6GrRNaJrRdeJrhfdILrRsxSe5SbRzaJbRLeKbhPdLrpDdKdojmiuaJ5ovugu0d2ie0QLRAtFi0T3iu4T3S9aLFoiWip6QLRM9KBouWiFaKXoIdGqoOYPi1aL1ojW+rVxfu0R0aOix0TrROtFG0SPi54QPSnaKNok2ix6SvS06BnRs8Fez4meF20RvSB6UfSS6GXRK6JXRa+JXhdtFb0helP0lmib32uI32u76O1gbofoHd/f6R/f9Y/v+cf3/eMH/vFD//iRf/zYP36S9Lc/jmw9ut+NcH0fnvTP4c+142gO64fRHNbH0hzWx9Ac1kfTHNZzmsP6KJrjdTxifSTNYX0EzWF9OM1hfRjNYX0ozWG9i+awPoTmsJ7SHNaTwN+1Xv/Y/Qvb8ET9NbTbMZ9JHEkNL7//EfIOranLsJr68Xlgnc8N63y+vI5HrPP1gnW+brDO1x/W+TrFOl/PWOfrHuv8/YF1/j7C+niaw/oEmsP6ETSH9SNpDusTaQ7rk2gO65NpDutHJf2Mw+n5vf6x+5e1knOipcG4l/rwH04ZNbNMHECWSZRlsm6W6s+hqP0R5HO0sk9KPtgXY3jllGFyxCx5jXcMnyxgdq3pnDnLFN0s1a92U8kLuaZQ7bE+gXJMVa5JSp7YF2N4ZTQ3cZCz5JThKJrD1x0dL1+ZBflca7p+plKWY1Wz9HS7LMcMIMuxlGWaapbW7xiF8p5uj+mUH6zIntN6QWzTdXNU1+S0pL2mGE8n30LX1/gT4zd+4zd+4zd+4zd+4zd+4zd+4z/U+DOamzLIWfi9oGOiZenpzpP660CZuTur8XF/P7KHPI9XZnN1Po72LygDvLroa7aN6M+118+5v0s5wff5mjhRNWu52O15suqerff5TkraWxqMe6l/MvGdopqlp9v9XdMIqiX2Rx2RcwhlKFQztF6LTiNeeMLHnfWpvo+vy6iPNXd9/IFynqGbszq305P21nRuZ1DWGb5/OuU7Uzdf9fo1I8iCMbxyyjAkYpa8xjuCT5kFzK41nQn/vfJZvj+D8nUr1yElH+yLMby4Vl0Rs+Q13hF8yixgdq3pTODvntfj+2dRvlK5Din5YF+M4cW1GhoxS17jHcGnzAJm15rOBP7ueTN9v4fyzVKuQ0o+2BdjeHGthkXMktd4R/Aps4DZtaYzgb973tm+P5PynaNch5R8sC/G8MqDDLGy5DXeEXzKLGB2relM4O+ed67vn035zlOuQ0o+2BdjeHGtRkTMktd4R/Aps4DZtaYzgb973vm+fy7lu0C5Din5YF+M4cW1GhkxS17jHcGnzAJm15rOBP7ueRf6/vmU7yLlOqTkg30xhhfXKouYJa/xjuBTZgGza01nchGxX+z7F1K+S5TrkJIP9sUYXlyrURGz5DXeEXzKLGB2relM4O+eN9v3L6Z8vcp1SMkH+84OPLhWecQseY13BJ+Sa4vWdCbou+dd6vuzKd9lynVIyQf7YgwvrtXoiFnyGu8IPmUWMLvWdCbwd8+73PcvpXxXKNchJR/sizG8uFZjImbJa7wj+JRZwOxa05nA3z3vSt+/nPJdpVyHlHywL8bw4lqNjZglr/GO4FNmAbNrTWcCf/e8q33/Ssp3jXIdUvLBvhjDi2t1WMQseY13BJ8yC5hdazoT+LvnXev7V1O+65TrkJIP9sUYXlyrcRGz5DXeEXzKLGB2relM4O+ed73vX0v5blCuQ0o+2BdjeHGtDo+YJa/xjuBTZgGza01nAn/3vBt9/3rKd5NyHVLywb4Yw4trNT5ilrzGO4JPmQXMrjWdCfzd8272/Rsp3y3KdUjJB/tiDC+u1WkRs+Q13hF8yixgdq3pTDjLbRGy3DqALLdRljsiZLl9AFnuoCxzVLPMrO6buHMAWeZQlrmqWeJ9PmYe5Qcrsue0XhDbPN0c1ff/3KS9phjPI99C19f4E+M3fuM3fuM3fuM3fuM3fuM3fuM3fuM3fuM3fuM3fuMvjN/4jd/4jd/4jd/4jd/4jd/4jd/4jd/4jd/4jd/4jd/4jd/4lfkzmrt9kLPklOHOaFlmVv8+Zt11oMxcZgGza2kw7qV+zGvSZZnv95pLPnfp+lTnPD/gwxheXP8iYpa8xjuCT5kFzK41nTNnuUc1S1md890DyHIPZVmgmiXeZ4sWUn6wIntO6wWxLdTNUV3nC5L2mmK8kHwLXV/jT4zf+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I2/MH7jN37jN37jN37j/y/zZzQ3f5Cz8L0gd0fLUlb3FtVdB8rMZRYwu5YG417qx7wmXZZFfq8F5HOvrk91zosCPozhxfUvImbJa7wj+JRcW7Smc76Xstyvm2WWy3LfALLcT1kW62aJdm/REsoPVmTPab0gtiW6OarrfHHSXlOMl5Bvoetr/Inxdwp/RnOLBjkL/yy4L16WWXlSfx0o+5RZwOxa0+t8zGvSZVnq91pMPg/o+lTnvDTgwxheXP8iYpa8xjuCT5kFzK41nTNneVA1S091zssGkOVByrJcNUu83y1WUH6wIntO6wWxrdDNUV3ny5P2mmK8gnwLXV/jT4zf+I3f+I3f+I3f+I3f+I3f+I3/UOPPaG7pIGfh94KWRcvSU/29Zd11oMxcZgGza03v88S8Jl2WlX6v5eTzkK5Pdc4rAz6M4cX1LyJmyWu8I/iUWcDsWtM5c5aHVbO03ltcNYAsD1OW1apZ4r23uIbygxXZc1oviG2Nbo7qOl+dtNcU4zXkW+j6Gn9i/MZv/MZv/MZv/MZv/MZv/MZv/Icaf0ZzKwc5C78XtCpaltZ7i3XXgTJzmQXMrjW9zxPzmnRZ1vq9VpPPI7o+1TmvDfgwhhfXv4iYJa/xjuBTZgGza03nzFkei5Dl0QFkeYyyrNPNEu29xfWUH6zIntN6QWzrdXNU1/m6pL2mGK8n30LXt6P4M5pbO8hZ+LXg0XhZyjypvw60fbKA2bWm7/OY16TLssHvtY58Htf1qc55Q8CHMby4/kXELHmNdwSfMguYXWs6Z87yZIQsTwwgy5OUZaNulmg/WzZRfrAie07rBbFt0s1RXecbk/aaYryJfAtd347iz2huwyBn4deCJ+JlqX621F0H2j5ZwOxa0/d5zGvSZdns99pIPk/p+lTnvDngwxheXP8iYpa8xjuCT5kFzK41nTNnKXSzVOf8tN9rM/k8o1zblHywL8bw4voXEbPkNd4RfEquLVrTOT/jH93znvX9pynfc8p1SMkH+2IML67VyIhZ8hrvCD5lFjC71nQm8HfPe973n6V8W5TrkJIP9sUYXlyrLGKWvMY7gk+ZBcyuNZ3JFmJ/wfefp3wvKtchJR/sizG8uFajImbJa7wj+JRZwOxa05nA3z3vJd9/gfK9rFyHlHywL8bw4lrlEbPkNd4RfMosYHat6Uzg7573iu+/RPleVa5DSj7YF+NX6RyQYXTELHmNdwSfMguYXWs6E/i7573m+69QvteV65CSD/bFGF5cqzERs+Q13hF8yixgdq3pTODvnrfV91+jfG8o1yElH+yLMby4VmMjZslrvCP4lFnA7FrTmXCWQjdL9WeeN/1eW8nnLeXapuSDfTGGF9e/iJglr/FOaG6oaLzvT/CPXbS+f2jrcUycfLP4TNCaro+3qFbbdLNU78dtT35aI/jktD6BcmzXzVFdP9sCfoy3k2+h6zsg/sL4jX8Q+TOau3mQs+SU4c14Wap//6vuOpiszMy1vfUQqC0yTI6Y5edqq32GWcDsWtPPO87ytm6W6vt9B3kh19tUe6zzz7sdyrVPyRP7YryDfAtd3wHxF8Zv/IPMr+s7s/rzEPu61vRaxFneUc0S7/6CnZQfrMie03pBbDt1c1Tn+07SXlOMd5Jvoetr/InxG39/M37jN37jN37jN37jN37jN37jN37jL4zf+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I1fjV/Xt6w+38C+rqXBuJf6nOVd1SzxPt/wHuUHK7LntF4Q23u6OarzfTdprynG75Fvoetr/InxG7/xG7/xG7/xG7/xG7/xG7/xG7/xG7/xG7/xG7/xF8Zv/MZv/MZv/MZv/IPAr+xb/Vuy7OtaGox7qc9Z3tfNEu3+hg8oP1iRPaf1gtg+0M1Rne/7SXtNMf6AfAtdX+NPjL+T+HV9e6r7t9jXtabXN87yoWqWeK9vH1F+sCJ7TusFsX2km6M63w+T9ppi/BH5Frq+xp8Yv/Ebv/Ebv/Ebv/Ebv/Ebv/Eb/6HIr+vben+DfV1ren+Ds3ysmiXe+xufUH6wIntO6wWxfaKbozrfj5P2mmL8CfkWur7Gnxi/8Ru/8Ru/8Ru/8Ru/8Ru/8Rv/ociv7Ftmga9rTe9vcJZPdbNEe3/jM8oPVmTPab0gts90c1Tn+2nSXlOMPyPfQte34/iVfavrm31da7q+P6Msu3SzRLu++yg/WJE9p/WC2Pp0c1TnuytprynGfeRb6Pr+z/PH2DOj7EP8Y0YcXTS32/eH0tznvj+M5r6gGmDuS98fQXNf+f5pNLfH97fR3Ne+/zbN/cr336G5X/v+uzS31/ffp7l9vv8hzX3j+x/T3H7f/5TmvvX9gua+8/2RNPcb6uPxe98fRXO/9f2c5n7n+6Np7oDvj6G53/v+WJr7Q00+nOsumsO59tEcznU3zeFcP6c5nOsXNIdz/ZLmUI+vaA712ENzqMfXNId6/IrmUI9f0xzqsZfmUI99NHeY739Dc+N8fz/NHe7739LceN//juYm+D6f8xG+/z3NHen7v6W5ib7/O5qb5PsHaG6y7/+e5o7yfZyzq/tw+ppe/9j9y1rJ1xJa089S+Md6jToQcA+n+in5VK/rBwI+jOGVJz/9HouRJa/x1vcpu5l5iGeaFvjy69QByvIbZWaX5XvavyBfeHXR1/T5Fx33urVsZP/zvtXNVfJrPFrT98K3xPCNapbWv6G6fwBZvqEs+1SzxPsddy/lByuy57ReENte3RzVtbgvaa8pxnvJt9D1Nf7E+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I3f+I3f+AvjN37jN37jN37jN/7/Mj/fS/fdIGfJKcP+aFnK7jypvw6mq/q07nmCD/Z297ncRve5xLgXKLy2kQFeXfQ1W0b255rj++5ePtyfx9fEibpZF7s9v1bds3WfD+43REuDcS/1vya+PcpnMTpp3duHWmJ/1BE5h1CGQjVD67XoS+KFJ3zcWePeTr7vE32+V+8L3WzVawJn66UxvPheva8iZslrvPmetFG0PoVq90VNnXarZmv9mya4dxet6ZreTVl2qWbprl5f/o/27yUP9v2jrm8P+6Ze8MB8F/Ufx43L9HWu4QyR2Z1hX83Xcf/z4Dk5rfdFZt5FOXppDC93ja4i1r6a3NMoN9b5/v7JEXLvphwFZYAXfz5hCmVRvl6rLH1BDTHm85wS1Ew/S093XuOdUW34sxl7KEeM3xGQY0jy8/cLIyO+lr8HE/88fA3fpx9+X8a6z/j/af+CfPk+Y3zNVvo95wC9pv/Jr/PvOTG+H/78M1kn0/xfI/j+xe/lPgPCOf5KNcLX7PB1GePz/F05j7s2/pa0t6afY3+n2vygm6X6veggef3NP8Inp/UJlOOgck1S8sS+GHO+H2qy4hpy1/Ffgq/Tz9q6b51zuNZ0fgcpyz9Us7R+D/kn7d9LHuz7L13fHvbF7yHwwHwX9ffRz+Z/9Xf/87qDzO4Mf6z5Ou7/EDwnp/UfIzP/g3L00hhe7nW1j1h/rMnN739gHdetu7Zwbvxa/GMEloMBy8EgM78P8UO0LK33IUJv/vkU62cR8xd0Lvy7GeYOUi68bxF+z6uFw4f0nIH7xaTLGw/zxXB/mB6Z9H/g0BXQ/SHb/cByHxh0HxB0Hwh0HwAcT/le94/uhdx9wM99oM99gG+Sh3YfyDs6af0SOFV0jOjYpPVLUZG03rw5TnS86ISk9Qf4k0Qni04RnZq0PgB7uugM0QzRmaKzXE1EPaJSNFM0S3S26BzRuaLzROeLLhBdKLpIdLHoEtFsX9tLRZeJLhddIbpSdJXoatE1omtF14muF90gulF0k+hm0S2iW93hiW4X3SG6UzRHNFc0TzRfdJfobtE9ogWihaJFontF94nuFy0WLREtFT0gWiZ6ULRctEK0UvSQaJXoYdFq0RrRWtEjokdFj4nWidaLNogeFz0helK0UbRJtFn0lOhp0TOiZ0XPiZ4XbRG9IHpR9JLoZdEroldFryWts94qekP0puitpPVB5O1J68PHO5LWB453Jq0PGbv/wMl9sNj9Ryfuw8TuHwR1HyDmf2Tk32nbgG/htwEA",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "testCodeGen",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "aField",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "aBool",
                    "type": {
                        "kind": "boolean"
                    },
                    "visibility": "private"
                },
                {
                    "name": "aNumber",
                    "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                    },
                    "visibility": "private"
                },
                {
                    "name": "anArray",
                    "type": {
                        "kind": "array",
                        "length": 2,
                        "type": {
                            "kind": "field"
                        }
                    },
                    "visibility": "private"
                },
                {
                    "name": "aStruct",
                    "type": {
                        "kind": "struct",
                        "path": "Test::DummyNote",
                        "fields": [
                            {
                                "name": "amount",
                                "type": {
                                    "kind": "field"
                                }
                            },
                            {
                                "name": "secretHash",
                                "type": {
                                    "kind": "field"
                                }
                            }
                        ]
                    },
                    "visibility": "private"
                },
                {
                    "name": "aDeepStruct",
                    "type": {
                        "kind": "struct",
                        "path": "Test::DeepStruct",
                        "fields": [
                            {
                                "name": "aField",
                                "type": {
                                    "kind": "field"
                                }
                            },
                            {
                                "name": "aBool",
                                "type": {
                                    "kind": "boolean"
                                }
                            },
                            {
                                "name": "aNote",
                                "type": {
                                    "kind": "struct",
                                    "path": "Test::DummyNote",
                                    "fields": [
                                        {
                                            "name": "amount",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "secretHash",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "name": "manyNotes",
                                "type": {
                                    "kind": "array",
                                    "length": 3,
                                    "type": {
                                        "kind": "struct",
                                        "path": "Test::DummyNote",
                                        "fields": [
                                            {
                                                "name": "amount",
                                                "type": {
                                                    "kind": "field"
                                                }
                                            },
                                            {
                                                "name": "secretHash",
                                                "type": {
                                                    "kind": "field"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "H4sIAAAAAAAA/+XdZXBUVxjG8U1wd7cgCQ67EdjgTnF3DwR3d3d3d5cKdW+BulP3Fqg7dac9z3AySfOVNx/+0515581mws7zY5Pds/fec05MRCCQzZVuapGuMvuvU+5nSXc/a7r7xdLdL+4qyv+7gP+ebiVclUzzc2X91ymPn9X/XHlXFVxVdFXJVbSrmMB/bz5yoInvccE68fHJdWOTQ3GhIcHYxKRwQjA+IalOOBQOJYQThsWG4+KSw/HhuolJiXWDiaH4uOTQ8ITEuOHB67fKaR4reIO3jMxZBZKzKiRnNUjO6pCcNSA5a0Jy1oLkrA3JGYTkDEFyxkJyxkFyxkNyJhjmTBn7RfnHK+rqWuD6uFK9uO8lfC/peynfS/texveyvpfzPcr38r5X8L2i75V8j/Y9xvfKvlfxvarv1Xyv7nsN32v6Xsv32r4HfQ/5Hut7nO/xviekebw6ruoGro+NIwOpY+iU72fkcxsOMH4HEyE560Fy1ofkbADJ2RCSsxEkZ2NIziaQnE0hOZtBcjaH5GwBydkSkrNVwH4snN8/nsZ7GhOGfU/0vZ7v9X1v4HtD3xv53tj3Jr439b2Z7819b+F7S99bBVLHoq1d3RS4PhbNFEgdi6Z8PyP/b9tAfgfaQnK2g+RsD8nZAZKzIyRnJ0jOzpCcXSA5u0JydoPk7A7J2QOSsyckZy9Izt6QnH0gOftCcvaD5OwPyTkAknMgJOcgSM7BkJxDIDmTIDmHQnIOg+RMhuQcDsk5ApJzJCTnKEjO0ZCcYyA5x0JyjoPkHA/JOQGScyIk5yRIzsmQnFMgOadCck6D5JwOyTkDknMmJOcsSM7ZkJxzIDnnQnLOg+ScD8m5AJJzISTnIkjOxZCcSyA5l0JyLoPkXA7JuQKScyUk5ypIztWQnGsgOddCcq6D5FwPybkBknMjJOcmSM7NkJxbIDm3QnJug+TcDsm5A5JzJyTnLkjO3ZCceyA590Jy7oPk3A/JeQCS8yAk5yFIzsOQnEcgOY9Cch6D5DwOyXkCkvMkJOcpSM7TkJxnMihnZLqcwRu7hSIMzTdDzJGG5lsg5kyG5lsh5syG5tsg5iyG5rMQc1ZD8+0Qc2tD8x3/Q/OdEHMbQ/NdEHNbQ/PdEHM7Q/M9EHN7Q/O9EHMHQ/N9EHNHQ/P9EHMnQ/MDEHNnQ/ODEHMXQ/NDEHNXQ/PDEHM3Q/MjEHN3Q/OjEHMPQ/M5iLmnofk8xNzL0HwBYu5taH4MYu5jaH4cYu5raH4CYu5naH4SYu5vaH4KYh5gaH4aYh5oaH4GYh5kaH4WYh5saH4OYh5iaH4eYk4yNL8AMQ81NL8IMQ8zNL8EMScbmi9CzMMNzS9DzCMMza9AzCMNza9CzKMMza9BzKMNza9DzGMMzW9AzGMNzW9CzOMMzW9BzOMNzW9DzBMMze9AzBMNze9CzJMMze9BzJMNze9DzFMMzR9AzFMNzR9CzNMMzZcg5umG5ssQ8wxD8xWIeaah+SOIeZah+WOIebah+ROIeY6h+VOIea6h+TOIeZ6h+XOIeb6h+QuIeYGh+UuIeaGh+SuIeZGh+WuIebGh+RuIeYmh+VuIeamh+TuIeZmh+SrEvNzQ/D3EvMLQ/APEvNLQ/CPEvMrQ/BPEvNrQ/DPEvMbQ/AvEvNbQ/CvEvM7Q/BvEvN7Q/DvEvMHQ/AfEvNHQ/CfEvMnQ/BfEvNnQ/DfEvMXQfA1i3mpo/gdi3mZo1qKKBPN2Q3MExLzD0BwJMe80NGeCmHcZmjNDzLsNzVkg5j2G5qwQ815DczaIeZ+hOTvEvN/QnANiPmBozgkxHzQ054KYDxmac0PMhw3NeSDmI4bmvBDzUUNzPoj5mKE5P8R83NBcAGI+YWguCDGfNDQXgphPGZoLQ8ynDc1FIOYzhuaiEHM2Q3MxiDm7obk4xJzD0FwCYs5paC4JMecyNJeCmHMbmktDzHkMzWUg5ryG5rIQcz5DczmIOb+hOQpiLmBoLg8xFzQ0V4CYCxmaK0LMhQ3NlSDmIobmaENzjH+cCG/WnpDaI1F7BmoPPX0e1OcjfV7Q+FnjSY2vNN7Q+6/ej/T6rNcr/f3q91nPr7xFXRVzVdxVCVclXZVyVdpVGVdlXZVzFeWqvKsKriq6quQq2lVMmudjtu/aT1T7a2q/Se2/eNaV9ufTfnXav037mWl/L+13pf2ftB+S9gfSfjnaP0b7qWh/Ee23of0nzrk67+qCK61fr/Xctb651vvW+tdaD1rrI2u9YK2fq/Vktb6q1hvV+psXXWl9Rq1XqPX7tJ6d1nfTemda/0vrYWl9KK2XpPWDtJ6O1pfReitaf+SSq8uurrjS+gWaz6/57ZrvrfnPmg+s+bGaL6r5k5pPqPl1mm+m+VdXXWl+juaraP6G5jPo+n5d767rv3U9tK4P1vWyun5U11Pq+kJdb6frz/TE6/okXa+j61d0PYeub9D5fp3/1vlgnR/V+UKdP9P5JJ1f0fkGHX/X8Wgdn9XxSh2/0/EsHd/R8Q59/tfnYX0+1OclfX7QeFrjS423NP7Q+7Hen/R6rdcv/T1HR6Q+7/8CbYYQNSTOAAA=",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        }
    ],
    "debug": {
        "debugSymbols": [
            "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
            "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Cv2qQr+q0K8q9KsK/apCv6rQryr0qwr9qkK/qtCvKvSrCv2qQr+q0K8q9KsK/apCv6rQryr0qwr9qkK/qtCvKvSrCv2qQr+q0K8q9KsK/apCv6rQryr0qwr9qkK/qtCvKvSrCv2qQb9q0K8a9KsG/apBv2rQrxr0qwb9qkG/atCvGvSrBv2qQb9q0K8a9KsG/apBv2rQrxr0qwb9qkG/atCvGvSrBv2qQb9q0K8a9KsG/apBv2rQrxr0qwb9qkG/atCvGvSrBv2qQb9q0K8a9KsG/apBv2rQrxr0qwb9qkG/atCvGvSrBv2qQb9q0K8a9KsG/apBv2rQrxr0qwb9qkG/atCvGvSrBv2qQb9q0K8a9KsG/apBv2rQrxr0qwb9qkG/atCvGvSrBv2qQb9q0K8a9KsG/apBv2rQrxr0qwb9qkG/atCvGvSrBv2qQb9q0K8a9KsG/apBv2rQrxr0qwb9qkG/atCvGvSrBv2qQb9q0K8a9KsG/apDv+rQrzr0qw79qkO/6tCvOvSrDv2qQ7/q0K869KsO/apDv+rQrzr0qw79qkO/6tCvOvSrDv2qQ7/q0K869KsO/apDv+rQrzr0qw79qkO/6tCvOvSrDv2qQ7/q0K869KsO/apDv+rQrzr0qw79qkO/6tCvOvSrDv2qQ7/q0K869KsO/apDv+rQrzr0qw79qkO/6tCvOvSrDv2qQ7/q0K869KsO/apDv+rQrzr0qw79qkO/6tCvOvSrDv2qQ7/q0K869KsO/apDv+rQrzr0qw79qkO/6tCvOvSrDv2qQ7/q0K869KsO/apDv+rQrzr0qw79qkO/6tCvOvSrDv2qQ7/q0K869KsO/apDv+rQrzr0qw79akC/GtCvBvSrAf1qQL8a0K8G9KsB/WpAvxrQrwb0qwH9akC/GtCvBvSrAf1qQL8a0K8G9KsB/WpAvxrQrwb0qwH9akC/GtCvBvSrAf1qQL8a0K8G9KsB/WpAvxrQrwb0qwH9akC/GtCvBvSrAf1qQL8a0K8G9KsB/WpAvxrQrwb0qwH9akC/GtCvBvSrAf1qQL8a0K8G9KsB/WpAvxrQrwb0qwH9akC/GtCvBvSrAf1qQL8a0K8G9KsB/WpAvxrQrwb0qwH9akC/GtCvBvSrAf1qQL8a0K8G9KsB/WpAvxrQrwb0qwH9akC/GtCvBvSrAf1qQL8a0K8G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",
            "",
            "eJzN1MtKw1AURuF3OeMg3bfm8iriIGiFQknFZFby7laNoWjowclhjZLAv8kafZd0Oj/30/E8jKm7JEvd4yWNb/3w+TVO/fuUul2VDsPL9TlX6fV4OqRO5urPSszDluX1vY51bbY1d239Z+5W17fzpyo5piQwJXtMSY0paTAlLaZEdpwU4aQoJ4XjrHCgFY60wqFWONYKB1vhaKscbZWjrXK0VY62ytFWOdoqR1vlaKscbZWjrXG0NY62xtHWONoaR1vjaGsltfWo15Rw+51SUttMSkltMykltb2f4iW1zaSU1DaTUlLbTEpJbTMpJbXNpJTUNpPC0dY52jpHW+doGxxtg6NtcLSNTW0b1+WmufmBfB1smnjvwB42wZA2lhM1XU9i//2T/97M8wfudSTx",
            "eJzN1s9qwkAQx/F32XMo7vxx3bxK6SFUBUFiaXILefdacVV06noow+8UA7PDN3v44BT2h89u3B36IbRT4NC+T2H46vrft2HsvsfQLpqw6dfH59yE7W6/CW2cm4epyKJ8njz+TnqZZrbGhbKUceGUbsc/miAwJQpTsoQpSTAlK5iSDFMSFzgpESeFcFJwnI040EYcaSMOtRHH2oiDbcTRlnC0JRxtCUdbwtGWcLQlHG0JR1vC0ZZwtCUcbRlHW8bRlnG0ZRxtGUdbxtGWPbUVTZcUFb5P8dS2kuKpbSXFU9vnKeKpbSXFU9tKiqe2lRRPbSspntpWUjy1raTgaCs42gqOtoKjreJoqzjaKo62amqrOZ/PLIme5jCVGNZriubTbpPPf9ptevj6blmV61aW293GFaby35NSvl6fnjJMC/0zTAdfz1DRkpHk/qb5zfxIorKdND+eMYsqZ0xCK2dM6/4+M88/h2fGyQ==",
            "eJyd0r0KwjAUxfF3OXOQ3FttPl5FHIJWKJRUTLaQd7eKOBWHs907/JbDv2FZr6nOay6IDfYwIp4byiPl919qelbEIVgxmPLtc7pucJ+XCVH6xWzGEcYTJhBGLIOEQcqggUFHBp0YxOQgTA/CBCFMEcoUoUwRyhSh+0V4H/6h3cmD+xIR+xPjRnp/Ab0JIKk=",
            "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
            "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
            "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"
        ],
        "fileMap": {
            "1": {
                "source": "// A contract used for testing a random hodgepodge of small features from simulator and end-to-end tests.\ncontract Test {\n    use dep::aztec::{\n        abi,\n        abi::PrivateContextInputs,\n        context::PrivateContext,\n        oracle::{\n            get_public_key::get_public_key,\n            context::get_portal_address,\n            rand::rand,\n            logs::emit_unencrypted_log\n        },\n        types::vec::BoundedVec,\n    };\n\n    #[aztec(private)]\n    fn constructor() {}\n\n    #[aztec(private)]\n    fn getPublicKey(\n        address: Field,\n    ) -> [Field; 2]{\n        let pub_key = get_public_key(address);\n        \n        [pub_key.x, pub_key.y]\n    }\n\n    // Get the portal contract address through an oracle call\n    #[aztec(private)]\n    fn getPortalContractAddress(\n        aztec_address: Field\n    ) -> Field {\n        get_portal_address(aztec_address)\n    }\n\n    // Get the address of the l1 portal for this contract (taken from the input context)\n    #[aztec(private)]\n    fn getThisPortalAddress() -> Field {\n        context.this_portal_address()\n    }\n\n    // Get the address of this contract (taken from the input context)\n    #[aztec(private)]\n    fn getThisAddress() -> Field {\n        context.this_address()\n    }\n\n    // Test codegen for Aztec.nr interfaces\n    // See yarn-project/acir-simulator/src/client/private_execution.test.ts 'nested calls through autogenerated interface'\n    // Note; this function is deliberately NOT annotated with #[aztec(private)] due to its use in tests\n    fn testCodeGen(\n        inputs: PrivateContextInputs,\n        aField: Field,\n        aBool: bool,\n        aNumber: u32,\n        anArray: [Field; 2],\n        aStruct: DummyNote,\n        aDeepStruct: DeepStruct,\n    ) -> distinct pub abi::PrivateCircuitPublicInputs {\n        let mut args: BoundedVec<Field, 17> = BoundedVec::new(0);\n        args.push(aField);\n        args.push(aBool as Field);\n        args.push(aNumber as Field);\n        args.push_array(anArray);\n        args.push(aStruct.amount);\n        args.push(aStruct.secretHash);\n        args.push(aDeepStruct.aField);\n        args.push(aDeepStruct.aBool as Field);\n        args.push(aDeepStruct.aNote.amount);\n        args.push(aDeepStruct.aNote.secretHash);\n        for note in aDeepStruct.manyNotes {\n            args.push(note.amount);\n            args.push(note.secretHash);            \n        }\n        let args_hash = abi::hash_args(args.storage);\n        let mut context = PrivateContext::new(inputs, args_hash);\n        context.return_values.push(args_hash);\n        context.finish()\n    }\n\n    // Purely exists for testing\n    #[aztec(public)]\n    fn createL2ToL1MessagePublic(\n        amount: Field,\n        secretHash: Field,\n    ) {\n        // Create a commitment to the amount\n        let note = DummyNote::new(amount, secretHash);\n        \n        // Public oracle call to emit new commitment.\n        context.message_portal(note.get_commitment());\n        \n    }\n\n    // Purely exists for testing\n    #[aztec(public)]\n    fn createNullifierPublic(\n        amount: Field,\n        secretHash: Field,\n    ) {\n        // Create a commitment to the amount\n        let note = DummyNote::new(amount, secretHash);\n        \n        // Public oracle call to emit new commitment.\n        context.push_new_nullifier(note.get_commitment(), 0);\n    }\n\n    // docs:start:is-time-equal\n    #[aztec(public)]\n    fn isTimeEqual(\n        time: Field,\n    ) -> Field {\n        assert(context.timestamp() == time);\n        time\n    }\n    // docs:end:is-time-equal\n\n    // docs:start:emit_unencrypted_log\n    #[aztec(public)]\n    fn emit_unencrypted(\n        value: Field\n    ) -> Field {\n        let _hash = emit_unencrypted_log(value);\n        _hash[0]\n    }\n    // docs:end:emit_unencrypted_log\n\n    // Purely exists for testing\n    unconstrained fn getRandom(\n        kindaSeed: Field\n    ) -> Field {\n        kindaSeed * rand()\n    }\n\n    struct DummyNote {\n        amount: Field,\n        secretHash: Field\n    }\n\n    impl DummyNote {\n        fn new(amount: Field, secretHash: Field) -> pub Self {\n            Self {\n                amount: amount,\n                secretHash: secretHash\n            }\n        }\n\n        fn get_commitment(self) -> pub Field {\n            dep::std::hash::pedersen([self.amount, self.secretHash])[0]\n        }\n    }\n\n    struct DeepStruct {\n        aField: Field,\n        aBool: bool,\n        aNote: DummyNote,\n        manyNotes: [DummyNote; 3],\n    }\n}\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/test_contract/src/main"
            },
            "3": {
                "source": "mod poseidon;\n\n#[foreign(sha256)]\nfn sha256<N>(_input : [u8; N]) -> [u8; 32] {}\n\n#[foreign(blake2s)]\nfn blake2s<N>(_input : [u8; N]) -> [u8; 32] {}\n\nfn pedersen<N>(input : [Field; N]) -> [Field; 2] {\n    pedersen_with_separator(input, 0)\n}\n\n#[foreign(pedersen)]\nfn pedersen_with_separator<N>(_input : [Field; N], _separator : u32) -> [Field; 2] {}\n\n#[foreign(hash_to_field_128_security)]\nfn hash_to_field<N>(_input : [Field; N]) -> Field {}\n\n#[foreign(keccak256)]\nfn keccak256<N>(_input : [u8; N], _message_size: u32) -> [u8; 32] {}\n\n// mimc-p/p implementation\n// constants are (publicly generated) random numbers, for instance using keccak as a ROM.\n// You must use constants generated for the native field\n// Rounds number should be ~ log(p)/log(exp)\n// For 254 bit primes, exponent 7 and 91 rounds seems to be recommended\nfn mimc<N>(x: Field, k: Field, constants: [Field; N], exp : Field) -> Field {\n    //round 0\n    let mut t = x + k;\n    let mut h = t.pow_32(exp);\n    //next rounds\n    for i in 1 .. constants.len() {\n        t = h + k + constants[i];\n        h = t.pow_32(exp);\n    };\n    h + k\n}\n\nglobal MIMC_BN254_ROUNDS = 91;\n\n//mimc implementation with hardcoded parameters for BN254 curve.\nfn mimc_bn254<N>(array: [Field; N]) -> Field {\n    //mimc parameters\n    let exponent = 7;\n    //generated from seed \"mimc\" using keccak256 \n    let constants: [Field; MIMC_BN254_ROUNDS] = [\n        0, \n        20888961410941983456478427210666206549300505294776164667214940546594746570981,\n        15265126113435022738560151911929040668591755459209400716467504685752745317193,\n        8334177627492981984476504167502758309043212251641796197711684499645635709656,\n        1374324219480165500871639364801692115397519265181803854177629327624133579404,\n        11442588683664344394633565859260176446561886575962616332903193988751292992472,\n        2558901189096558760448896669327086721003508630712968559048179091037845349145,\n        11189978595292752354820141775598510151189959177917284797737745690127318076389,\n        3262966573163560839685415914157855077211340576201936620532175028036746741754,\n        17029914891543225301403832095880481731551830725367286980611178737703889171730,\n        4614037031668406927330683909387957156531244689520944789503628527855167665518,\n        19647356996769918391113967168615123299113119185942498194367262335168397100658,\n        5040699236106090655289931820723926657076483236860546282406111821875672148900,\n        2632385916954580941368956176626336146806721642583847728103570779270161510514,\n        17691411851977575435597871505860208507285462834710151833948561098560743654671,\n        11482807709115676646560379017491661435505951727793345550942389701970904563183,\n        8360838254132998143349158726141014535383109403565779450210746881879715734773,\n        12663821244032248511491386323242575231591777785787269938928497649288048289525,\n        3067001377342968891237590775929219083706800062321980129409398033259904188058,\n        8536471869378957766675292398190944925664113548202769136103887479787957959589,\n        19825444354178182240559170937204690272111734703605805530888940813160705385792,\n        16703465144013840124940690347975638755097486902749048533167980887413919317592,\n        13061236261277650370863439564453267964462486225679643020432589226741411380501,\n        10864774797625152707517901967943775867717907803542223029967000416969007792571,\n        10035653564014594269791753415727486340557376923045841607746250017541686319774,\n        3446968588058668564420958894889124905706353937375068998436129414772610003289,\n        4653317306466493184743870159523234588955994456998076243468148492375236846006,\n        8486711143589723036499933521576871883500223198263343024003617825616410932026,\n        250710584458582618659378487568129931785810765264752039738223488321597070280,\n        2104159799604932521291371026105311735948154964200596636974609406977292675173,\n        16313562605837709339799839901240652934758303521543693857533755376563489378839,\n        6032365105133504724925793806318578936233045029919447519826248813478479197288,\n        14025118133847866722315446277964222215118620050302054655768867040006542798474,\n        7400123822125662712777833064081316757896757785777291653271747396958201309118,\n        1744432620323851751204287974553233986555641872755053103823939564833813704825,\n        8316378125659383262515151597439205374263247719876250938893842106722210729522,\n        6739722627047123650704294650168547689199576889424317598327664349670094847386,\n        21211457866117465531949733809706514799713333930924902519246949506964470524162,\n        13718112532745211817410303291774369209520657938741992779396229864894885156527,\n        5264534817993325015357427094323255342713527811596856940387954546330728068658,\n        18884137497114307927425084003812022333609937761793387700010402412840002189451,\n        5148596049900083984813839872929010525572543381981952060869301611018636120248,\n        19799686398774806587970184652860783461860993790013219899147141137827718662674,\n        19240878651604412704364448729659032944342952609050243268894572835672205984837,\n        10546185249390392695582524554167530669949955276893453512788278945742408153192,\n        5507959600969845538113649209272736011390582494851145043668969080335346810411,\n        18177751737739153338153217698774510185696788019377850245260475034576050820091,\n        19603444733183990109492724100282114612026332366576932662794133334264283907557,\n        10548274686824425401349248282213580046351514091431715597441736281987273193140,\n        1823201861560942974198127384034483127920205835821334101215923769688644479957,\n        11867589662193422187545516240823411225342068709600734253659804646934346124945,\n        18718569356736340558616379408444812528964066420519677106145092918482774343613,\n        10530777752259630125564678480897857853807637120039176813174150229243735996839,\n        20486583726592018813337145844457018474256372770211860618687961310422228379031,\n        12690713110714036569415168795200156516217175005650145422920562694422306200486,\n        17386427286863519095301372413760745749282643730629659997153085139065756667205,\n        2216432659854733047132347621569505613620980842043977268828076165669557467682,\n        6309765381643925252238633914530877025934201680691496500372265330505506717193,\n        20806323192073945401862788605803131761175139076694468214027227878952047793390,\n        4037040458505567977365391535756875199663510397600316887746139396052445718861,\n        19948974083684238245321361840704327952464170097132407924861169241740046562673,\n        845322671528508199439318170916419179535949348988022948153107378280175750024,\n        16222384601744433420585982239113457177459602187868460608565289920306145389382,\n        10232118865851112229330353999139005145127746617219324244541194256766741433339,\n        6699067738555349409504843460654299019000594109597429103342076743347235369120,\n        6220784880752427143725783746407285094967584864656399181815603544365010379208,\n        6129250029437675212264306655559561251995722990149771051304736001195288083309,\n        10773245783118750721454994239248013870822765715268323522295722350908043393604,\n        4490242021765793917495398271905043433053432245571325177153467194570741607167,\n        19596995117319480189066041930051006586888908165330319666010398892494684778526,\n        837850695495734270707668553360118467905109360511302468085569220634750561083,\n        11803922811376367215191737026157445294481406304781326649717082177394185903907,\n        10201298324909697255105265958780781450978049256931478989759448189112393506592,\n        13564695482314888817576351063608519127702411536552857463682060761575100923924,\n        9262808208636973454201420823766139682381973240743541030659775288508921362724,\n        173271062536305557219323722062711383294158572562695717740068656098441040230,\n        18120430890549410286417591505529104700901943324772175772035648111937818237369,\n        20484495168135072493552514219686101965206843697794133766912991150184337935627,\n        19155651295705203459475805213866664350848604323501251939850063308319753686505,\n        11971299749478202793661982361798418342615500543489781306376058267926437157297,\n        18285310723116790056148596536349375622245669010373674803854111592441823052978,\n        7069216248902547653615508023941692395371990416048967468982099270925308100727,\n        6465151453746412132599596984628739550147379072443683076388208843341824127379,\n        16143532858389170960690347742477978826830511669766530042104134302796355145785,\n        19362583304414853660976404410208489566967618125972377176980367224623492419647,\n        1702213613534733786921602839210290505213503664731919006932367875629005980493,\n        10781825404476535814285389902565833897646945212027592373510689209734812292327,\n        4212716923652881254737947578600828255798948993302968210248673545442808456151,\n        7594017890037021425366623750593200398174488805473151513558919864633711506220,\n        18979889247746272055963929241596362599320706910852082477600815822482192194401,\n        13602139229813231349386885113156901793661719180900395818909719758150455500533,\n    ];\n\n    let mut r = 0;\n    for elem in array {\n        let h = mimc(elem, r, constants, exponent);\n        r = r + elem + h;\n    }\n    r\n}\n",
                "path": "std/hash"
            },
            "33": {
                "source": "use crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    HISTORIC_BLOCK_DATA_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\n\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)[0]\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_data: HistoricBlockData,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)[0]\n    }\n}\n\n// docs:start:historic-block-data\nstruct HistoricBlockData {\n    private_data_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    blocks_tree_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:historic-block-data\n\nimpl HistoricBlockData {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    fn serialize(self) -> [Field; HISTORIC_BLOCK_DATA_LENGTH] {\n        [\n            self.private_data_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.blocks_tree_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    fn empty() -> Self {\n        Self { private_data_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, blocks_tree_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)[0]\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        dep::std::hash::pedersen_with_separator(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)[0]\n    }\n\n    fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)[0]\n    }\n\n    fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    prover_address: Field,\n\n    // TODO: include globals in here and check them elsewhere\n    // https://github.com/AztecProtocol/aztec-packages/issues/1567\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        // We do not include block_data since it's not in the cpp hash\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_data.serialize()); // see https://github.com/AztecProtocol/aztec-packages/issues/1473\n        inputs.push(self.prover_address);\n\n        dep::std::hash::pedersen_with_separator(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\nfn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = dep::std::hash::pedersen_with_separator(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS)[0];\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        dep::std::hash::pedersen_with_separator(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)[0]\n    }\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/abi"
            },
            "35": {
                "source": "use dep::std::hash;\nuse crate::constants_gen::GENERATOR_INDEX__CONTRACT_ADDRESS;\n\nfn compute_address(pub_key_x: Field, pub_key_y: Field, partial_address: Field) -> Field {\n  hash::pedersen_with_separator([pub_key_x, pub_key_y, partial_address], GENERATOR_INDEX__CONTRACT_ADDRESS)[0]\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/address"
            },
            "56": {
                "source": "#[oracle(getPortalContractAddress)]\nfn _get_portal_address(_contract_address: Field) -> Field {}\n\nunconstrained fn get_portal_address(contract_address: Field) -> Field {\n    let portal_address = _get_portal_address(contract_address);\n    portal_address\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/context"
            },
            "59": {
                "source": "use crate::types::point::Point;\nuse crate::address::compute_address;\n\n#[oracle(getPublicKey)]\nfn get_public_key_oracle(_address: Field) -> [Field; 3] {}\n\nunconstrained fn get_public_key_internal(address: Field) -> [Field; 3] {\n  get_public_key_oracle(address)\n}\n\nfn get_public_key(address: Field) -> Point {\n  let result = get_public_key_internal(address);\n  let pub_key_x = result[0];\n  let pub_key_y = result[1];\n  let partial_address = result[2];\n  \n  let calculated_address = compute_address(pub_key_x, pub_key_y, partial_address);\n  assert(calculated_address == address);\n  \n  Point::new(pub_key_x, pub_key_y)\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/get_public_key"
            },
            "61": {
                "source": "\n\n#[oracle(getRandomField)]\nfn rand_oracle() -> Field {}\n\nunconstrained fn rand() -> Field {\n    rand_oracle()\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/rand"
            },
            "66": {
                "source": "use crate::types::point::Point;\nuse crate::constants_gen::NUM_FIELDS_PER_SHA256;\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(\n    _contract_address: Field,\n    _storage_slot: Field,\n    _encryption_pub_key: Point,\n    _preimage: [Field; N],\n)  -> Field {}\n\nunconstrained fn emit_encrypted_log<N>(\n    contract_address: Field,\n    storage_slot: Field,\n    encryption_pub_key: Point,\n    preimage: [Field; N],\n) -> [Field; NUM_FIELDS_PER_SHA256] {\n    [emit_encrypted_log_oracle(\n        contract_address,\n        storage_slot,\n        encryption_pub_key,\n        preimage,\n    ), 0]\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(_message: T)  -> Field {}\n\nunconstrained fn emit_unencrypted_log<T>(message: T) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    [emit_unencrypted_log_oracle(message), 0]\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/logs"
            },
            "80": {
                "source": "\nstruct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialised() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/types/vec"
            }
        }
    }
}
