{
    "name": "Parent",
    "functions": [
        {
            "name": "constructor",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "enqueueCallsToChildWithNestedFirst",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "targetContract",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetSelector",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "enqueueCallsToChildWithNestedLast",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "targetContract",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetSelector",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "enqueueCallsToPubEntryPoint",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "targetContract",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetSelector",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetValue",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "enqueueCallToChild",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "targetContract",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetSelector",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetValue",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "enqueueCallToChildTwice",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "targetContract",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetSelector",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetValue",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "enqueueCallToPubEntryPoint",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "targetContract",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetSelector",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetValue",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "entryPoint",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "targetContract",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetSelector",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "pubEntryPoint",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "targetContract",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetSelector",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "initValue",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "private_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "pubEntryPointTwice",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "targetContract",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "targetSelector",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "initValue",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "private_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        }
    ],
    "debug": {
        "debugSymbols": [
            "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
            "eJztnd2O28gRhd9F18aC/U/6VYJcGMkGWGDhDWLfGX730I5IycOuLiioOV1s1pXHADn6+ljz8ZijYn+7/fnXPz59/eOvz19uH7/dwu3j377dvvz70+cff/vy9dN/vt4+Th9uv3/+5/rn9w+3f/3x5++3j+77h8NRLsQU7keuX5e0Hx1C7fDol7gdHkMpz4f//cMtqiFJakiyGpKihmRWQ7KoIXGTHhSnB8XrQdHjWadHtE6PaZ0e1To9rnV6ZOv02Nbrsa3XY1uvx7Zej229Htt6Pbb1emzr9djW67Gt12PboMe2QY9tgx7bBj22DXpsG5C2jansKCmGtyhI2zIoSNsyKEjbMihI27ZRItK2DArStgwK0rYMCtK2DArStgyKHttGPbaNemwb9dg26rFt0mPbpMe2qWpbH8r2Gj6GZ6Afp1St6GNy2ymptNdQwrTcjy3BxwfS/P/8Bqlqxn44VTv2w6kash9O1ZL9cKqm7IdTtWU3nFw1Zj+cqjX74dTN2Q1Hl5WzLitnXVbOuqycdVk567Jy1mXlosvKRZeViy4rF11WLrqsXHRZueiyctFl5aLLykWXlWddVp51WXnWZeVZl5VnXVae0VZu36Ga0VZmcNBWZnDQVmZw0FZu4yxoKzM4aCszOGgrMzhoKzM4aCszOLqsvOiy8qLLyosuKy+6rOwmXVp2ky4vu0lAzCnuPHN65vn5AgKqja71AgLyXPL2AnEu7UTLMm/feHZTOdAIuFOQRkCdL9DMj7fmHHw+0AiYU5BGQJyCNALelKOpD551oxFwpiCNgDEFaQT0KkiDdTFHg3UxR6PKxfVptG40qlxcn0nrRVMfS+tGg3ZxyjtNCQcatIvbNGgXt2nQLm7ToF3cpkG7uE2DdnGbBu3iNg3axU2a+tBaNxpVLq6PrnWjUeXi+gBbNxpVLq6Psb0fTZy2G2Jz/PX22U8asIsZGrCLGRqwi9s09ZG2bjRgFzM0YBczNGAXMzRgFzM0YBczNKpcXJ9z60ajysX1abdeNPWBt240YBeXvM3TzaWUAw3YxQwN2MUMDdjFDA3YxQwN2MUMDdjFDA3YxQwN2MVtGolROkEaVS6WGKQTpFHlYokxOkEaVS6WGKJ7hWZ2+x2TORzumEjM0AnSgF3M0IBd3KaRGKATpAG7mKEBu5ihAbuYoQG7mKEBu5ihUeViick5QRpVLpaYm5OjkRibE6RBu7jsn+qYl0O/kRiaE6RBu7hNg3Zxmwbt4jYN2sVtGrSL2zRoF7dp0C5u0kgMywnSqHKxxKicII0qF0sMygnSqHKxxJjcCzTO+cnfj16/9u7Ag7Uxz4P1Mc+DNTLH4yUm5UR5sFbmebBe5nmwZuZ5sG7mebB25nl0+dmDp/F4Hl1+9uCJPJYHPJPH88D9HJcHzzIdeNB+DtO884T8di7ZgyfzVoZ5f9SOi/7Ig/ZzjE88ZT7woP08L/vDrNfqfnz/oP285P39s/6ovb1D6METeivDPmbvVtm8/VSVB8/orQx+98+qn7f/3/HgKb2VIaSdJ7iDD8FzeitDeuQTcmgfHvP25o/z40cxL5VDkw/bD26Kz5/Xv+8HB/Z+t3WCryevrTPtF+fkS3uduczbhTPP7pd1Hg8Oyz7+GZbnmwz3UMAXtXOEAr6yniMU8OX9HKGAO8Y5QkEXnfcKpaS0NYSSFtcOxa+g+/rmYyjotnWKUNCV791CyWV/ZlY5PBXVg8eM+61TdZUMO3t6aofrOn+iq26HbfR6h0vz9glYn2Nuojuf3bTT5F/vNVQOZ/d1rheonkT19tKTqF4dehLVr9s9ieoXzZ5E9StWRyJibLonUf0q0JOoLveeROqcTYxR9yRS52xinLonkTpnE2PVPYnUOZsYr+5JpM7ZxJh1TyJ1zibGrXsSqXM2MXbdk0ids4nx655E6pxNjGH3JFLnbGIcuyeROmcTY9k9idQ5mxjP7kmEd3Z7owdPjGn3JMI7myEixrV7EuGdzRHhnc0R4Z3NEeGdzRHhnc0R4Z3NEalzNjHO3ZNInbOJse6eROqcTYx39yRS52xizPs1ovT4hGie3+6d4InZ7ddeIvrmS0hYddmDWg3E/WI6eLd/bDiEePjYMDGU3ZNIwqqvEaW4vzFCyv5AJGFVUSJiQLsnkYRVZYkkrCpLJGFVWSIJq8oSSUhYlgjvbI4I72yOSJ2zifHtfkSBGODuSaTN2YEY4u5J1MHZy94hQ56WA1EHZzNEHZzNEHVwNkPUwdkMUQdnM0QdnN0mIoa6exJ1cDZD1MHZDJE6ZxPD3T2J1DmbGPDuSaTO2cSQ93sS5RgeRPntWH4gxrw7EhGD3j2J8M7miPDO5ojwzuaI8M7miPDO5ojwzuaI8M7miNQ5m5jT7EhETFT2JFLnbGKksScR3tnLst+tiZM73K0RmVSUJcI7myPCO5sjwjubI8I7myPCO5shEplUlCXCO5sjwjubI1LnbJFJRVkidc4WmVSUJVLnbJFJxZeI4rQ/TmL9Os8HIrizOSKRSUVZIrizWSK4s1kiuLNZIrizWSK4s1kiuLNZIrizWSJ1zhaZVBQlEplUlCVS52yRSUVZIryznXvMvLlw6Ecik4qyRHhnc0R4Z3NEeGdzRHhnc0R4ZzNEIpOKskR4Z3NEeGdzROqcLTKpKEukztkik4qyROqcLTKp+BJRmvL+SZbkprfbJwSRScXXiJx3D6LDhhdBZFLxNSI/7Xe0kn/65hsR3Nkp50dGxR0zgjs7lZAfRM8PKL4TwZ29fut9o5s0l8PPmsik4otEyz5qmZb57dYyQWSw8SWiPE37b47zVA6fY8PPQWbn9n+17MLUPjyHDSSnR5w/nhh8OLS9TUXAz1d2Wyn8GvPiSvP+SPwltlfqpmVf6vp1mp/Xejy8/QD9gB8fPUkw+CnWswQDv/CfJRh4/zhLMPAa9H7BuPU/MNt3du65PNSCWbLb9mlbip8OwcDb2FmCwZfCkwSjvZt2C0Z7le0WzEDNVzaYgZqvZDAR/yyAswQzUPOVDWag5isbjDVfIhhrvkQw1nyJYKz5EsFY8yWCseZLBGPNtx4M/okqZwnGmi8RjDVfIhhrvkQw1nyJYKz5EsFY8yWCseZLBGPNlwjGmm89GPxzqc4SjDVfIhhrvkQw1nyJYKz5EsFY8yWCseZLBGPNlwjGmi8RjDXfejD4p/udJRhrvkQw1nyJYKz5EsFY8yWCseZLBGPNlwjGmi8RjDVfIhhrvvVg8M9IPUsw1nyJYKz5EsFY8yWCseZLBGPNlwjGmi8RjDVfIhhrvkQw1nzrweCfNH2WYKz5EsFY8yWCseZLBGPNlwjGmi8RjDVfIhhrvkQw1nyJYKz51oPBP6//LMFY8yWCseZLBGPNlwjGmi8RjDVfIhhrvkQw1nyJYKz5EsFY860Hg9/15CzBWPMlgrHmSwQzUvP1+8FrRlNiglmP34LxUzwEM1LzFQ1mpOYrGsxIzVc0mJGar2gwIzVf0WBGar6SweD3jjpLMCM1X9FgRmq+osFY8yWCseZLBGPNlwjGmi8RjDVfIhhrvkQw1nzrwYy0h5tsMNZ8iWCs+RLBWPMlgrHmSwRjzZcIxpovEYw1XyIYa75EMNZ8q8GkofZwEw3Gmi8RjDVfIhhrvkQw1nyJYKz5EsFY8yWCseZLBGPNlwjGmm89mKH2cBMNxpovEYw1XyIYa75EMNZ8iWCs+RLBWPMlgrHmSwRjzZcIxppvPZih9nATDcaaLxGMNV8iGGu+RDDWfIlgrPkSwVjzJYKx5ksEY82XCMaabz2YofZwEw3Gmi8RjDVfIhhrvkQw1nyJYKz5EsFY8yWCGan5zuURzDK7w1pHKrPcWkfqp8xah9o8jVvrSC2SW+tIxZBb60hdj1vrSPWNW+tIjYxb60gli1vrhXrTUJt6cWu9UG8aaustbq0X6k1DbZDFrfVCvWmobay4tV6oNw212RS31gv1pqG2hOLWeqHeNNTGTdxaL9SbhtpeiVvrhXrTUJsgcWu9UG8aaqsibq0X6k1DbSjErfVCvWmobX+4tV6oNw21OQ+31gv1pqG20OHWeqHeNNRGN9xaL9SbhtqOhlvrhXrTUJvGcGu9UG8aamsXbq0X6k1DbcDCrfVCvWmobVK4tV6oNw21mQm31gv1pqG2HOHWeqHepH1jkBTd/eASp+e1/oRXXoSa8P636iXQ5X1D6+WxnXUu93Oql5LWOW6iXmjOW0ou7Cel+L+T4m9VkccY7yel9HgvpbSdVDUid1L90ZbsWdWf0tZZfo6vR+HnXI8iT9sbp/jHSdlvJ1Wj4E6qR8GeVY2CPuv79/8C81kWWA==",
            "eJztnd1u3EYShd9lro2A/d/0qwS5MHazQIDAWcS+M/zuYRSRMxa7WJigdLrYrKsoACl9fTz6eDRSdX+7/f7Hfz59/e2Pz19uH7/dwu3jz99uX/7/6fPf//fl66c/v94+Th9uv37+7/Lf7x9u//vt919vH933D7urXIgpvF65fFzSdnUIrcujn+N6eQylPF7+y4dbVEOS1JBkNSRFDUlVQzKrIXGTHhSnB8XrQdHjWadHtE6PaZ0e1To9rnV6ZOv02Nbrsa3XY1uvx7Zej229Htt6Pbb1emzr9djW67Gt12PboMe2QY9tgx7bBj22DXpsG5C2jalsKCmGtyhI2zIoSNsyKEjbMihI2x6jRKRtGRSkbRkUpG0ZFKRtGRSkbRkUPbaNemwb9dg26rFt1GPbpMe2SY9tU9O2YXJr3wpTZYB8div68rF/AKr/5hdCTef2BGqatydQ0789gZoW7gnUdHFPoKaRewI1vdwRKDft3BOo6eieQNpMnbWZOmszddZm6qzN1FmbqbM2U2dtpi7aTF20mbpoM3XRZuqizdRFm6mLNlMXbaYu2kxdtJm6ajN11Wbqqs3UVZupqzZTV22mrnhTH7+lV/GmZoDwpmaA8KY+BprxpmaA8KZmgPCmZoDwpmaA8KZmgPCmZoC0mXrWZupZm6lnbaZ2kzZVu0mbq92kTdZukrB1Sneimh+JXr6EhH+jP/wSEkadt6B8qYXJNXjn1stDiHFHJKFUWSIJpz5HlOL2wggp+x2RhFRliSSsKkrUHqrrSiRhVVkiCavKEklYVZZIQsKyRHhnc0R4Z3NE6pzdHsbrSqTO2e3RvK5E6pzdHtR7X6J565AhT/OOqIOzGaIOzmaIOjibIergbIaog7MZog7OZog6OPuYqD3g15Wog7MZInXObk/9dSVS5+z2DGBXInXObk8EvitRjvdhhZynHRHe2RwR3tkMUXtMsCsR3tkcEd7ZHBHe2RwR3tkcEd7ZHBHe2RyROme3xwu7EqlzdnvYsCuROmeLjB4+RzTP27s1cXK7d2tEZg9lifDO5ojwzuaI8M7miPDO5ojwzuaI8M5miERGEGWJ8M7miNQ5W2QKUZZInbNF5hBlidQ5W2QS8SmiOCV3J8p1RwR3NksEdzZHJDKMKEsEdzZLBHc2SwR3NksEdzZLBHc2SwR3NkukztkiQ4myROqcLTKWKEukztkig4nPEbntcy8fh10/EplMlCXCO5sjwjubI8I7myPCO5sjwjubI8I7myESGVCUJcI7myNS52yRGUVZInXOFplSlCVS52yROcWniNKUt79kSW4KOyK4s5Pz7k5Udo1NZFLxOSI/be9oJR/fTot5kUnF54hyvmdU3NuMvMik4nNEJeQ70ex2RHBnpzrNG1Etb7/XvMik4pNE8zZqmeaadkRwZ+dp2n5znKfy9u/YPH4OMju3/atlF6bjy3NYA83pHmeZGpcmH1boFMvbuVWPn6/stlL4M+bJleb14jzH45W6ad6Wunyc6uNa95eHeTNCmOe328t4/PjoWYKBP3FPEgx+mPYswcD7x1mCgdeg9wvGLT/ArJ/Zucfy0Apmzq6+Xj0XP+2CgbexswSDL4UnCUZ7N+0WjPYq2y2YgZqvbDADNV/ZYAZqvqLB4LckOEswAzVf2WCs+RLBWPMlgrHmSwRjzZcIxpovEYw1XyIYa75EMNZ828HgN3Y5SzDWfIlgrPkSwVjzJYKx5ksEY82XCMaaLxGMNV8iGGu+RDDWfNvB4LfHOksw1nyJYKz5EsFY8yWCseZLBGPNlwjGmi8RjDVfIhhrvkQw1nzbweA3GTxLMNZ8iWCs+RLBWPMlgrHmSwRjzZcIxpovEYw1XyIYa75EMNZ828Hgt2o9SzDWfIlgrPkSwVjzJYKx5ksEY82XCMaaLxGMNV8iGGu+RDDWfNvB4De8Pksw1nyJYKz5EsFY8yWCseZLBGPNlwjGmi8RjDVfIhhrvkQw1nzbweCPDThLMNZ8iWCs+RLBWPMlgrHmSwRjzZcIxpovEYw1XyIYa75EMNZ828HgD185SzDWfIlgRmq+frt4yWhKTDDL9Wswfoq7YEZqvqLBjNR8RYMZqfmKBjNS8xUNZqTmKxrMSM1XNJiRmq9gMAF/hNVZghmp+YoGY82XCMaaLxGMNV8iGGu+RDDWfIlgrPkSwVjzJYKx5tsOZqQz3GSDseZLBGPNlwjGmi8RjDVfIhhrvkQw1nyJYKz5EsFY8yWCsebbDmaoM9xEg7HmSwRjzZcIxpovEYw1XyIYa75EMNZ8iWCs+RLBWPMlgrHm2w5mqDPcRIOx5ksEY82XCMaaLxGMNV8iGGu+RDDWfIlgrPkSwVjzJYKx5tsOZqgz3ESDseZLBGPNlwjGmi8RjDVfIhhrvkQw1nyJYKz5EsFY8yWCsebbDmaoM9xEg7HmSwRjzZcIxpovEYw1XyIYa75EMCM131ruwczV7dY6Upnl1jpSP+XWOlLlZNY61Hlo3FpHKobcWkfqetxaR6pv3FpHamTcWkcqWdxaL9SbhjrUi1vrhXrTUEdvMWsd6jQtbq0X6k1DnXnFrfVCvWmok6m4tV6oNw11fhS31gv1pqFOeeLWeqHeNNRZTNxaL9SbhjoxiVvrhXrTUOcacWu9UG8a6vQhbq0X6k1DnRHErfVCvWmok3y4tV6oNw113g631gv1pqFOxeHWeqHeNNTZNdxaL9SbhjphhlvrdXpTHOocGG6t1+lNcajTWri1Xqc3xek6vSkOdUwKt9br9KY41GEm3Fqv05viUEeOMGsd6hQRbq3Ke1OK7vXiEqfHtb7AKy9Cx/DtZuN8WOHdD/Av97Qbgp/WrxOCP15wCdO6gBJ8ZJYb/bxG6WIoZffqaT/F+/G0n7T9eNpPw3487SdWP572U6UbD7GLfj+etp378bSF24+n7dB+PMr8TGxM3o9HmZ+Jbbj78SjzM7HpdDceYq/nfjzK/EzsbNyPR5mfiX18+/Eo8zOxa20/HmV+JvZo7cejzM/EjqT9eJT5mdh/sx+PMj8Tu03241HmZ2JvxffjiWl7dyymGHY8aD9zPGg/czxoPzM8xL55/XjQfuZ40H7meNB+5njQfuZ40H7meJT5mdilqx+PMj8Tu1114yF2pOrHo8zPxM5O/XgE/JzixlPTI8/LFxAQ7v2XkK0vIGDQOa9fIHK/QC1zXT9xdVPZ0Qj4U5BGwJ5P0NT7S7MGn3c0Au4UpBEwpxwNsSNNLxoBawrSCDhTkEbAmII0AnoVpMG6mKPBupijUeViYoeOXjSqXEzsctGLRpWLiZ0i3o8m5Y2mhB0N2sXHNGgXH9OgXXxMg3bxMQ3axcc0aBcf06BdfEhDTM73okG7+JhGlYuJ+fBeNKpcTMxY96JR5WJiTvndaOK0viFW449vn73QgF3M0IBdfEiTiGncXjRgFzM0YBczNGAXMzRgFzM0YBczNGAXMzSaXJyI6cReNKpcTEz49aJR5WJiqO7daEqeVppSyo4G7GKGBuxihgbsYoYG7GKGBuxihgbsYoYG7OJjGomZO0EasIsZGlUulpi2E6RR5WKJSTtBGlUulpiye4amuu0dkxrevmOSJGbsBGnALj6mkZivE6QBu5ihAbuYoQG7mKEBu5ihAbuYoQG7mKFR5WKJeTpBGlUulpilE6RR5WKJObqnaLZNlGqdd/1GYopOkAbt4mMatIuPadAuPqZBu/iYBu3iYxq0iw9pJObmBGnQLj6mUeViiYk5QRpVLpaYlhOkUeViiUm5J2ic85N/vXr52LsdD9bGPA/WxyyPxKScKA/WyTwP1so8D9bLPA/WzDwP1s08D9bOPI8yP4On8XgeZX4GT+TxPMr8DJ7KWxjifR9oP087HrSfw1Q3npDfziUn8GTewlC3nXdc9HsetJ9jfOApdceD9nOdw8Yzp/3rB+3nOW+vn+VbbfcOIXhCb2HYxuydd9Pur6rAM3oLg9/8s+hn9/MOeEpvYQhp4wlu50PwnN7CkO75hByOL495ffHHev9WzHPj0uTD+o2b4uPf64d/1gn2frd1gp8nz60zbQ/n5MvxOnOp22kL1f2wzv3FYd7GP8P8+CbDayjgh9o5QgE/Wc8RCvjxfo5QwB3jHKGgi857hVJSWhtCSbM7DsUvoK8X+1T3oaDb1hlCAQ8Dv2MouWx7ZpXdJqkJPGbcb52qq2TY2NNDO1zW+YKuuh0eobsp/NR8Nru68vgHo6f4z03pp6am8zaJUx5+hM1+vampMe6m9nATe1fzu+boruioKPIW9jzfbyrrTc3H+OFN+V+EHjMR+v2dlZTuRk1pvakZOndTO3T2rmbo9F3fv/8FO336eg==",
            "eJztndFu3MgRRf9Fz8aCTXY3Sf9KkAcj2QALLLxB7DfD/56Ro+EIw75TmKBUXSzep9UCHOvWsX3nWFJ3/Xj5869/fPn+x19fv718/vEyvXz+24+Xb//+8vX1/759//Kf7y+fh08vv3/95+W/Pz+9/OuPP39/+Zx+fto9laZcprcnLx/PZXt6mlqP53HN18fzNM/vH//7p5fsJklxk6S6STK7SbK4SbK6SZIGP1GSnyijnyh+ejb5Kdrkp2mTn6pNfro2+Snb5KdtRz9tO/pp29FP245+2nb007ajn7Yd/bTt6KdtRz9tO/pp28lP205+2nby07aTn7adLNs2l3mLUvJ0H8WybYUolm0rRLFsWyGKZdsKUSzb9nGUbNm2QhTLthWiWLatEMWybYUofto2+2nb7Kdts5+2zX7aNvtp2+KnbUuzbS+/7NW38jLUd4FeX9JsxbzM5fqSdamPZxhruk57+Xh8N8Py/3zjptmNPQM1G7JnoGZP9gzUbMuegZqd2TNQszl7Bmr2Z8dAtdmiPQO1u7RjIG9NXb01dfXW1NVbU1dvTV29NXX11tTVW1PP3pp69tbUs7emnr019eytqWdvTT17a+rZW1PP3pp69tbUi7emXrw19eKtqRf7pn78JaXFvqmFQPZNLQSyb2ohkH1TC4Hsm1oIZN/UjwOt9k0tBLJvaiGQfVMLgbw19eqtqVdvTb16a+rVW1Ov3pp69dbUadCo6lJuid49fUn061NolG8eH34KjTpdN1DjvMwC12lM6fr4NOW8S6TRp7qJNAr1uUQlb38wplLHXSKNRtVNpFGpuok0OlU3kUap6ibSaFXVRO3Db10TaZSwbiL7zpYS2Xe2lMhdZ7fPx3VN5K6z26fluiZy19nts3Mfm2jdHHKqw3qfqH2ErmuiDp0tJOrQ2UKiDp0tJOrQ2UKiDp0tJOrQ2UKiDp0tJOrQ2UIid53dPojXNZG7zm4fy+uayF1ntw/pfWiimm8/KV/rsEtk39lSIvvOlhLZd7aUyL6zpUT2nS0kah/n65rIvrOlRPadLSWy72wpkbvObp/465rIXWe3z/91TeSus9unAT800bpuX63JQ9p9taZ9KLBrIvvOlhLZd7aUyL6zpUT2nS0lsu9sKZF9Z0uJ7DtbSmTf2VIid52tcgRRN5G7zlY5hKibyF1nqxxDfCpRHkq6JarLLpF5Z4uJzDtbTGTe2WIi884WE5l3tpRI5TCibiLzzhYTmXe2mMi8s8VE7jpb5USibiJ3na1yJlE3kbvOVjmV+FyilG5H3NK08yOVY4m6iew7W0pk39lSIvvOlhLZd7aUyL6zpUT2nS0lsu9sKZF9Z0uJ3HW2ygFF3UTuOlvliKJuInedrXJI8alEZajbT7KUNEy7ROadXdKYbonmnbGpHFN8LtE4bF/RKmPenRZTOaf4XKJab4zmtGdk3tllnuot0Zp2icw7uyzDuiVa5vu/a6PKScUnE63bUcuyLmWXyLyz6zBs3zmuw3z/c2yj/TnImtL2u1bTNDx+vE5XoLXccM5D49EyTtfqLXm+P7c62p+v7Dap+XvMk5PW68N1zY8nTcO6jXr5uCzvZ90/Pq1bI0zren+3zGh/fPQoYMzfcY8CxvyN/yhgzP3jKGDMNejjwKTLP2Cuv3JK7+WhBWataXl7ep3H4R6M/Qnno4Cxl8KDgPHupt3AeFfZbmACma8umEDmqwsmkPnqgglkvrpgApmvLhiabxuM/T0RRwFD8wVgaL4ADM0XgKH5AjA0XwCG5gvA0HwBGJovAEPzbYOxv23nKGBovgAMzReAofkCMDRfAIbmC8DQfAEYmi8AQ/MFYGi+bTD2d5YdBQzNF4Ch+QIwNF8AhuYLwNB8ARiaLwBD8wVgaL4ADM23Dcb+5sejgKH5AjA0XwCG5gvA0HwBGJovAEPzBWBovgAMzReAofm2wdjfn3sUMDRfAIbmC8DQfAEYmi8AQ/MFYGi+AAzNF4Ch+QIwNN82GPtbyI8ChuYLwNB8ARiaLwBD8wVgaL4ADM0XgKH5AjA0XwCG5tsGY7/L4ShgaL4ADM0XgKH5AjA0XwCG5gvA0HwBGJovAEPzBWAime+4PXxhNBQBzOX5K5hxyPdg7DfiHAVMJPNVBRPJfFXBRDJfVTCRzFcVTCTzVQUTyXxVwUQyX1UwkcxXFQzNtwlmst8rdhQwNF8AhuYLwNB8ARiaLwBD8wVgaL4ADM0XgKH5AjA03zaYUDvcVMHQfAEYmi8AQ/MFYGi+AAzNF4Ch+QIwNF8AhuYLwNB822BC7XBTBUPzBWBovgAMzReAofkCMDRfAIbmC8DQfAEYmi8AQ/Ntgwm1w00VDM0XgKH5AjA0XwCG5gvA0HwBGJovAEPzBWBovgAMzbcNJtQON1UwNF8AhuYLwNB8ARiaLwBD8wVgaL4ADM0XgKH5AjA03zaYUDvcVMHQfAEYmi8AE8l8l/kGZl3SbtZIMivNGslPpVkjKac0aySLlGaNJIbSrJFcT5g11CIyadZIRibNGkmypFlP5E2hlnpJs57Im0Kt3pJmPZE3hVqQJc16Im8KtcZKmvVE3hRq2ZQ064m8KdRKKGnWE3lTqMVN0qwn8qZQ65WkWU/kTaGWIEmznsibQq0qkmY9kTeFWigkzXoibwq19kea9UTeFGo5jzTribwp1AodadYTeVOoRTfSrCfyplDraKRZT+RNoZbGSLOeyJtCrXaRZj2PN+VQC1ikWc/jTTnUmhRp1vN4Ux7O40051H4SadbzeFMOtUVEmtW5N5Wc3h6e8/B+1l/hnYvQw/Bgwca65SkpjVL4NGzh61iE8Hlc8/XxPM3z/Z8FsNmiZ6K2JfRM1H4v75mo/Y7bM1H7fbFnova7V89E7feYnona7wQ9E7XrvWMicDV8z0TuOhtcht4zkbvOBtd/90zkrrPBhdc9E7nrbHDFc89E7jobXGrcM5G7zgbX+PZM5K6zwcW1PRO562xwVWvPRO46G1xO2jORu84G13H2TOSus8EFlB+ZKJfta2W55GmXyL6zpUT2nS0lsu9sKZF9Z0uJ7DtbSmTf2VIi+84WEoGL5Homsu9sKZG7zgZ3lvVM5K6zwf1fPRO562xwl1bPRO46G9xL9VyiUm6J3n1z85Lo9VOA66Ce+xR5fPgpNFr1qW+6TmO6fh81TVPOu0QaraqbSKNVn0tU8vYHYyp13CXSaFXdRBqtqptIo1V1E2m0qm4ijVbVTaTRqqqJwN0yPRPZd7aUyL6zpUTuOhvcedIzkbvOBveH9EzkrrPBXRwfmmjdHHKqw7pL1KGzHycC91r0TNShs4VEHTpbSNShs4VEHTpbSNShs4VEHTpbSNShs4VE7jobnNbvmAicqe+ZyF1ng/PpPRPZd3bN0y1RHXaJ7DtbSmTf2VIi+86WEtl3tpTIvrOlRPad/ThRAed5eyay72wpkX1nS4m8dXYZvHV2AadBeyby1tkFnKzsmci+s9d1+2pNHtL9V2sKONTYMZHKSUXdRPadLSWy72wpkX1nS4nsO1tKZN/ZUiL7zpYS2Xe2lMhdZ6ucVFRNpHJSUTeRu85WOamom8i8s/NQ0i1RXXaJzDtbTGTe2WIi884WE5l3tpjIvLPFROadLSVSOamom8i8s8VE5p0tJnLX2SonFXUTuetslZOKuoncdbbKScXnEqV0O/OWpp0fqZxUVE2kclJRN5F9Z0uJ7DtbSmTf2VIi+86WEtl3tpTIvrOlRPadLSVy19kqJxVVE6mcVNRN5K6zVU4q6iYy7+wy1O0nWUoapl0i884uaUy3RPPO2FROKj6XaBy2r2iVMd+fFisqJxWfS1TrjdGc9ozMO7vMU70lWtMukXlnl2XYrjEty7z/u2be2WVZt6OWZV3KfSKVg41PJarDsH3nuA7z/c+xFftzkE/eEjxdgdZyw9m8JbiM07V6L0pzf2612J+v7Dap+XvMx938PKzbqJePy/J+1v3j07o1wnQZdwfG/K3uKGDM33GPAsb8jf8oYMz94yhgzDXoA6/dv/wD5vorp/ReHlpg1pqWt6fXeRx2YMxt7CBg7A9aHwWMdzftBsa7ynYDE8h8dcEEMl9dMIHMVxdMIPPVBRPIfHXB0HwBGJpvG4z9dRVHAUPzBWBovgAMzReAofkCMDRfAIbmC8DQfAEYmi8AQ/Ntg7G/9OcoYGi+AAzNF4Ch+QIwNF8AhuYLwNB8ARiaLwBD8wVgaL5NMNX+6rSjgKH5AjA0XwCG5gvA0HwBGJovAEPzBWBovgAMzReAofm2wdhfQHkUMDRfAIbmC8DQfAEYmi8AQ/MFYGi+AAzNF4Ch+QIwNN82GPtrfI8ChuYLwNB8ARiaLwBD8wVgaL4ADM0XgKH5AjA0XwCG5tsGY38Z+lHA0HwBGJovAEPzBWBovgAMzReAofkCMDRfAIbmC8DQfNtg7FdKHAUMzReAofkCMDRfAIbmC8DQfAEYmi8AQ/MFYCKZ77g9fGE0FAHM5fkrmHHIOzCRzFcTjP1inqOAiWS+qmAima8qmEjmqwomkvmqgolkvqpgIpmvKphI5qsKhuYLwNB822A6rDc7CBiaLwBD8wVgaL4ADM0XgKH5AjA0XwCG5gvA0HwBGJpvG0yoHW6qYGi+AAzNF4Ch+QIwNF8AhuYLwNB8ARiaLwBD8wVgaL5tMKF2uKmCofkCMDRfAIbmC8DQfAEYmi8AQ/MFYGi+AAzNF4Ch+bbBhNrhpgqG5gvA0HwBGJovAEPzBWBovgAMzReAofkCMDRfAIbm2wQzh9rhpgqG5gvA0HwBGJovAEPzBWBovgAMzReAofkCMDRfAIbm2wYTaoebKhiaLwATyXyX+QZmXdJu1kgyK80ayU+lWSMppzRrJIuUZo0khtKskVxPmjWSvgmzhtotJs0aSbKkWU/kTaGWekmznsibQq3ekmY9kTeFWpAlzXoibwq1xkqYNdRmKmnWE3lTqP1R0qwn8qZQW56kWU/kTaF2MUmznsibQm1MkmY9kTeF2mskzXoibwq1fUia9UTeFGpHkDTribwp1CYfadYTeVOofTvSrCfyplBbcaRZT+RNoXbXSLOeyJtCbZiRZj2RN4XaAyPNeiJvCrWtRZr1RN4UaqeKNOuJvCnU5hNp1hN5U6j9JNKsJ/KmUFtEpFmde1PJ6e3hOQ/vZ/0V3rkIPQpf0m/NP2apbgut19s66zq/vab52/XoNWkYwCda6tuLxjRtLyr5fy8af2uyrcOV1jzeXlTH64uatia9qH3STnxV0yAevSqX9XkUuabnUby+6GkUry96HsWvVz2J4ufP/wJCQ7SD",
            "eJztnd1uFEcQhd9lry3U/z3tV4lygRIiISETxdwhvztLws5anq4tbVSuruk5VxhpFk4d4POHoba+n758/ePjt89fn55Pj99P8fT42/fT898fn35+7/nbx3++nR7dw+nT05/nb18eTn99/vLp9OhfHjZP+Zhy/PXk+eOa16dj7D2eQkuXx1Os9fXjvz+ckpkk2UySYiZJNZNkMZOkmUninZ0o3k6UYCeKHc56O6D1dkjr7aDW22GttwNbb4e2wQ5tgx3aBju0DXZoG+zQNtihbbBD22CHtsEObYMd2kY7tI12aBvt0DbaoW3UpG3KdY2SU3wbRZO2TBRN2jJRNGnLRNGkLRNFk7a3oyRN2jJRNGnLRNGkLRNFk7ZMFDu0TXZom+zQNtmhbbJD22SHttkObXOXtn5p5fKiVv3tQKH4S/Tzx+FVoOX//CtMl7kjA3XJOzJQl78jA3UpPDJQl8UjA3WJPDJQl8sjA3XpPDBQ6TJ6ZCBrpC7WSF2skbpYI3WxRupijdTFGqmLNVIXa6Su1khdrZG6WiN1tUbqao3U1RqpqzVSV2ukrtZIXa2RerFG6sUaqRdrpF6skXrRJ/Xtr6At+qRmAumTmgmkT2omkD6pmUD6pL4dqOmTmgmkT2omkD6pmUD6pGYCWSN1s0bqZo3UzRqpmzVSN2uk9s4aqr2TYHXO10RLeZ3o359Cgr4p3PwpJHja1qJCXSrTawzeXx6PMaVNIgmgyiaSIOp9iXJaf2PEXMImkQRSZRNJMFU2kQRUZRNJUFU0UX+1bmgiCarKJpKAsGwifWZzifSZzSUyx+z+Et7QROaY3V/JG5rIHLP7C3rvm6itDhmLa5tEA5jNJBrAbCbRAGYziQYwm0k0gNlMogHMZhINYDaTaACzmUQDmH07UX/Nb2gic8zuL/0NTWSO2f0VwKGJ9Jld0nUzoBS3SaTPbC6RPrO5RPrM5hLpM5tJ1F8WHJpIn9lcIn1mc4n0mc0l0mc2l8gcs/trhUMTmWN2f8lwaCJzzO6vHL5rotbWr9Yk5zdfrRHZPJRNpM9sLpE+s7lE+szmEukzm0ukz2wukT6zuUT6zOYS6TObSSSygiibyByzRZYQZROZY7bIGqJsInVmJ5f9NVFZNonUmc0mUmc2m0id2WwidWZziUSWEWUTqTObTaTObDaROrPZROrMZhOZY7bISqJsInPMFllKlE1kjtkia4n3JfL+uuPm48aPRPYSZRPpM5tLpM9sLpE+s7lE+szmEukzm0ukz2wukT6zuUT6zGYSiSwoyiYyx2yRFUXZROaYLbKkKJtIndnZlfV/smTv4iaROrOzD/6aqG6MTWRP8b5Ewa1f0cohbbbFRBYV70tUyrWj6rcdqTM711iuiZp/kyiIbCrel2hxbU201Ld/1oLIpuKdidq6apnbkjeJ1JldnFv/5bi4+vb/sQX9Pcji/fqrVnx0tx8v8VJoydc6q+s8mkO8oDen+nZvNTj1zwXDJlX/HHPnpOXycGnp9qTetXXU88d5eT3r9vHYViLE1t6+uUzQXx/dSzHqn3H3Uoz6J/69FKPuHzspRn+1+P2K8ee/wFx+ZO9fy0OvmFb88uvpVoPbFKNuY3spRl8Kd1KMdTcdVox1lR1WzETmK1vMROYrW8xE5itbzETmK1vMROYrWoz+GzTspRiYL1EMzJcoBuZLFAPzJYqB+RLFwHyJYmC+RDEwX6IYmG+/GP23udlLMTBfohiYL1EMzJcoBuZLFAPzJYqB+RLFwHyJYmC+RDEw334x+m8WtpdiYL5EMTBfohiYL1EMzJcoBuZLFAPzJYqB+RLFwHyJYmC+/WL033JxL8XAfIliYL5EMTBfohiYL1EMzJcoBuZLFAPzJYqB+RLFwHz7xei/ce1eioH5EsXAfIliYL5EMTBfohiYL1EMzJcoBuZLFAPzJYqB+faL0X/7770UA/MlioH5EsXAfIliYL5EMTBfohiYL1EMzJcoBuZLFAPz7Rejf0RhL8XAfIliYL5EMTBfohiYL1EMzJcoBuZLFAPzJYqB+RLFwHz7xeifonnHYsL68Lkjl5lizs9figkubYqZyXxFi5nJfEWLmcl8RYuZyXxFi5nJfEWLmcl8RYuZyXxFi5nJfEWLmcl8BYuJ+ge99lIMzJcoBuZLFAPzJYqB+RLFwHyJYmC+RDEwX6IYmC9RDMy3X8xUN9xEi4H5EsXAfIliYL5EMTBfohiYL1EMzJcoBuZLFAPzJYqB+faLmeqGm2gxMF+iGJgvUQzMlygG5ksUA/MlioH5EsXAfIliYL5EMTDffjFT3XATLQbmSxQD8yWKgfkSxcB8iWJgvkQxMF+iGJgvUQzMlygG5tsvZqobbqLFwHyJYmC+RDEwX6IYmC9RDMyXKAbmSxQD8yWKgfkSxcB8+8VMdcNNtBiYL1EMzJcoBuZLFDOT+S71Wkxb/GbWmWSWm3UmP+VmnUk5uVlnskhu1pnEkJl1qqtl3Kwz6Rs360xGxs06k2Rxsx7Im6Y66sXNeiBvmur0FjfrgbxpqgNZzKxT3bziZj2QN011mYqb9UDeNNX9KG7WA3nTVFeeuFkP5E1T3WLiZj2QN011MYmb9UDeNNVdI27WA3nTVNeHuFkP5E1T3QjiZj2QN011yYeb9UDeNNW9HW7WA3nTVFdxuFkP5E1T3a7hZj2QN011YYab9UDeNNUdGG7W43hTmupaCzfrcbwpTXVThZv1ON6U3HG8KU11zISb9TjelKY6OcLNehxvStYPg+Tkfz1ck3s968/w1o933Arvnf9A8OOSPvi4viin/14UP3R/cxZ3maKG64tKuLyo+6vMvahfL/uqrrHRr3p5+QHp9MWF",
            "eJztndGO3MYRRf9lnwWDTXY3Sf1KkAchcQADhhxEfjP07xkpO5zBsO8UJqitLhbvk9cAR3vrSLpztLvV/dfb73/848ufv/3x9dvb57/eprfPf/vr7du/v3z98X/f/vzynz/fPg+f3n79+s/Lf79/evvXb7//+vY5ff+0eypNuUzvT14+nsv29DS1Hs/jmq+P52me7x//+6e37CZJcZOkukkyu0myuEmyukmSBj9Rkp8oo58ofno2+Sna5Kdpk5+qTX66Nvkp2+SnbUc/bTv6advRT9uOftp29NO2o5+2Hf207einbUc/bTv6advJT9tOftp28tO2k5+2nSzbNpd5i1Ly9BjFsm2FKJZtK0SxbFshimXbClEs2/Z5lGzZtkIUy7YVoli2rRDFsm2FKH7aNvtp2+ynbbOfts1+2jb7advip21Ls22nmq+fY5rT8jzQWNM1+uXj8S7Q8v98F6bZuT0DNZu3Z6Bm//YM1GzhnoGaXdwzULORewZq9nLPQM127hioNju6ZyBvTV29NXX11tTVW1NXb01dvTV19dbU1VtTV29NPXtr6tlbU8/emnr21tSzt6aevTX17K2pZ29NPXtr6tlbUy/emnrx1tSLt6ZevDX1Yt/Uz7+Cttg3tRDIvqmFQPZNLQSyb2ohkH1TPw+02je1EMi+qYVA9k0tBLJvaiGQt6ZevTX16q2pV29NvXpr6tVbU6fBW1WnQaOrS7klWup9op+fQqN98/j0U2j06bqBGudlFrhOY0rXx6cp510ijULVTaTRqK8lKnn7gzGVOu4SaVSqbiKNTtVNpFGquok0WlU1UXu1rmsijVbVTaRRwrqJ7DtbSmTf2VIid53dXsLrmshdZ7dX8romctfZ7QW9j020bg451WHdJerQ2UKiDp0tJOrQ2UKiDp0tJOrQ2UKiDp0tJOrQ2UKiDp0tJOrQ2c8Ttdf8uiZy19ntpb+uidx1dnsFsGsi+86+/dqXj+uwS2Tf2VIi+86WEtl3tpTIvrOFRO1lwa6J7DtbSmTf2VIi+86WEtl3tpTIXWe31wq7JnLX2e0lw66J3HV2e+XwQxOt6/bVmjyk3VdrVDYPdRPZd7aUyL6zpUT2nS0lsu9sKZF9Z0uJ7DtbSmTf2VIi+84WEqmsIOomctfZKkuIuoncdbbKGqJuIvPOzkNJt0R12SUy72wxkXlni4nMO1tMZN7ZUiKVZUTdROadLSYy72wxkXlni4nMO1tM5K6zVVYSdRO562yVpUTdRO46W2Ut8bVEKd123NK08yOVvUTdRPadLSWy72wpkX1nS4nsO1tKZN/ZUiL7zpYS2Xe2lMi+s4VEKguKuoncdbbKiqJuInedrbKkqJvIvLPLULefZClpmHaJzDu7pDHdEs07Y1PZU3wt0ThsX9EqY95ti6ksKr6WqNYbo/tf/JrIvLPLPNVbojU9JBpVNhVfS7QM65ZomR//ro0qm4ovJlq3VcuyLmWXyLyz6zBs3zmuw/z4c2yj/R5kTWn7XatpGp4/Xqcr0FpuOOeh8WgZp2v1ljw/7q2Og/l7QbdJzd9jXpy0Xh+ua34+aRrWbdTLx2W5n3X/+LRujTCt6+PhMqP9+uhRwJi/4x4FjPkb/1HAmPvHQcDYrxZ/HJh0+QfM9VdO6V4eWmDWmpb3p9d5HHZgzG3sKGDspfAgYLy7aTcw3lW2G5hA5qsLJpD56oIJZL66YAKZry6YQOarCsb+gIajgKH5AjA0XwCG5gvA0HwBGJovAEPzBWBovgAMzReAofm2wdgfc3MUMDRfAIbmC8DQfAEYmi8AQ/MFYGi+AAzNF4Ch+QIwNN82GPvDwo4ChuYLwNB8ARiaLwBD8wVgaL4ADM0XgKH5AjA0XwCG5tsGY3/k4lHA0HwBGJovAEPzBWBovgAMzReAofkCMDRfAIbmC8DQfNtg7A+uPQoYmi8AQ/MFYGi+AAzNF4Ch+QIwNF8AhuYLwNB8ARiabxuM/fHfRwFD8wVgaL4ADM0XgKH5AjA0XwCG5gvA0HwBGJovAEPzbYOxv0ThKGBovgAMzReAofkCMDRfAIbmC8DQfAEYmi8AQ/MFYGi+bTD2V9F8IJhxe/jCaCgCmMvzVzDjkHdgIpmvKphI5qsKJpL5qoKJZL6qYCKZryqYSOarCiaS+aqCiWS+qmAima8imMn+Qq+jgKH5AjA0XwCG5gvA0HwBGJovAEPzBWBovgAMzReAofm2wYS6w00VDM0XgKH5AjA0XwCG5gvA0HwBGJovAEPzBWBovgAMzbcNJtQdbqpgaL4ADM0XgKH5AjA0XwCG5gvA0HwBGJovAEPzBWBovm0woe5wUwVD8wVgaL4ADM0XgKH5AjA0XwCG5gvA0HwBGJovAEPzbYMJdYebKhiaLwBD8wVgaL4ADM0XgKH5AjA0XwCG5gvA0HwBGJpvG0yoO9xUwdB8ARiaLwBD8wVgIpnvMt/ArEvazRpJZqVZI/mpNGsk5ZRmjWSR0qyRxFCYNdStZdKskfRNmjWSkUmzRpIsadYTeVOoS72kWU/kTaGu3pJmPZE3hbogS5g11J1X0qwn8qZQN1NJs57Im0LdHyXNeiJvCnXLkzTribwp1F1M0qwn8qZQNyZJs57Im0LdayTNeiJvCnX7kDTribwp1B1B0qwn8qZQN/lIs57Im0LdtyPNeiJvCnUrjjTribwp1N010qwn8qZQN8xIs57Im0LdAyPNeh5vyqFua5FmPY835VB3qkiznseb8nAeb8qhLjORZj2PN+VQV45Is57Hm7L3i0FKTu8Pz3m4n/VHeO+XdzwP3zabeR6u4Ze8SuHTsIWvYxHC53HN18fz5RM9/lkAN1v0TNS2hJ6J2u/lPRO133F7Jmq/L/ZM1H736pmo/R7TM1H7naBjInBCfc9E7jobnMneM5G7zgankPdM5K6zwbnbPRO562xw0nTPRO46G5yt3DORu84Gpwn3TOSus8H5uT0TuetscGJsz0TuOhuckdozkbvOBqeC9kzkrrPBOZg9E7nrbHDyY89E9p2dy/b1xFzytEtk39lSIvvOlhLZd7aUyL6zhUTgPLueiew7W0pk39lSIvvOlhLZd7aUyF1ng/O/eiZy19ngLK2eidx1NjiXqmcid50Nznh6LVEpt0RLvU/081NolHAen34KjVZ96RvT05iu32tO05TzLpFGq+om0mjV1xKVvP3BmEodd4k0WlU3kUar6ibSaFXVRODUmp6JNFpVN5FGq+om0ihh3UT2nS0lsu9sKZG7zgbnh/RM5K6zwVkcHROBEzN6JurQ2evmkFMd1l2iDp0tJOrQ2UKiDp0tJOrQ2UKiDp0tJOrQ2UKiDp0tJOrQ2c8TgW39noncdTbYfO+ZyF1ngy3ynoncdTbYyP7IRLelicvHddglsu9sKZF9Z0uJ7Dv7eaICNoV7JrLvbCmRfWdLiew7W0pk39lSIvvOlhJ56+wCdjZ7JvLW2QXsP3ZMBJYaeyay7+x13b5ak4f0+NWaorKpqJvIvrOlRPadLSWy72wpkX1nS4nsO1tKZN/ZUiL7zhYSqWwq6iZy19kqm4q6idx1tsqmom4id52tsqn4UqI8lHRLVJddIvPOFhOZd7aYyLyzpUQqm4q6icw7W0xk3tliIvPOFhOZd7aYyLyzxUTuOltlU1E3kbvOVtlUVE2ksqmom8i+s1O67bylaedHKpuKuonsO1tKZN/ZUiL7zpYS2Xe2lMi+s6VE9p0tJbLvbCGRyqaibiJ3na2yqaibyF1nq2wq6iZy19kqm4ovJSpD3X6SpaRh2iUy7+ySxnRLNO+MTWVT8bVE47B9RauM+XFbrKhsKr6WqNYbo/szUt8TqWwqvpZonuot0Zp2icw7uyzDdtRrWebd3zWVTcUXE63bqmVZl7JLZN7ZdRi27xzXYX78ObZivwf54knK0zVILTeczZOUyzhdq/cioo97q8V+v7LbpObvMR93OvawbqNePi7L/az7x6d1a4RpXR8Pmyn266NHAWP+jnsUMOZv/AcBY7/TexQw5hr0gVcTXP4Bc/2VU7qXhxaYtabl/el1HocdGHMbOwoYeyk8CBjvbtoNjHeV7QYmkPnqgglkvrpgApmvLphA5qsKxv5khKOAofkCMDRfAIbmC8DQfAEYmi8AQ/MFYGi+AAzNF4Ch+bbB2J8vcxQwNF8AhuYLwNB8ARiaLwBD8wVgaL4ADM0XgKH5AjA03yaYan9K11HA0HwBGJovAEPzBWBovgAMzReAofkCMDRfAIbmC8DQfNtg7M86PAoYmi8AQ/MFYGi+AAzNF4Ch+QIwNF8AhuYLwNB8ARiabxuM/YmxRwFD8wVgaL4ADM0XgKH5AjA0XwCG5gvA0HwBGJovAEPzbYOxP3f7KGBovgAMzReAofkCMDRfAIbmC8DQfAEYmi8AQ/MFYGi+bTD2txccBQzNF4Ch+QIwNF8AhuYLwNB8ARiaLwBD8wVgaL4ADM23Dcb+DpijgIlkvuP28IXRUAQwl+evYMYh78BEMl9VMJHMVxVMJPNVBRPJfFXBRDJfVTCRzFcVTCTzVQUTyXw1wdjfpHUUMDRfAIbmC8DQfAEYmi8AQ/MFYGi+AAzNF4Ch+QIwNN82mEh3uOmCofkCMDRfAIbmC8DQfAEYmi8AQ/MFYGi+AAzNF4Ch+bbBhLrDTRUMzReAofkCMDRfAIbmC8DQfAEYmi8AQ/MFYGi+AAzNtw0m1B1uqmBovgAMzReAofkCMDRfAIbmC8DQfAEYmi8AQ/MFYGi+TTBzqDvcVMHQfAEYmi8AQ/MFYGi+AAzNF4Ch+QIwNF8AhuYLwNB822BC3eGmCobmC8DQfAEYmi8AQ/MFYCKZ7zLfwKxL2s0aSWalWSP5qTRrJOWUZo1kkcKsoa44k2aN5HrSrJH0TZo1kpFJs0aSLGnWE3lTqEu9pFlP5E2hrt6SZj2RN4W6IEua9UTeFOoaK2nWE3lTqMumpFlP5E2hroSSZj2RN4W6uEma9UTeFOp6JWnWE3lTqEuQpFlP5E2hriqSZj2RN4W6UEia9UTeFOraH2nWE3lTqMt5pFlP5E2hrtCRZj2RN4W66Eaa9UTeFOo6GmnWE3lTqEtjpFlP5E2hrnaRZj2RN4W6gEWa9UTeFOqaFGnWE3lTqMtMpFlP5E2hrhyRZj2RN3m/GKTk9P7wnIf7WX+Gdy5Cz8KnIf3S7Mq01PcXjWnaXlTy/140/dL8i1iH6xTzeHtRHa8vav6Jll7UXiYVX9X8TXn2qlzH11Hkml9H8eNFL6P48aLXUfx81Ysovn//L6+CHbg=",
            "eJztnd1u20YQhd9F10bA/ef6VYpeGG0KBAicovad4XevklqUIO5ooGI8O1yeqygAGZ85tj99kT3at8P3H388vX778fxyeHw7hMPjb2+Hl7+fnn/+7eX16Z/Xw+P0cPj6/Ofxz/eHw1/fvn89PLr3h9VVLsQUPq48Pi5puTqE1uXR13i6PIZSLi///eEQzSRJZpJkM0mKmSSzmSTVTBI32Yni7ETxdqLY4ayzA1pnh7TODmqdHdY6O7B1dmjr7dDW26Gtt0Nbb4e23g5tvR3aeju09XZo6+3Q1tuhbbBD22CHtsEObYMd2gZN2sZUligphusomrRlomjSlomiSVsmiiZtmSiatL0dJWrSlomiSVsmiiZtmSiatGWi2KFttEPbaIe20Q5tox3aRju0TXZom5q0jW72HzdFH+JFoJ+3NKkYw5RPt0RXbs/gsztNe3zsL2aY/88Pbpps7BmoSciegZqc7BmoScuegZrM7BmoSc6egZr87BgoNynaM1CbpR0DWSN1tkbqbI3U2RqpszVSZ2ukztZIna2RulgjdbFG6mKN1MUaqYs1UhdrpC7WSF2skbpYI3WxRurZGqlna6SerZF61if17ZeUZn1SM4H0Sc0E0ic1E0if1EwgfVIzgfRJfTtQ1Sc1E0if1EwgfVIzgayRulojdbVG6mqN1NUaqas1UldrpHaTBKpTOiea82WiXx9CAr7R3/wQEjitS1G+zIXpNXjnTpeHEOMqkQRPZRNJAPW+RCkuXxghZb9KJEFU2UQSSJVNJMFU2UQSUJVNJEFV0UTt5beuiSQgLJtIn9lcIn1mc4nMMbu9H9c1kTlmt7fluiYyx+z27tznJqqLQ4Y81etE7RW6rok6MJtJ1IHZTKIOzGYSdWA2k6gDs5lEHZjNJOrAbCZRB2Yzicwxu72I1zWROWa31/K6JjLH7PaS3qcmyvH8m/I5T6tE+szmEukzm0ukz2wukT6zuUT6zGYStdf5uibSZzaXSJ/ZXCJ9ZnOJzDG7vfHXNZE5Zrf3/7omMsfs9jbgpyaqdXm1Jk5u9WpNeymwayJ9ZnOJ9JnNJdJnNpdIn9lcIn1mc4n0mc0l0mc2l0if2Vwic8wWWUGUTWSO2SJLiLKJzDFbZA3xrkRxSu6cKM+rROrMZhOpM5tNpM5sNpE6s9lE6szmEoksI8omUmc2m0id2WwidWazicwxW2QjUTaROWaL7CTKJjLHbJGtxPsSOXdecXNh5Ucia4myifSZzSXSZzaXSJ/ZXCJ9ZnOJ9JnNJdJnNpdIn9lcIn1mc4nMMVtkQVE2kTlmi6woyiYyx2yRJcW7EqUpL7/JktwUVonUmZ2cd+dEZWVsImuK9yXy0/KKVvJxtS0msqd4X6Kczx0Vt+5IndmphHxOVN0qkTqz0zzVJdFcrr/XvMim4p2J6rJqmeqcVonUmZ2nafnJcZ7K9e+xef09yOzc8lnLLky3L8/hVGhO5zrL1Lg0+XBCb4rlem/V6+9XdptU/Tnmzknz6eJc4+1J3VSXUY+P03w56/ryUBcihFrLqhj1p7qtFKP+jLuVYtSf+LdSjLp/bKUYdQ36vGLc8T8wp3/ZuUt5aBVTs5s/rq7FT9fF6G84b6UYfSncSDHW3bRbMdZVtlsxA5mvbDEDma9sMQOZr2wxA5mvbDEDma9sMTDfdjH67xOxlWJgvkQxMF+iGJgvUQzMlygG5ksUA/MlioH5EsXAfIliYL7tYvTfbWcrxcB8iWJgvkQxMF+iGJgvUQzMlygG5ksUA/MlioH5EsXAfNvF6L9n2VaKgfkSxcB8iWJgvkQxMF+iGJgvUQzMlygG5ksUA/MlioH5tovRf+fHrRQD8yWKgfkSxcB8iWJgvkQxMF+iGJgvUQzMlygG5ksUA/NtF6P//rlbKQbmSxQD8yWKgfkSxcB8iWJgvkQxMF+iGJgvUQzMlygG5tsuRv9dyLdSDMyXKAbmSxQD8yWKgfkSxcB8iWJgvkQxMF+iGJgvUQzMt12M/lkOWykG5ksUA/MlioH5EsXAfIliYL5EMTBfohiYL1EMzJcoZiTz9cvFx46mxBRzvP5UjJ/idTH6J+JspZiRzFe0mJHMV7SYkcxXtJiRzFe0mJHMV7SYkcxXtJiRzFe0mJHMV7QYmG+zmKB/rthWioH5EsXAfIliYL5EMTBfohiYL1EMzJcoBuZLFAPzJYqB+baLGeoMN9FiYL5EMTBfohiYL1EMzJcoBuZLFAPzJYqB+RLFwHyJYmC+7WKGOsNNtBiYL1EMzJcoBuZLFAPzJYqB+RLFwHyJYmC+RDEwX6IYmG+7mKHOcBMtBuZLFAPzJYqB+RLFwHyJYmC+RDEwX6IYmC9RDMyXKAbm2y5mqDPcRIuB+RLFwHyJYmC+RDEwX6IYmC9RDMyXKAbmSxQD8yWKgfm2ixnqDDfRYmC+RDEwX6KYkcx3Ludi6uxWs44ks9ysI/kpN+tIysnNOpJFcrOOJIbcrCO5HjPrUAeRcbOOZGTcrCNJFjfrjrxpqEO9uFl35E1DHb3FzbojbxrqgCxu1h1501DHWHGz7sibhjpsipt1R9401JFQ3Kw78qahDm7iZt2RNw11vBI36468aahDkLhZd+RNQx1VxM26I28a6kAhbtYdedNQx/5ws+7Im4Y6nIebdUfeNNQROtysO/KmoQ664WbdkTcNdRwNN+uOvGmoQ2O4WXfkTUMd7cLNuh9vikMdwMLNuh9vikMdk8LNuh9vitN+vCkOdT4JN+t+vCkOdYoIN6txb0rRfVxc4nQ566/wxkXoVvjkvjS/pVxeDrSu5+Osc/m4p/mleeseN03EB5pPLXkXlptS/O8m/6X5hZGnU1vFn2/K/nRT8xPC3dQ+aoS9q2lL9F3v7/8Ch4iL3g==",
            "eJzV3d1q2zAYxvF78XEY1rfUWxk7KFsHhdKOtWel9z6vi5U0VvWSSXn05GgdKOFvkfzsenmz1+nh6fvty/3T4/N08zqZ6ebr6/T86/bx79+eX25/v0w38266e/yx/Pm2m37eP9xNN+ptt1mljHVmv3L5Obi82pjScquTXZdbE8Lx8m+7ydKUOJoST1MSaEoiTUmiKVEzT4riSdE8KTzOKh5oFY+0iodaxWOt4sFW8WirebTVPNpqHm01j7aaR1vNo63m0VbzaKt5tNU82hoebQ2PtoZHW8OjreHR1iC1tS7kFGfNaQpSWyEFqa2QgtRWSEFqW0+xSG2FFKS2QgpSWyEFqa2QgtRWSOHR1vJoa3m0tTzaWh5tHY+2jkdbV9TWprh/jPO2mhPMnPZLg9GHtSb+zz8GFb0dFVMUd1RM0dxRMUV1R8UU3R0VU5R3VEzR3kExvqjvqJiiv6NimAT2TAJ7JoE9k8CeSWDPJLBnEtgzCRyYBA5MAgcmgQOTwIFJ4MAkcGASODAJHJgEDkwCRyaBI5PAkUngyCRwZBI4MgkcsQLXb6NFrMBCDFZgIQYrcD0mYQUWYrACCzFYgYUYrMBCDFZgIQYrsBDDJHBiEjgxCZyYBFYzE8FqZjJYzUwIq7lZYWdzTXTHNe9P3+yqVbWnb5Yy+fXpbQz1vQwpri1RzWHT0gxlx5ZmJ89oiYcXZDTab1qamezY0qxkv5byiNmglmYhO7Y0+9ixpVnHji3NlHZsQbortSDdlVqI3C2Pmg1qIXK3PGw2qIXI3fK42cVanM8twWxasO7WW7Du1luw7tZbsO7WW7Du1luw7tZbsO5WW8pjZ4NasO7WW4jcLU+eDWohcrc8ezaohcjd8vTZpVrsvN7Kivbjja/3Fqi7QgvU3XpLeQBtUAvUXaEF6q7QAnVXaIG6K7RA3RVaoO4KLUTulgfRBrUQuVseRRvUQuRu+zDaOS3BrxN3MYSwaYG6K7RA3RVaoO4KLVB3hRaou0IL1F2hBepuvaV9CK1jC9RdoYXI3fYJtI4tRO62z591bCFyt3367JyWqPI9j2g29zzah886tkDdrbe0j551bIG6K7RA3RVaoO4KLVB3hRaou0IL1F2hhcjd9pGzji1E7rYPnHVsIXK3fdzsrJaQP1sR0+b6pX3arGML1t16C9bdegvW3XoL1t16C9bdegvW3WpL+5hZxxasu/UWInfbZ8w6thC52z5h1rGFyN32+bIzWpTSs96vXn7WalODlFeuQdor1ej2CbOuNUh/5RqkwHIN0mC5BqmwXIN0WK5BSizXMFmsoVNscg2VxdBJNrmGymLoNNtSYNOhJs2bGqzFZo65xvjT6V0NnWhbCmL+phll9bYGa7G1RzUhbmqwFseUv256+eVg+7rBWpx8ft0sb6/TO3saOtm2FOQRdLVQd/p5Jg2dbVsKdPZm4eb0NxgNnW5bCozLNUZt9IPOty0F7rA3xpv6cuvXl7yNh7efT4WlTpv1zers8afg9/9PG9T4YUcJPXecd5Qun4SdDvWj9CGup0gf1Yej3C42KY9MmnR8u2C/JdAT2HVsCfQseh1bAj2VX8eWQK8nrmNLsBc1l9qS4Nx6RRBcUvUt0UvofrF2cbsl2Cura9gS6BDtBbfEh/ytUWHzpZ8aOp477iiJLxtNLndHV4LLUb6HE18J1sLVbL4Uz8Uqrj36SHFn/z3IfSnTnH+Bd+7wpnZufVAZL+FBn9xKkx5Vfr98+qi3tz+Nnqsf",
            "",
            ""
        ],
        "fileMap": {
            "1": {
                "source": "// A contract used along with `Child` contract to test nested calls.\ncontract Parent {\n    use dep::aztec::oracle::compute_selector::compute_selector;\n\n    #[aztec(private)]\n    fn constructor() {}\n\n    // Private function to call another private function in the targetContract using the provided selector\n    #[aztec(private)]\n    fn entryPoint(\n        targetContract: Field,\n        targetSelector: Field,\n    ) -> Field {\n        // Call the target private function\n        let return_values = context.call_private_function(targetContract, targetSelector, [0]);\n\n        // Copy the return value from the call to this function's return values\n        return_values[0]\n    }\n\n    // Public function to directly call another public function to the targetContract using the selector and value provided\n    #[aztec(public)]\n    fn pubEntryPoint(\n        targetContract: Field,\n        targetSelector: Field,\n        initValue: Field\n    ) -> Field {\n        let return_values = context.call_public_function(targetContract, targetSelector, [initValue]);\n\n        return_values[0]\n    }\n\n    // Same as pubEntryPoint, but calls the target contract twice, using the return value from the first invocation as the argument for the second.\n    #[aztec(public)]\n    fn pubEntryPointTwice(\n        targetContract: Field,\n        targetSelector: Field,\n        initValue: Field\n    ) -> Field {\n        let returnValue = context.call_public_function(targetContract, targetSelector, [initValue])[0];\n        let return_values = context.call_public_function(targetContract, targetSelector, [returnValue]);\n\n        return_values[0]\n    }\n\n    // Private function to enqueue a call to the targetContract address using the selector and argument provided\n    #[aztec(private)]\n    fn enqueueCallToChild(\n        targetContract: Field,\n        targetSelector: Field,\n        targetValue: Field,\n    ) {\n        context.call_public_function(targetContract, targetSelector, [targetValue]);\n    }\n\n    // Private function that enqueues two calls to a child contract: \n    // - one through a nested call to enqueueCallToChild with value 10,\n    // - followed by one issued directly from this function with value 20.\n    #[aztec(private)]\n    fn enqueueCallsToChildWithNestedFirst(\n        targetContract: Field,\n        targetSelector: Field,\n    ) {\n        let enqueueCallToChildSelector = compute_selector(\"enqueueCallToChild(Field,Field,Field)\");\n        let _ret = context.call_private_function(context.this_address(), enqueueCallToChildSelector, [targetContract, targetSelector, 10]);\n        context.call_public_function(targetContract, targetSelector, [20]);\n    }\n\n    // Private function that enqueues two calls to a child contract: \n    // - one issued directly from this function with value 20,\n    // - followed by one through a nested call to enqueueCallToChild with value 10.\n    #[aztec(private)]\n    fn enqueueCallsToChildWithNestedLast(\n        targetContract: Field,\n        targetSelector: Field,\n    ) {\n        context.call_public_function(targetContract, targetSelector, [20]);\n        let enqueueCallToChildSelector = compute_selector(\"enqueueCallToChild(Field,Field,Field)\");\n        let _ret = context.call_private_function(context.this_address(), enqueueCallToChildSelector, [targetContract, targetSelector, 10]);\n    }\n\n    // Private function to enqueue a call to the targetContract address using the selector and argument provided\n    #[aztec(private)]\n    fn enqueueCallToChildTwice(\n        targetContract: Field,\n        targetSelector: Field,\n        targetValue: Field,\n    ) {\n        // Enqueue the first public call\n        context.call_public_function(targetContract, targetSelector, [targetValue]);\n        // Enqueue the second public call\n        context.call_public_function(targetContract, targetSelector, [targetValue + 1]);\n    }\n\n    // Private function to enqueue a call to the pubEntryPoint function of this same contract, passing the target arguments provided\n    #[aztec(private)]\n    fn enqueueCallToPubEntryPoint(\n        targetContract: Field,\n        targetSelector: Field,\n        targetValue: Field,\n    ) {\n        let pubEntryPointSelector = compute_selector(\"pubEntryPoint(Field,Field,Field)\");\n        let thisAddress = context.this_address();\n        let _void = context.call_public_function(thisAddress, pubEntryPointSelector, [targetContract, targetSelector, targetValue]);\n    }\n\n    // Private function to enqueue two calls to the pubEntryPoint function of this same contract, passing the target arguments provided\n    #[aztec(private)]\n    fn enqueueCallsToPubEntryPoint(\n        targetContract: Field,\n        targetSelector: Field,\n        targetValue: Field,\n    ) {\n        let pubEntryPointSelector = compute_selector(\"pubEntryPoint(Field,Field,Field)\");\n        let thisAddress = context.this_address();\n        \n        context.call_public_function(thisAddress, pubEntryPointSelector, [targetContract, targetSelector, targetValue]);\n\n        context.call_public_function(thisAddress, pubEntryPointSelector, [targetContract, targetSelector, targetValue + 1]);\n    }\n}\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/parent_contract/src/main"
            },
            "33": {
                "source": "use crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    HISTORIC_BLOCK_DATA_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\n\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)[0]\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_data: HistoricBlockData,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)[0]\n    }\n}\n\n// docs:start:historic-block-data\nstruct HistoricBlockData {\n    private_data_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    blocks_tree_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:historic-block-data\n\nimpl HistoricBlockData {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    fn serialize(self) -> [Field; HISTORIC_BLOCK_DATA_LENGTH] {\n        [\n            self.private_data_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.blocks_tree_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    fn empty() -> Self {\n        Self { private_data_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, blocks_tree_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)[0]\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        dep::std::hash::pedersen_with_separator(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)[0]\n    }\n\n    fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)[0]\n    }\n\n    fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    prover_address: Field,\n\n    // TODO: include globals in here and check them elsewhere\n    // https://github.com/AztecProtocol/aztec-packages/issues/1567\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        // We do not include block_data since it's not in the cpp hash\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_data.serialize()); // see https://github.com/AztecProtocol/aztec-packages/issues/1473\n        inputs.push(self.prover_address);\n\n        dep::std::hash::pedersen_with_separator(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\nfn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = dep::std::hash::pedersen_with_separator(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS)[0];\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        dep::std::hash::pedersen_with_separator(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)[0]\n    }\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/abi"
            },
            "38": {
                "source": "use crate::constants_gen::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    HistoricBlockData,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_data: HistoricBlockData,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_data: inputs.block_data,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.block_data,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        self.nullified_commitments.push(nullified_commitment);\n    }\n\n    // docs:start:context_message_portal\n    fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, self.this_address(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    \n                    is_delegate_call : fields[8] as bool,\n                    is_static_call : fields[9] as bool,\n                    is_contract_deployment: fields[10] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[11],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 12),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 16),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 48),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 64),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 80),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 96),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 100),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 104),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 106),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 108),\n                encrypted_log_preimages_length: fields[110],\n                unencrypted_log_preimages_length: fields[111],\n                block_data: HistoricBlockData {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    private_data_tree_root : fields[112],\n                    nullifier_tree_root : fields[113],\n                    contract_tree_root : fields[114],\n                    l1_to_l2_messages_tree_root : fields[115],\n                    blocks_tree_root : fields[116],\n                    public_data_tree_root: fields[117],\n                    global_variables_hash: fields[118],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[119], fields[120]),\n                    constructor_vk_hash : fields[121],\n                    function_tree_root : fields[122],\n                    contract_address_salt : fields[123],\n                    portal_contract_address : fields[124],\n                },\n                chain_id: fields[125],\n                version: fields[126],\n            },\n            is_execution_request: fields[127] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    \n                    is_delegate_call : fields[8] as bool,\n                    is_static_call : fields[9] as bool,\n                    is_contract_deployment: fields[10] as bool,\n                },\n                args_hash: fields[11],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_data: HistoricBlockData::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_data: inputs.block_data,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.inputs.block_data,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, this, msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/context"
            },
            "54": {
                "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/arguments"
            },
            "55": {
                "source": "use crate::constants_gen::CALL_PRIVATE_FUNCTION_RETURN_SIZE;\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(\n    _contract_address: Field,\n    _function_selector: Field,\n    _args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {}\n\nunconstrained fn call_private_function_internal(\n    contract_address: Field,\n    function_selector: Field,\n    args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {\n    call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n    )\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/call_private_function"
            },
            "62": {
                "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 6\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 12;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field,\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained fn enqueue_public_function_call_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/enqueue_public_function_call"
            },
            "63": {
                "source": "use crate::constants_gen::RETURN_VALUES_LENGTH;\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained fn call_public_function_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/public_call"
            },
            "67": {
                "source": "#[oracle(computeSelector)]\nfn compute_selector_oracle<T>(_selector: T, _size: Field) -> Field {}\n\nunconstrained fn compute_selector<T>(signature: T) -> Field {\n  compute_selector_oracle(signature, 0)\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/compute_selector"
            },
            "69": {
                "source": "use crate::abi::FunctionData;\nuse crate::abi::PrivateCircuitPublicInputs;\nuse crate::constants_gen::GENERATOR_INDEX__CALL_STACK_ITEM;\n\nstruct PrivateCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PrivateCallStackItem {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)[0]\n    }\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/private_call_stack_item"
            },
            "70": {
                "source": "use crate::{\n    abi,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)[0]\n    }\n}\n\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/public_call_stack_item"
            },
            "80": {
                "source": "\nstruct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialised() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/types/vec"
            }
        }
    }
}
